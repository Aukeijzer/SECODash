<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Octokit.GraphQL</name>
    </assembly>
    <members>
        <member name="T:Octokit.GraphQL.Model.AbortQueuedMigrationsInput">
            <summary>
            Autogenerated input type of AbortQueuedMigrations
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AbortQueuedMigrationsInput.OwnerId">
            <summary>
            The ID of the organization that is running the migrations.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AbortQueuedMigrationsInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AbortQueuedMigrationsPayload">
            <summary>
            Autogenerated return type of AbortQueuedMigrations
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AbortQueuedMigrationsPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AbortQueuedMigrationsPayload.Success">
            <summary>
            Did the operation succeed?
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AcceptEnterpriseAdministratorInvitationInput">
            <summary>
            Autogenerated input type of AcceptEnterpriseAdministratorInvitation
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AcceptEnterpriseAdministratorInvitationInput.InvitationId">
            <summary>
            The id of the invitation being accepted
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AcceptEnterpriseAdministratorInvitationInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AcceptEnterpriseAdministratorInvitationPayload">
            <summary>
            Autogenerated return type of AcceptEnterpriseAdministratorInvitation
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AcceptEnterpriseAdministratorInvitationPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AcceptEnterpriseAdministratorInvitationPayload.Invitation">
            <summary>
            The invitation that was accepted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AcceptEnterpriseAdministratorInvitationPayload.Message">
            <summary>
            A message confirming the result of accepting an administrator invitation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AcceptTopicSuggestionInput">
            <summary>
            Autogenerated input type of AcceptTopicSuggestion
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AcceptTopicSuggestionInput.RepositoryId">
            <summary>
            The Node ID of the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AcceptTopicSuggestionInput.Name">
            <summary>
            The name of the suggested topic.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AcceptTopicSuggestionInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AcceptTopicSuggestionPayload">
            <summary>
            Autogenerated return type of AcceptTopicSuggestion
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AcceptTopicSuggestionPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AcceptTopicSuggestionPayload.Topic">
            <summary>
            The accepted topic.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IActor">
            <summary>
            Represents an object which can take actions on GitHub. Typically a User or Bot.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IActor.AvatarUrl(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            A URL pointing to the actor's public avatar.
            </summary>
            <param name="size">The size of the resulting square image.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.IActor.Login">
            <summary>
            The username of the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IActor.ResourcePath">
            <summary>
            The HTTP path for this actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IActor.Url">
            <summary>
            The HTTP URL for this actor.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ActorLocation">
            <summary>
            Location information for an actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ActorLocation.City">
            <summary>
            City
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ActorLocation.Country">
            <summary>
            Country name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ActorLocation.CountryCode">
            <summary>
            Country code
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ActorLocation.Region">
            <summary>
            Region name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ActorLocation.RegionCode">
            <summary>
            Region or state code
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ActorType">
            <summary>
            The actor's type.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ActorType.User">
            <summary>
            Indicates a user actor.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ActorType.Team">
            <summary>
            Indicates a team actor.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddAssigneesToAssignableInput">
            <summary>
            Autogenerated input type of AddAssigneesToAssignable
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddAssigneesToAssignableInput.AssignableId">
            <summary>
            The id of the assignable object to add assignees to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddAssigneesToAssignableInput.AssigneeIds">
            <summary>
            The id of users to add as assignees.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddAssigneesToAssignableInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddAssigneesToAssignablePayload">
            <summary>
            Autogenerated return type of AddAssigneesToAssignable
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddAssigneesToAssignablePayload.Assignable">
            <summary>
            The item that was assigned.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddAssigneesToAssignablePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddCommentInput">
            <summary>
            Autogenerated input type of AddComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddCommentInput.SubjectId">
            <summary>
            The Node ID of the subject to modify.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddCommentInput.Body">
            <summary>
            The contents of the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddCommentInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddCommentPayload">
            <summary>
            Autogenerated return type of AddComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddCommentPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddCommentPayload.CommentEdge">
            <summary>
            The edge from the subject's comment connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddCommentPayload.Subject">
            <summary>
            The subject
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddCommentPayload.TimelineEdge">
            <summary>
            The edge from the subject's timeline connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddDiscussionCommentInput">
            <summary>
            Autogenerated input type of AddDiscussionComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddDiscussionCommentInput.DiscussionId">
            <summary>
            The Node ID of the discussion to comment on.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddDiscussionCommentInput.ReplyToId">
            <summary>
            The Node ID of the discussion comment within this discussion to reply to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddDiscussionCommentInput.Body">
            <summary>
            The contents of the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddDiscussionCommentInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddDiscussionCommentPayload">
            <summary>
            Autogenerated return type of AddDiscussionComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddDiscussionCommentPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddDiscussionCommentPayload.Comment">
            <summary>
            The newly created discussion comment.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddDiscussionPollVoteInput">
            <summary>
            Autogenerated input type of AddDiscussionPollVote
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddDiscussionPollVoteInput.PollOptionId">
            <summary>
            The Node ID of the discussion poll option to vote for.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddDiscussionPollVoteInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddDiscussionPollVotePayload">
            <summary>
            Autogenerated return type of AddDiscussionPollVote
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddDiscussionPollVotePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddDiscussionPollVotePayload.PollOption">
            <summary>
            The poll option that a vote was added to.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddedToMergeQueueEvent">
            <summary>
            Represents an 'added_to_merge_queue' event on a given pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddedToMergeQueueEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddedToMergeQueueEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddedToMergeQueueEvent.Enqueuer">
            <summary>
            The user who added this Pull Request to the merge queue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddedToMergeQueueEvent.MergeQueue">
            <summary>
            The merge queue where this pull request was added to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddedToMergeQueueEvent.PullRequest">
            <summary>
            PullRequest referenced by event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddedToProjectEvent">
            <summary>
            Represents a 'added_to_project' event on a given issue or pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddedToProjectEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddedToProjectEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddedToProjectEvent.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddEnterpriseOrganizationMemberInput">
            <summary>
            Autogenerated input type of AddEnterpriseOrganizationMember
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddEnterpriseOrganizationMemberInput.EnterpriseId">
            <summary>
            The ID of the enterprise which owns the organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddEnterpriseOrganizationMemberInput.OrganizationId">
            <summary>
            The ID of the organization the users will be added to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddEnterpriseOrganizationMemberInput.UserIds">
            <summary>
            The IDs of the enterprise members to add.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddEnterpriseOrganizationMemberInput.Role">
            <summary>
            The role to assign the users in the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddEnterpriseOrganizationMemberInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddEnterpriseOrganizationMemberPayload">
            <summary>
            Autogenerated return type of AddEnterpriseOrganizationMember
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddEnterpriseOrganizationMemberPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddEnterpriseOrganizationMemberPayload.Users">
            <summary>
            The users who were added to the organization.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddEnterpriseSupportEntitlementInput">
            <summary>
            Autogenerated input type of AddEnterpriseSupportEntitlement
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddEnterpriseSupportEntitlementInput.EnterpriseId">
            <summary>
            The ID of the Enterprise which the admin belongs to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddEnterpriseSupportEntitlementInput.Login">
            <summary>
            The login of a member who will receive the support entitlement.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddEnterpriseSupportEntitlementInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddEnterpriseSupportEntitlementPayload">
            <summary>
            Autogenerated return type of AddEnterpriseSupportEntitlement
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddEnterpriseSupportEntitlementPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddEnterpriseSupportEntitlementPayload.Message">
            <summary>
            A message confirming the result of adding the support entitlement.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddLabelsToLabelableInput">
            <summary>
            Autogenerated input type of AddLabelsToLabelable
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddLabelsToLabelableInput.LabelableId">
            <summary>
            The id of the labelable object to add labels to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddLabelsToLabelableInput.LabelIds">
            <summary>
            The ids of the labels to add.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddLabelsToLabelableInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddLabelsToLabelablePayload">
            <summary>
            Autogenerated return type of AddLabelsToLabelable
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddLabelsToLabelablePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddLabelsToLabelablePayload.Labelable">
            <summary>
            The item that was labeled.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddProjectCardInput">
            <summary>
            Autogenerated input type of AddProjectCard
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectCardInput.ProjectColumnId">
            <summary>
            The Node ID of the ProjectColumn.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectCardInput.ContentId">
            <summary>
            The content of the card. Must be a member of the ProjectCardItem union
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectCardInput.Note">
            <summary>
            The note on the card.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectCardInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddProjectCardPayload">
            <summary>
            Autogenerated return type of AddProjectCard
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectCardPayload.CardEdge">
            <summary>
            The edge from the ProjectColumn's card connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectCardPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectCardPayload.ProjectColumn">
            <summary>
            The ProjectColumn
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddProjectColumnInput">
            <summary>
            Autogenerated input type of AddProjectColumn
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectColumnInput.ProjectId">
            <summary>
            The Node ID of the project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectColumnInput.Name">
            <summary>
            The name of the column.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectColumnInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddProjectColumnPayload">
            <summary>
            Autogenerated return type of AddProjectColumn
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectColumnPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectColumnPayload.ColumnEdge">
            <summary>
            The edge from the project's column connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectColumnPayload.Project">
            <summary>
            The project
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddProjectV2DraftIssueInput">
            <summary>
            Autogenerated input type of AddProjectV2DraftIssue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectV2DraftIssueInput.ProjectId">
            <summary>
            The ID of the Project to add the draft issue to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectV2DraftIssueInput.Title">
            <summary>
            The title of the draft issue. A project item can also be created by providing the URL of an Issue or Pull Request if you have access.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectV2DraftIssueInput.Body">
            <summary>
            The body of the draft issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectV2DraftIssueInput.AssigneeIds">
            <summary>
            The IDs of the assignees of the draft issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectV2DraftIssueInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddProjectV2DraftIssuePayload">
            <summary>
            Autogenerated return type of AddProjectV2DraftIssue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectV2DraftIssuePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectV2DraftIssuePayload.ProjectItem">
            <summary>
            The draft issue added to the project.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddProjectV2ItemByIdInput">
            <summary>
            Autogenerated input type of AddProjectV2ItemById
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectV2ItemByIdInput.ProjectId">
            <summary>
            The ID of the Project to add the item to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectV2ItemByIdInput.ContentId">
            <summary>
            The id of the Issue or Pull Request to add.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectV2ItemByIdInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddProjectV2ItemByIdPayload">
            <summary>
            Autogenerated return type of AddProjectV2ItemById
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectV2ItemByIdPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddProjectV2ItemByIdPayload.Item">
            <summary>
            The item added to the project.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddPullRequestReviewCommentInput">
            <summary>
            Autogenerated input type of AddPullRequestReviewComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewCommentInput.PullRequestId">
            <summary>
            The node ID of the pull request reviewing
            **Upcoming Change on 2023-10-01 UTC**
            **Description:** `pullRequestId` will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead
            **Reason:** We are deprecating the addPullRequestReviewComment mutation
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewCommentInput.PullRequestReviewId">
            <summary>
            The Node ID of the review to modify.
            **Upcoming Change on 2023-10-01 UTC**
            **Description:** `pullRequestReviewId` will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead
            **Reason:** We are deprecating the addPullRequestReviewComment mutation
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewCommentInput.CommitOID">
            <summary>
            The SHA of the commit to comment on.
            **Upcoming Change on 2023-10-01 UTC**
            **Description:** `commitOID` will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead
            **Reason:** We are deprecating the addPullRequestReviewComment mutation
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewCommentInput.Body">
            <summary>
            The text of the comment. This field is required
            **Upcoming Change on 2023-10-01 UTC**
            **Description:** `body` will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead
            **Reason:** We are deprecating the addPullRequestReviewComment mutation
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewCommentInput.Path">
            <summary>
            The relative path of the file to comment on.
            **Upcoming Change on 2023-10-01 UTC**
            **Description:** `path` will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead
            **Reason:** We are deprecating the addPullRequestReviewComment mutation
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewCommentInput.Position">
            <summary>
            The line index in the diff to comment on.
            **Upcoming Change on 2023-10-01 UTC**
            **Description:** `position` will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead
            **Reason:** We are deprecating the addPullRequestReviewComment mutation
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewCommentInput.InReplyTo">
            <summary>
            The comment id to reply to.
            **Upcoming Change on 2023-10-01 UTC**
            **Description:** `inReplyTo` will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead
            **Reason:** We are deprecating the addPullRequestReviewComment mutation
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewCommentInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddPullRequestReviewCommentPayload">
            <summary>
            Autogenerated return type of AddPullRequestReviewComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewCommentPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewCommentPayload.Comment">
            <summary>
            The newly created comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewCommentPayload.CommentEdge">
            <summary>
            The edge from the review's comment connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddPullRequestReviewInput">
            <summary>
            Autogenerated input type of AddPullRequestReview
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewInput.PullRequestId">
            <summary>
            The Node ID of the pull request to modify.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewInput.CommitOID">
            <summary>
            The commit OID the review pertains to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewInput.Body">
            <summary>
            The contents of the review body comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewInput.Event">
            <summary>
            The event to perform on the pull request review.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewInput.Comments">
            <summary>
            The review line comments.
            **Upcoming Change on 2023-10-01 UTC**
            **Description:** `comments` will be removed. use the `threads` argument instead
            **Reason:** We are deprecating comment fields that use diff-relative positioning
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewInput.Threads">
            <summary>
            The review line comment threads.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddPullRequestReviewPayload">
            <summary>
            Autogenerated return type of AddPullRequestReview
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewPayload.PullRequestReview">
            <summary>
            The newly created pull request review.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewPayload.ReviewEdge">
            <summary>
            The edge from the pull request's review connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddPullRequestReviewThreadInput">
            <summary>
            Autogenerated input type of AddPullRequestReviewThread
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewThreadInput.Path">
            <summary>
            Path to the file being commented on.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewThreadInput.Body">
            <summary>
            Body of the thread's first comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewThreadInput.PullRequestId">
            <summary>
            The node ID of the pull request reviewing
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewThreadInput.PullRequestReviewId">
            <summary>
            The Node ID of the review to modify.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewThreadInput.Line">
            <summary>
            The line of the blob to which the thread refers, required for line-level threads. The end of the line range for multi-line comments.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewThreadInput.Side">
            <summary>
            The side of the diff on which the line resides. For multi-line comments, this is the side for the end of the line range.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewThreadInput.StartLine">
            <summary>
            The first line of the range to which the comment refers.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewThreadInput.StartSide">
            <summary>
            The side of the diff on which the start line resides.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewThreadInput.SubjectType">
            <summary>
            The level at which the comments in the corresponding thread are targeted, can be a diff line or a file
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewThreadInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddPullRequestReviewThreadPayload">
            <summary>
            Autogenerated return type of AddPullRequestReviewThread
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewThreadPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddPullRequestReviewThreadPayload.Thread">
            <summary>
            The newly created thread.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddReactionInput">
            <summary>
            Autogenerated input type of AddReaction
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddReactionInput.SubjectId">
            <summary>
            The Node ID of the subject to modify.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddReactionInput.Content">
            <summary>
            The name of the emoji to react with.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddReactionInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddReactionPayload">
            <summary>
            Autogenerated return type of AddReaction
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddReactionPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddReactionPayload.Reaction">
            <summary>
            The reaction object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddReactionPayload.ReactionGroups">
            <summary>
            The reaction groups for the subject.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddReactionPayload.Subject">
            <summary>
            The reactable subject.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddStarInput">
            <summary>
            Autogenerated input type of AddStar
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddStarInput.StarrableId">
            <summary>
            The Starrable ID to star.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddStarInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddStarPayload">
            <summary>
            Autogenerated return type of AddStar
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddStarPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddStarPayload.Starrable">
            <summary>
            The starrable.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddUpvoteInput">
            <summary>
            Autogenerated input type of AddUpvote
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddUpvoteInput.SubjectId">
            <summary>
            The Node ID of the discussion or comment to upvote.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddUpvoteInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddUpvotePayload">
            <summary>
            Autogenerated return type of AddUpvote
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddUpvotePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddUpvotePayload.Subject">
            <summary>
            The votable subject.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddVerifiableDomainInput">
            <summary>
            Autogenerated input type of AddVerifiableDomain
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddVerifiableDomainInput.OwnerId">
            <summary>
            The ID of the owner to add the domain to
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddVerifiableDomainInput.Domain">
            <summary>
            The URL of the domain
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddVerifiableDomainInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AddVerifiableDomainPayload">
            <summary>
            Autogenerated return type of AddVerifiableDomain
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddVerifiableDomainPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AddVerifiableDomainPayload.Domain">
            <summary>
            The verifiable domain that was added.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IAnnouncementBanner">
            <summary>
            Represents an announcement banner.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IAnnouncementBanner.Announcement">
            <summary>
            The text of the announcement
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IAnnouncementBanner.AnnouncementExpiresAt">
            <summary>
            The expiration date of the announcement, if any
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IAnnouncementBanner.AnnouncementUserDismissible">
            <summary>
            Whether the announcement can be dismissed by the user
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.App">
            <summary>
            A GitHub App.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.App.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.App.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.App.Description">
            <summary>
            The description of the app.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.App.IpAllowListEntries(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.IpAllowListEntryOrder}})">
            <summary>
            The IP addresses of the app.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for IP allow list entries returned.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.App.LogoBackgroundColor">
            <summary>
            The hex color code, without the leading '#', for the logo background.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.App.LogoUrl(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            A URL pointing to the app's logo.
            </summary>
            <param name="size">The size of the resulting image.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.App.Name">
            <summary>
            The name of the app.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.App.Slug">
            <summary>
            A slug based on the name of the app for use in URLs.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.App.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.App.Url">
            <summary>
            The URL to the app's homepage.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ApproveDeploymentsInput">
            <summary>
            Autogenerated input type of ApproveDeployments
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ApproveDeploymentsInput.WorkflowRunId">
            <summary>
            The node ID of the workflow run containing the pending deployments.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ApproveDeploymentsInput.EnvironmentIds">
            <summary>
            The ids of environments to reject deployments
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ApproveDeploymentsInput.Comment">
            <summary>
            Optional comment for approving deployments
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ApproveDeploymentsInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ApproveDeploymentsPayload">
            <summary>
            Autogenerated return type of ApproveDeployments
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ApproveDeploymentsPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ApproveDeploymentsPayload.Deployments">
            <summary>
            The affected deployments.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ApproveVerifiableDomainInput">
            <summary>
            Autogenerated input type of ApproveVerifiableDomain
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ApproveVerifiableDomainInput.Id">
            <summary>
            The ID of the verifiable domain to approve.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ApproveVerifiableDomainInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ApproveVerifiableDomainPayload">
            <summary>
            Autogenerated return type of ApproveVerifiableDomain
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ApproveVerifiableDomainPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ApproveVerifiableDomainPayload.Domain">
            <summary>
            The verifiable domain that was approved.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ArchiveProjectV2ItemInput">
            <summary>
            Autogenerated input type of ArchiveProjectV2Item
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ArchiveProjectV2ItemInput.ProjectId">
            <summary>
            The ID of the Project to archive the item from.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ArchiveProjectV2ItemInput.ItemId">
            <summary>
            The ID of the ProjectV2Item to archive.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ArchiveProjectV2ItemInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ArchiveProjectV2ItemPayload">
            <summary>
            Autogenerated return type of ArchiveProjectV2Item
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ArchiveProjectV2ItemPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ArchiveProjectV2ItemPayload.Item">
            <summary>
            The item archived from the project.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ArchiveRepositoryInput">
            <summary>
            Autogenerated input type of ArchiveRepository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ArchiveRepositoryInput.RepositoryId">
            <summary>
            The ID of the repository to mark as archived.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ArchiveRepositoryInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ArchiveRepositoryPayload">
            <summary>
            Autogenerated return type of ArchiveRepository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ArchiveRepositoryPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ArchiveRepositoryPayload.Repository">
            <summary>
            The repository that was marked as archived.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IAssignable">
            <summary>
            An object that can have users assigned to it.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IAssignable.Assignees(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of Users assigned to this object.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.AssignedEvent">
            <summary>
            Represents an 'assigned' event on any assignable object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AssignedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AssignedEvent.Assignable">
            <summary>
            Identifies the assignable associated with the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AssignedEvent.Assignee">
            <summary>
            Identifies the user or mannequin that was assigned.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AssignedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AssignedEvent.User">
            <summary>
            Identifies the user who was assigned.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Assignee">
            <summary>
            Types that can be assigned to issues.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Assignee.Selector`1.Bot(System.Func{Octokit.GraphQL.Model.Bot,`0})">
            <summary>
            A special type of user which takes actions on behalf of GitHub Apps.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Assignee.Selector`1.Mannequin(System.Func{Octokit.GraphQL.Model.Mannequin,`0})">
            <summary>
            A placeholder user for attribution of imported data on GitHub.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Assignee.Selector`1.Organization(System.Func{Octokit.GraphQL.Model.Organization,`0})">
            <summary>
            An account on GitHub, with one or more owners, that has repositories, members and teams.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Assignee.Selector`1.User(System.Func{Octokit.GraphQL.Model.User,`0})">
            <summary>
            A user is an individual's account on GitHub that owns repositories and can make new content.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IAuditEntry">
            <summary>
            An entry in the audit log.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AuditEntryActor">
            <summary>
            Types that can initiate an audit log event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.AuditEntryActor.Selector`1.Bot(System.Func{Octokit.GraphQL.Model.Bot,`0})">
            <summary>
            A special type of user which takes actions on behalf of GitHub Apps.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.AuditEntryActor.Selector`1.Organization(System.Func{Octokit.GraphQL.Model.Organization,`0})">
            <summary>
            An account on GitHub, with one or more owners, that has repositories, members and teams.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.AuditEntryActor.Selector`1.User(System.Func{Octokit.GraphQL.Model.User,`0})">
            <summary>
            A user is an individual's account on GitHub that owns repositories and can make new content.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AuditLogOrder">
            <summary>
            Ordering options for Audit Log connections.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AuditLogOrder.Field">
            <summary>
            The field to order Audit Logs by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AuditLogOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AuditLogOrderField">
            <summary>
            Properties by which Audit Log connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.AuditLogOrderField.CreatedAt">
            <summary>
            Order audit log entries by timestamp
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AutomaticBaseChangeFailedEvent">
            <summary>
            Represents a 'automatic_base_change_failed' event on a given pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutomaticBaseChangeFailedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutomaticBaseChangeFailedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutomaticBaseChangeFailedEvent.NewBase">
            <summary>
            The new base for this PR
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutomaticBaseChangeFailedEvent.OldBase">
            <summary>
            The old base for this PR
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutomaticBaseChangeFailedEvent.PullRequest">
            <summary>
            PullRequest referenced by event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AutomaticBaseChangeSucceededEvent">
            <summary>
            Represents a 'automatic_base_change_succeeded' event on a given pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutomaticBaseChangeSucceededEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutomaticBaseChangeSucceededEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutomaticBaseChangeSucceededEvent.NewBase">
            <summary>
            The new base for this PR
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutomaticBaseChangeSucceededEvent.OldBase">
            <summary>
            The old base for this PR
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutomaticBaseChangeSucceededEvent.PullRequest">
            <summary>
            PullRequest referenced by event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AutoMergeDisabledEvent">
            <summary>
            Represents a 'auto_merge_disabled' event on a given pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoMergeDisabledEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoMergeDisabledEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoMergeDisabledEvent.Disabler">
            <summary>
            The user who disabled auto-merge for this Pull Request
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoMergeDisabledEvent.PullRequest">
            <summary>
            PullRequest referenced by event
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoMergeDisabledEvent.Reason">
            <summary>
            The reason auto-merge was disabled
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoMergeDisabledEvent.ReasonCode">
            <summary>
            The reason_code relating to why auto-merge was disabled
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AutoMergeEnabledEvent">
            <summary>
            Represents a 'auto_merge_enabled' event on a given pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoMergeEnabledEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoMergeEnabledEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoMergeEnabledEvent.Enabler">
            <summary>
            The user who enabled auto-merge for this Pull Request
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoMergeEnabledEvent.PullRequest">
            <summary>
            PullRequest referenced by event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AutoMergeRequest">
            <summary>
            Represents an auto-merge request for a pull request
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoMergeRequest.AuthorEmail">
            <summary>
            The email address of the author of this auto-merge request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoMergeRequest.CommitBody">
            <summary>
            The commit message of the auto-merge request. If a merge queue is required by the base branch, this value will be set by the merge queue when merging.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoMergeRequest.CommitHeadline">
            <summary>
            The commit title of the auto-merge request. If a merge queue is required by the base branch, this value will be set by the merge queue when merging
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoMergeRequest.EnabledAt">
            <summary>
            When was this auto-merge request was enabled.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoMergeRequest.EnabledBy">
            <summary>
            The actor who created the auto-merge request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoMergeRequest.MergeMethod">
            <summary>
            The merge method of the auto-merge request. If a merge queue is required by the base branch, this value will be set by the merge queue when merging.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoMergeRequest.PullRequest">
            <summary>
            The pull request that this auto-merge request is set against.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AutoRebaseEnabledEvent">
            <summary>
            Represents a 'auto_rebase_enabled' event on a given pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoRebaseEnabledEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoRebaseEnabledEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoRebaseEnabledEvent.Enabler">
            <summary>
            The user who enabled auto-merge (rebase) for this Pull Request
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoRebaseEnabledEvent.PullRequest">
            <summary>
            PullRequest referenced by event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.AutoSquashEnabledEvent">
            <summary>
            Represents a 'auto_squash_enabled' event on a given pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoSquashEnabledEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoSquashEnabledEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoSquashEnabledEvent.Enabler">
            <summary>
            The user who enabled auto-merge (squash) for this Pull Request
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.AutoSquashEnabledEvent.PullRequest">
            <summary>
            PullRequest referenced by event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.BaseRefChangedEvent">
            <summary>
            Represents a 'base_ref_changed' event on a given issue or pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BaseRefChangedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BaseRefChangedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BaseRefChangedEvent.CurrentRefName">
            <summary>
            Identifies the name of the base ref for the pull request after it was changed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BaseRefChangedEvent.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BaseRefChangedEvent.PreviousRefName">
            <summary>
            Identifies the name of the base ref for the pull request before it was changed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BaseRefChangedEvent.PullRequest">
            <summary>
            PullRequest referenced by event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.BaseRefDeletedEvent">
            <summary>
            Represents a 'base_ref_deleted' event on a given pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BaseRefDeletedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BaseRefDeletedEvent.BaseRefName">
            <summary>
            Identifies the name of the Ref associated with the `base_ref_deleted` event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BaseRefDeletedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BaseRefDeletedEvent.PullRequest">
            <summary>
            PullRequest referenced by event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.BaseRefForcePushedEvent">
            <summary>
            Represents a 'base_ref_force_pushed' event on a given pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BaseRefForcePushedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BaseRefForcePushedEvent.AfterCommit">
            <summary>
            Identifies the after commit SHA for the 'base_ref_force_pushed' event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BaseRefForcePushedEvent.BeforeCommit">
            <summary>
            Identifies the before commit SHA for the 'base_ref_force_pushed' event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BaseRefForcePushedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BaseRefForcePushedEvent.PullRequest">
            <summary>
            PullRequest referenced by event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BaseRefForcePushedEvent.Ref">
            <summary>
            Identifies the fully qualified ref name for the 'base_ref_force_pushed' event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Blame">
            <summary>
            Represents a Git blame.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Blame.Ranges">
            <summary>
            The list of ranges from a Git blame.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.BlameRange">
            <summary>
            Represents a range of information from a Git blame.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BlameRange.Age">
            <summary>
            Identifies the recency of the change, from 1 (new) to 10 (old). This is calculated as a 2-quantile and determines the length of distance between the median age of all the changes in the file and the recency of the current range's change.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BlameRange.Commit">
            <summary>
            Identifies the line author
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BlameRange.EndingLine">
            <summary>
            The ending line for the range
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BlameRange.StartingLine">
            <summary>
            The starting line for the range
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Blob">
            <summary>
            Represents a Git blob.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Blob.AbbreviatedOid">
            <summary>
            An abbreviated version of the Git object ID
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Blob.ByteSize">
            <summary>
            Byte size of Blob object
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Blob.CommitResourcePath">
            <summary>
            The HTTP path for this Git object
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Blob.CommitUrl">
            <summary>
            The HTTP URL for this Git object
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Blob.IsBinary">
            <summary>
            Indicates whether the Blob is binary or text. Returns null if unable to determine the encoding.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Blob.IsTruncated">
            <summary>
            Indicates whether the contents is truncated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Blob.Oid">
            <summary>
            The Git object ID
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Blob.Repository">
            <summary>
            The Repository the Git object belongs to
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Blob.Text">
            <summary>
            UTF8 text data or null if the Blob is binary
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Bot">
            <summary>
            A special type of user which takes actions on behalf of GitHub Apps.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Bot.AvatarUrl(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            A URL pointing to the GitHub App's public avatar.
            </summary>
            <param name="size">The size of the resulting square image.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Bot.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Bot.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Bot.Login">
            <summary>
            The username of the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Bot.ResourcePath">
            <summary>
            The HTTP path for this bot
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Bot.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Bot.Url">
            <summary>
            The HTTP URL for this bot
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.BranchActorAllowanceActor">
            <summary>
            Types which can be actors for `BranchActorAllowance` objects.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.BranchActorAllowanceActor.Selector`1.App(System.Func{Octokit.GraphQL.Model.App,`0})">
            <summary>
            A GitHub App.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.BranchActorAllowanceActor.Selector`1.Team(System.Func{Octokit.GraphQL.Model.Team,`0})">
            <summary>
            A team of users in an organization.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.BranchActorAllowanceActor.Selector`1.User(System.Func{Octokit.GraphQL.Model.User,`0})">
            <summary>
            A user is an individual's account on GitHub that owns repositories and can make new content.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.BranchNamePatternParameters">
            <summary>
            Parameters to be used for the branch_name_pattern rule
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchNamePatternParameters.Name">
            <summary>
            How this rule will appear to users.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchNamePatternParameters.Negate">
            <summary>
            If true, the rule will fail if the pattern matches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchNamePatternParameters.Operator">
            <summary>
            The operator to use for matching.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchNamePatternParameters.Pattern">
            <summary>
            The pattern to match with.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.BranchNamePatternParametersInput">
            <summary>
            Parameters to be used for the branch_name_pattern rule
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchNamePatternParametersInput.Name">
            <summary>
            How this rule will appear to users.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchNamePatternParametersInput.Negate">
            <summary>
            If true, the rule will fail if the pattern matches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchNamePatternParametersInput.Operator">
            <summary>
            The operator to use for matching.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchNamePatternParametersInput.Pattern">
            <summary>
            The pattern to match with.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.BranchProtectionRule">
            <summary>
            A branch protection rule.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.AllowsDeletions">
            <summary>
            Can this branch be deleted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.AllowsForcePushes">
            <summary>
            Are force pushes allowed on this branch.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.BlocksCreations">
            <summary>
            Is branch creation a protected operation.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.BranchProtectionRule.BranchProtectionRuleConflicts(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of conflicts matching branches protection rule and other branch protection rules
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.BranchProtectionRule.BypassForcePushAllowances(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of actors able to force push for this branch protection rule.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.BranchProtectionRule.BypassPullRequestAllowances(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of actors able to bypass PRs for this branch protection rule.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.Creator">
            <summary>
            The actor who created this branch protection rule.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.DismissesStaleReviews">
            <summary>
            Will new commits pushed to matching branches dismiss pull request review approvals.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.IsAdminEnforced">
            <summary>
            Can admins overwrite branch protection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.LockAllowsFetchAndMerge">
            <summary>
            Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `false` to prevent fork syncing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.LockBranch">
            <summary>
            Whether to set the branch as read-only. If this is true, users will not be able to push to the branch.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.BranchProtectionRule.MatchingRefs(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            Repository refs that are protected by this rule
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="query">Filters refs with query on name</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.Pattern">
            <summary>
            Identifies the protection rule pattern.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.BranchProtectionRule.PushAllowances(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list push allowances for this branch protection rule.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.Repository">
            <summary>
            The repository associated with this branch protection rule.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.RequireLastPushApproval">
            <summary>
            Whether the most recent push must be approved by someone other than the person who pushed it
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.RequiredApprovingReviewCount">
            <summary>
            Number of approving reviews required to update matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.RequiredDeploymentEnvironments">
            <summary>
            List of required deployment environments that must be deployed successfully to update matching branches
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.RequiredStatusCheckContexts">
            <summary>
            List of required status check contexts that must pass for commits to be accepted to matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.RequiredStatusChecks">
            <summary>
            List of required status checks that must pass for commits to be accepted to matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.RequiresApprovingReviews">
            <summary>
            Are approving reviews required to update matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.RequiresCodeOwnerReviews">
            <summary>
            Are reviews from code owners required to update matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.RequiresCommitSignatures">
            <summary>
            Are commits required to be signed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.RequiresConversationResolution">
            <summary>
            Are conversations required to be resolved before merging.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.RequiresDeployments">
            <summary>
            Does this branch require deployment to specific environments before merging
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.RequiresLinearHistory">
            <summary>
            Are merge commits prohibited from being pushed to this branch.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.RequiresStatusChecks">
            <summary>
            Are status checks required to update matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.RequiresStrictStatusChecks">
            <summary>
            Are branches required to be up to date before merging.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.RestrictsPushes">
            <summary>
            Is pushing to matching branches restricted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRule.RestrictsReviewDismissals">
            <summary>
            Is dismissal of pull request reviews restricted.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.BranchProtectionRule.ReviewDismissalAllowances(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list review dismissal allowances for this branch protection rule.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.BranchProtectionRuleConflict">
            <summary>
            A conflict between two branch protection rules.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRuleConflict.BranchProtectionRule">
            <summary>
            Identifies the branch protection rule.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRuleConflict.ConflictingBranchProtectionRule">
            <summary>
            Identifies the conflicting branch protection rule.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRuleConflict.Ref">
            <summary>
            Identifies the branch ref that has conflicting rules
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.BranchProtectionRuleConflictConnection">
            <summary>
            The connection type for BranchProtectionRuleConflict.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRuleConflictConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRuleConflictConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRuleConflictConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRuleConflictConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.BranchProtectionRuleConflictEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRuleConflictEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRuleConflictEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.BranchProtectionRuleConnection">
            <summary>
            The connection type for BranchProtectionRule.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRuleConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRuleConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRuleConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRuleConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.BranchProtectionRuleEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRuleEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BranchProtectionRuleEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.BulkSponsorship">
            <summary>
            Information about a sponsorship to make for a user or organization with a GitHub Sponsors profile, as part of sponsoring many users or organizations at once.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BulkSponsorship.SponsorableId">
            <summary>
            The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BulkSponsorship.SponsorableLogin">
            <summary>
            The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BulkSponsorship.Amount">
            <summary>
            The amount to pay to the sponsorable in US dollars. Valid values: 1-12000.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.BypassActor">
            <summary>
            Types that can represent a repository ruleset bypass actor.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.BypassActor.Selector`1.App(System.Func{Octokit.GraphQL.Model.App,`0})">
            <summary>
            A GitHub App.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.BypassActor.Selector`1.Team(System.Func{Octokit.GraphQL.Model.Team,`0})">
            <summary>
            A team of users in an organization.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.BypassForcePushAllowance">
            <summary>
            A user, team, or app who has the ability to bypass a force push requirement on a protected branch.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BypassForcePushAllowance.Actor">
            <summary>
            The actor that can force push.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BypassForcePushAllowance.BranchProtectionRule">
            <summary>
            Identifies the branch protection rule associated with the allowed user, team, or app.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.BypassForcePushAllowanceConnection">
            <summary>
            The connection type for BypassForcePushAllowance.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BypassForcePushAllowanceConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BypassForcePushAllowanceConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BypassForcePushAllowanceConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BypassForcePushAllowanceConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.BypassForcePushAllowanceEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BypassForcePushAllowanceEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BypassForcePushAllowanceEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.BypassPullRequestAllowance">
            <summary>
            A user, team, or app who has the ability to bypass a pull request requirement on a protected branch.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BypassPullRequestAllowance.Actor">
            <summary>
            The actor that can bypass.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BypassPullRequestAllowance.BranchProtectionRule">
            <summary>
            Identifies the branch protection rule associated with the allowed user, team, or app.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.BypassPullRequestAllowanceConnection">
            <summary>
            The connection type for BypassPullRequestAllowance.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BypassPullRequestAllowanceConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BypassPullRequestAllowanceConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BypassPullRequestAllowanceConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BypassPullRequestAllowanceConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.BypassPullRequestAllowanceEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BypassPullRequestAllowanceEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.BypassPullRequestAllowanceEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CancelEnterpriseAdminInvitationInput">
            <summary>
            Autogenerated input type of CancelEnterpriseAdminInvitation
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CancelEnterpriseAdminInvitationInput.InvitationId">
            <summary>
            The Node ID of the pending enterprise administrator invitation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CancelEnterpriseAdminInvitationInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CancelEnterpriseAdminInvitationPayload">
            <summary>
            Autogenerated return type of CancelEnterpriseAdminInvitation
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CancelEnterpriseAdminInvitationPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CancelEnterpriseAdminInvitationPayload.Invitation">
            <summary>
            The invitation that was canceled.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CancelEnterpriseAdminInvitationPayload.Message">
            <summary>
            A message confirming the result of canceling an administrator invitation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CancelSponsorshipInput">
            <summary>
            Autogenerated input type of CancelSponsorship
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CancelSponsorshipInput.SponsorId">
            <summary>
            The ID of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorLogin is not given.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CancelSponsorshipInput.SponsorLogin">
            <summary>
            The username of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorId is not given.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CancelSponsorshipInput.SponsorableId">
            <summary>
            The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CancelSponsorshipInput.SponsorableLogin">
            <summary>
            The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CancelSponsorshipInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CancelSponsorshipPayload">
            <summary>
            Autogenerated return type of CancelSponsorship
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CancelSponsorshipPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CancelSponsorshipPayload.SponsorsTier">
            <summary>
            The tier that was being used at the time of cancellation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ChangeUserStatusInput">
            <summary>
            Autogenerated input type of ChangeUserStatus
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ChangeUserStatusInput.Emoji">
            <summary>
            The emoji to represent your status. Can either be a native Unicode emoji or an emoji name with colons, e.g., :grinning:.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ChangeUserStatusInput.Message">
            <summary>
            A short description of your current status.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ChangeUserStatusInput.OrganizationId">
            <summary>
            The ID of the organization whose members will be allowed to see the status. If omitted, the status will be publicly visible.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ChangeUserStatusInput.LimitedAvailability">
            <summary>
            Whether this status should indicate you are not fully available on GitHub, e.g., you are away.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ChangeUserStatusInput.ExpiresAt">
            <summary>
            If set, the user status will not be shown after this date.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ChangeUserStatusInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ChangeUserStatusPayload">
            <summary>
            Autogenerated return type of ChangeUserStatus
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ChangeUserStatusPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ChangeUserStatusPayload.Status">
            <summary>
            Your updated status.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckAnnotation">
            <summary>
            A single check annotation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotation.AnnotationLevel">
            <summary>
            The annotation's severity level.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotation.BlobUrl">
            <summary>
            The path to the file that this annotation was made on.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotation.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotation.Location">
            <summary>
            The position of this annotation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotation.Message">
            <summary>
            The annotation's message.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotation.Path">
            <summary>
            The path that this annotation was made on.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotation.RawDetails">
            <summary>
            Additional information about the annotation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotation.Title">
            <summary>
            The annotation's title
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckAnnotationConnection">
            <summary>
            The connection type for CheckAnnotation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotationConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotationConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotationConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotationConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckAnnotationData">
            <summary>
            Information from a check run analysis to specific lines of code.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotationData.Path">
            <summary>
            The path of the file to add an annotation to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotationData.Location">
            <summary>
            The location of the annotation
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotationData.AnnotationLevel">
            <summary>
            Represents an annotation's information level
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotationData.Message">
            <summary>
            A short description of the feedback for these lines of code.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotationData.Title">
            <summary>
            The title that represents the annotation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotationData.RawDetails">
            <summary>
            Details about this annotation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckAnnotationEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotationEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotationEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckAnnotationLevel">
            <summary>
            Represents an annotation's information level.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckAnnotationLevel.Failure">
            <summary>
            An annotation indicating an inescapable error.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckAnnotationLevel.Notice">
            <summary>
            An annotation indicating some information.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckAnnotationLevel.Warning">
            <summary>
            An annotation indicating an ignorable error.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckAnnotationPosition">
            <summary>
            A character position in a check annotation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotationPosition.Column">
            <summary>
            Column number (1 indexed).
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotationPosition.Line">
            <summary>
            Line number (1 indexed).
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckAnnotationRange">
            <summary>
            Information from a check run analysis to specific lines of code.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotationRange.StartLine">
            <summary>
            The starting line of the range.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotationRange.StartColumn">
            <summary>
            The starting column of the range.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotationRange.EndLine">
            <summary>
            The ending line of the range.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotationRange.EndColumn">
            <summary>
            The ending column of the range.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckAnnotationSpan">
            <summary>
            An inclusive pair of positions for a check annotation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotationSpan.End">
            <summary>
            End position (inclusive).
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckAnnotationSpan.Start">
            <summary>
            Start position (inclusive).
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckConclusionState">
            <summary>
            The possible states for a check suite or run conclusion.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckConclusionState.ActionRequired">
            <summary>
            The check suite or run requires action.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckConclusionState.TimedOut">
            <summary>
            The check suite or run has timed out.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckConclusionState.Cancelled">
            <summary>
            The check suite or run has been cancelled.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckConclusionState.Failure">
            <summary>
            The check suite or run has failed.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckConclusionState.Success">
            <summary>
            The check suite or run has succeeded.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckConclusionState.Neutral">
            <summary>
            The check suite or run was neutral.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckConclusionState.Skipped">
            <summary>
            The check suite or run was skipped.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckConclusionState.StartupFailure">
            <summary>
            The check suite or run has failed at startup.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckConclusionState.Stale">
            <summary>
            The check suite or run was marked stale by GitHub. Only GitHub can use this conclusion.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckRun">
            <summary>
            A check run.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.CheckRun.Annotations(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The check run's annotations
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRun.CheckSuite">
            <summary>
            The check suite that this run is a part of.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRun.CompletedAt">
            <summary>
            Identifies the date and time when the check run was completed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRun.Conclusion">
            <summary>
            The conclusion of the check run.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRun.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRun.Deployment">
            <summary>
            The corresponding deployment for this job, if any
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRun.DetailsUrl">
            <summary>
            The URL from which to find full details of the check run on the integrator's site.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRun.ExternalId">
            <summary>
            A reference for the check run on the integrator's system.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.CheckRun.IsRequired(System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.ID}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            Whether this is required to pass before merging for a specific pull request.
            </summary>
            <param name="pullRequestId">The id of the pull request this is required for</param>
            <param name="pullRequestNumber">The number of the pull request this is required for</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRun.Name">
            <summary>
            The name of the check for this check run.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRun.PendingDeploymentRequest">
            <summary>
            Information about a pending deployment, if any, in this check run
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRun.Permalink">
            <summary>
            The permalink to the check run summary.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRun.Repository">
            <summary>
            The repository associated with this check run.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRun.ResourcePath">
            <summary>
            The HTTP path for this check run.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRun.StartedAt">
            <summary>
            Identifies the date and time when the check run was started.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRun.Status">
            <summary>
            The current status of the check run.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.CheckRun.Steps(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            The check run's steps
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="number">Step number</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRun.Summary">
            <summary>
            A string representing the check run's summary
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRun.Text">
            <summary>
            A string representing the check run's text
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRun.Title">
            <summary>
            A string representing the check run
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRun.Url">
            <summary>
            The HTTP URL for this check run.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckRunAction">
            <summary>
            Possible further actions the integrator can perform.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunAction.Label">
            <summary>
            The text to be displayed on a button in the web UI.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunAction.Description">
            <summary>
            A short explanation of what this action would do.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunAction.Identifier">
            <summary>
            A reference for the action on the integrator's system. 
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckRunConnection">
            <summary>
            The connection type for CheckRun.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckRunEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckRunFilter">
            <summary>
            The filters that are available when fetching check runs.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunFilter.CheckType">
            <summary>
            Filters the check runs by this type.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunFilter.AppId">
            <summary>
            Filters the check runs created by this application ID.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunFilter.CheckName">
            <summary>
            Filters the check runs by this name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunFilter.Status">
            <summary>
            Filters the check runs by this status. Superceded by statuses.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunFilter.Statuses">
            <summary>
            Filters the check runs by this status. Overrides status.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunFilter.Conclusions">
            <summary>
            Filters the check runs by these conclusions.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckRunOutput">
            <summary>
            Descriptive details about the check run.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunOutput.Title">
            <summary>
            A title to provide for this check run.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunOutput.Summary">
            <summary>
            The summary of the check run (supports Commonmark).
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunOutput.Text">
            <summary>
            The details of the check run (supports Commonmark).
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunOutput.Annotations">
            <summary>
            The annotations that are made as part of the check run.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunOutput.Images">
            <summary>
            Images attached to the check run output displayed in the GitHub pull request UI.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckRunOutputImage">
            <summary>
            Images attached to the check run output displayed in the GitHub pull request UI.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunOutputImage.Alt">
            <summary>
            The alternative text for the image.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunOutputImage.ImageUrl">
            <summary>
            The full URL of the image.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunOutputImage.Caption">
            <summary>
            A short image description.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckRunState">
            <summary>
            The possible states of a check run in a status rollup.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckRunState.ActionRequired">
            <summary>
            The check run requires action.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckRunState.Cancelled">
            <summary>
            The check run has been cancelled.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckRunState.Completed">
            <summary>
            The check run has been completed.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckRunState.Failure">
            <summary>
            The check run has failed.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckRunState.InProgress">
            <summary>
            The check run is in progress.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckRunState.Neutral">
            <summary>
            The check run was neutral.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckRunState.Pending">
            <summary>
            The check run is in pending state.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckRunState.Queued">
            <summary>
            The check run has been queued.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckRunState.Skipped">
            <summary>
            The check run was skipped.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckRunState.Stale">
            <summary>
            The check run was marked stale by GitHub. Only GitHub can use this conclusion.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckRunState.StartupFailure">
            <summary>
            The check run has failed at startup.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckRunState.Success">
            <summary>
            The check run has succeeded.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckRunState.TimedOut">
            <summary>
            The check run has timed out.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckRunState.Waiting">
            <summary>
            The check run is in waiting state.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckRunStateCount">
            <summary>
            Represents a count of the state of a check run.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunStateCount.Count">
            <summary>
            The number of check runs with this state.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckRunStateCount.State">
            <summary>
            The state of a check run.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckRunType">
            <summary>
            The possible types of check runs.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckRunType.All">
            <summary>
            Every check run available.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckRunType.Latest">
            <summary>
            The latest check run.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckStatusState">
            <summary>
            The possible states for a check suite or run status.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckStatusState.Queued">
            <summary>
            The check suite or run has been queued.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckStatusState.InProgress">
            <summary>
            The check suite or run is in progress.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckStatusState.Completed">
            <summary>
            The check suite or run has been completed.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckStatusState.Waiting">
            <summary>
            The check suite or run is in waiting state.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckStatusState.Pending">
            <summary>
            The check suite or run is in pending state.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CheckStatusState.Requested">
            <summary>
            The check suite or run has been requested.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckStep">
            <summary>
            A single check step.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckStep.CompletedAt">
            <summary>
            Identifies the date and time when the check step was completed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckStep.Conclusion">
            <summary>
            The conclusion of the check step.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckStep.ExternalId">
            <summary>
            A reference for the check step on the integrator's system.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckStep.Name">
            <summary>
            The step's name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckStep.Number">
            <summary>
            The index of the step in the list of steps of the parent check run.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckStep.SecondsToCompletion">
            <summary>
            Number of seconds to completion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckStep.StartedAt">
            <summary>
            Identifies the date and time when the check step was started.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckStep.Status">
            <summary>
            The current status of the check step.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckStepConnection">
            <summary>
            The connection type for CheckStep.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckStepConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckStepConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckStepConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckStepConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckStepEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckStepEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckStepEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckSuite">
            <summary>
            A check suite.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuite.App">
            <summary>
            The GitHub App which created this check suite.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuite.Branch">
            <summary>
            The name of the branch for this check suite.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.CheckSuite.CheckRuns(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CheckRunFilter}})">
            <summary>
            The check runs associated with a check suite.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="filterBy">Filters the check runs by this type.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuite.Commit">
            <summary>
            The commit for this check suite
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuite.Conclusion">
            <summary>
            The conclusion of this check suite.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuite.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuite.Creator">
            <summary>
            The user who triggered the check suite.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuite.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.CheckSuite.MatchingPullRequests(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.IssueOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.PullRequestState}}})">
            <summary>
            A list of open pull requests matching the check suite.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="baseRefName">The base ref name to filter the pull requests by.</param>
            <param name="headRefName">The head ref name to filter the pull requests by.</param>
            <param name="labels">A list of label names to filter the pull requests by.</param>
            <param name="orderBy">Ordering options for pull requests returned from the connection.</param>
            <param name="states">A list of states to filter the pull requests by.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuite.Push">
            <summary>
            The push that triggered this check suite.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuite.Repository">
            <summary>
            The repository associated with this check suite.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuite.ResourcePath">
            <summary>
            The HTTP path for this check suite
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuite.Status">
            <summary>
            The status of this check suite.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuite.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuite.Url">
            <summary>
            The HTTP URL for this check suite
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuite.WorkflowRun">
            <summary>
            The workflow run associated with this check suite.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckSuiteAutoTriggerPreference">
            <summary>
            The auto-trigger preferences that are available for check suites.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuiteAutoTriggerPreference.AppId">
            <summary>
            The node ID of the application that owns the check suite.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuiteAutoTriggerPreference.Setting">
            <summary>
            Set to `true` to enable automatic creation of CheckSuite events upon pushes to the repository.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckSuiteConnection">
            <summary>
            The connection type for CheckSuite.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuiteConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuiteConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuiteConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuiteConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckSuiteEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuiteEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuiteEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CheckSuiteFilter">
            <summary>
            The filters that are available when fetching check suites.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuiteFilter.AppId">
            <summary>
            Filters the check suites created by this application ID.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CheckSuiteFilter.CheckName">
            <summary>
            Filters the check suites by this name.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Claimable">
            <summary>
            An object which can have its data claimed or claim data from another.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Claimable.Selector`1.Mannequin(System.Func{Octokit.GraphQL.Model.Mannequin,`0})">
            <summary>
            A placeholder user for attribution of imported data on GitHub.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Claimable.Selector`1.User(System.Func{Octokit.GraphQL.Model.User,`0})">
            <summary>
            A user is an individual's account on GitHub that owns repositories and can make new content.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ClearLabelsFromLabelableInput">
            <summary>
            Autogenerated input type of ClearLabelsFromLabelable
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ClearLabelsFromLabelableInput.LabelableId">
            <summary>
            The id of the labelable object to clear the labels from.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ClearLabelsFromLabelableInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ClearLabelsFromLabelablePayload">
            <summary>
            Autogenerated return type of ClearLabelsFromLabelable
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ClearLabelsFromLabelablePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ClearLabelsFromLabelablePayload.Labelable">
            <summary>
            The item that was unlabeled.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ClearProjectV2ItemFieldValueInput">
            <summary>
            Autogenerated input type of ClearProjectV2ItemFieldValue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ClearProjectV2ItemFieldValueInput.ProjectId">
            <summary>
            The ID of the Project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ClearProjectV2ItemFieldValueInput.ItemId">
            <summary>
            The ID of the item to be cleared.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ClearProjectV2ItemFieldValueInput.FieldId">
            <summary>
            The ID of the field to be cleared.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ClearProjectV2ItemFieldValueInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ClearProjectV2ItemFieldValuePayload">
            <summary>
            Autogenerated return type of ClearProjectV2ItemFieldValue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ClearProjectV2ItemFieldValuePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ClearProjectV2ItemFieldValuePayload.ProjectV2Item">
            <summary>
            The updated item.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CloneProjectInput">
            <summary>
            Autogenerated input type of CloneProject
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloneProjectInput.TargetOwnerId">
            <summary>
            The owner ID to create the project under.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloneProjectInput.SourceId">
            <summary>
            The source project to clone.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloneProjectInput.IncludeWorkflows">
            <summary>
            Whether or not to clone the source project's workflows.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloneProjectInput.Name">
            <summary>
            The name of the project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloneProjectInput.Body">
            <summary>
            The description of the project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloneProjectInput.Public">
            <summary>
            The visibility of the project, defaults to false (private).
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloneProjectInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CloneProjectPayload">
            <summary>
            Autogenerated return type of CloneProject
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloneProjectPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloneProjectPayload.JobStatusId">
            <summary>
            The id of the JobStatus for populating cloned fields.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloneProjectPayload.Project">
            <summary>
            The new cloned project.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CloneTemplateRepositoryInput">
            <summary>
            Autogenerated input type of CloneTemplateRepository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloneTemplateRepositoryInput.RepositoryId">
            <summary>
            The Node ID of the template repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloneTemplateRepositoryInput.Name">
            <summary>
            The name of the new repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloneTemplateRepositoryInput.OwnerId">
            <summary>
            The ID of the owner for the new repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloneTemplateRepositoryInput.Description">
            <summary>
            A short description of the new repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloneTemplateRepositoryInput.Visibility">
            <summary>
            Indicates the repository's visibility level.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloneTemplateRepositoryInput.IncludeAllBranches">
            <summary>
            Whether to copy all branches from the template to the new repository. Defaults to copying only the default branch of the template.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloneTemplateRepositoryInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CloneTemplateRepositoryPayload">
            <summary>
            Autogenerated return type of CloneTemplateRepository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloneTemplateRepositoryPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloneTemplateRepositoryPayload.Repository">
            <summary>
            The new repository.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IClosable">
            <summary>
            An object that can be closed
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IClosable.Closed">
            <summary>
            Indicates if the object is closed (definition of closed may depend on type)
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IClosable.ClosedAt">
            <summary>
            Identifies the date and time when the object was closed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IClosable.ViewerCanClose">
            <summary>
            Indicates if the object can be closed by the viewer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IClosable.ViewerCanReopen">
            <summary>
            Indicates if the object can be reopened by the viewer.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ClosedEvent">
            <summary>
            Represents a 'closed' event on any `Closable`.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ClosedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ClosedEvent.Closable">
            <summary>
            Object that was closed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ClosedEvent.Closer">
            <summary>
            Object which triggered the creation of this event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ClosedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ClosedEvent.ResourcePath">
            <summary>
            The HTTP path for this closed event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ClosedEvent.StateReason">
            <summary>
            The reason the issue state was changed to closed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ClosedEvent.Url">
            <summary>
            The HTTP URL for this closed event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CloseDiscussionInput">
            <summary>
            Autogenerated input type of CloseDiscussion
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloseDiscussionInput.DiscussionId">
            <summary>
            ID of the discussion to be closed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloseDiscussionInput.Reason">
            <summary>
            The reason why the discussion is being closed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloseDiscussionInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CloseDiscussionPayload">
            <summary>
            Autogenerated return type of CloseDiscussion
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloseDiscussionPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloseDiscussionPayload.Discussion">
            <summary>
            The discussion that was closed.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CloseIssueInput">
            <summary>
            Autogenerated input type of CloseIssue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloseIssueInput.IssueId">
            <summary>
            ID of the issue to be closed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloseIssueInput.StateReason">
            <summary>
            The reason the issue is to be closed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloseIssueInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CloseIssuePayload">
            <summary>
            Autogenerated return type of CloseIssue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloseIssuePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CloseIssuePayload.Issue">
            <summary>
            The issue that was closed.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ClosePullRequestInput">
            <summary>
            Autogenerated input type of ClosePullRequest
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ClosePullRequestInput.PullRequestId">
            <summary>
            ID of the pull request to be closed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ClosePullRequestInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ClosePullRequestPayload">
            <summary>
            Autogenerated return type of ClosePullRequest
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ClosePullRequestPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ClosePullRequestPayload.PullRequest">
            <summary>
            The pull request that was closed.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Closer">
            <summary>
            The object which triggered a `ClosedEvent`.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Closer.Selector`1.Commit(System.Func{Octokit.GraphQL.Model.Commit,`0})">
            <summary>
            Represents a Git commit.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Closer.Selector`1.PullRequest(System.Func{Octokit.GraphQL.Model.PullRequest,`0})">
            <summary>
            A repository pull request.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CodeOfConduct">
            <summary>
            The Code of Conduct for a repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CodeOfConduct.Body">
            <summary>
            The body of the Code of Conduct
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CodeOfConduct.Key">
            <summary>
            The key for the Code of Conduct
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CodeOfConduct.Name">
            <summary>
            The formal name of the Code of Conduct
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CodeOfConduct.ResourcePath">
            <summary>
            The HTTP path for this Code of Conduct
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CodeOfConduct.Url">
            <summary>
            The HTTP URL for this Code of Conduct
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CollaboratorAffiliation">
            <summary>
            Collaborators affiliation level with a subject.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CollaboratorAffiliation.Outside">
            <summary>
            All outside collaborators of an organization-owned subject.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CollaboratorAffiliation.Direct">
            <summary>
            All collaborators with permissions to an organization-owned subject, regardless of organization membership status.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CollaboratorAffiliation.All">
            <summary>
            All collaborators the authenticated user can see.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IComment">
            <summary>
            Represents a comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IComment.Author">
            <summary>
            The actor who authored the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IComment.AuthorAssociation">
            <summary>
            Author's association with the subject of the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IComment.Body">
            <summary>
            The body as Markdown.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IComment.BodyHTML">
            <summary>
            The body rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IComment.BodyText">
            <summary>
            The body rendered to text.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IComment.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IComment.CreatedViaEmail">
            <summary>
            Check if this comment was created via an email reply.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IComment.Editor">
            <summary>
            The actor who edited the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IComment.IncludesCreatedEdit">
            <summary>
            Check if this comment was edited and includes an edit with the creation data
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IComment.LastEditedAt">
            <summary>
            The moment the editor made the last edit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IComment.PublishedAt">
            <summary>
            Identifies when the comment was published at.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IComment.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IComment.UserContentEdits(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of edits to this content.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.IComment.ViewerDidAuthor">
            <summary>
            Did the viewer author this comment.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CommentAuthorAssociation">
            <summary>
            A comment author association with repository.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CommentAuthorAssociation.Member">
            <summary>
            Author is a member of the organization that owns the repository.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CommentAuthorAssociation.Owner">
            <summary>
            Author is the owner of the repository.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CommentAuthorAssociation.Mannequin">
            <summary>
            Author is a placeholder for an unclaimed user.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CommentAuthorAssociation.Collaborator">
            <summary>
            Author has been invited to collaborate on the repository.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CommentAuthorAssociation.Contributor">
            <summary>
            Author has previously committed to the repository.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CommentAuthorAssociation.FirstTimeContributor">
            <summary>
            Author has not previously committed to the repository.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CommentAuthorAssociation.FirstTimer">
            <summary>
            Author has not previously committed to GitHub.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CommentAuthorAssociation.None">
            <summary>
            Author has no association with the repository.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CommentCannotUpdateReason">
            <summary>
            The possible errors that will prevent a user from updating a comment.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CommentCannotUpdateReason.Archived">
            <summary>
            Unable to create comment because repository is archived.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CommentCannotUpdateReason.InsufficientAccess">
            <summary>
            You must be the author or have write access to this repository to update this comment.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CommentCannotUpdateReason.Locked">
            <summary>
            Unable to create comment because issue is locked.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CommentCannotUpdateReason.LoginRequired">
            <summary>
            You must be logged in to update this comment.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CommentCannotUpdateReason.Maintenance">
            <summary>
            Repository is under maintenance.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CommentCannotUpdateReason.VerifiedEmailRequired">
            <summary>
            At least one email address must be verified to update this comment.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CommentCannotUpdateReason.Denied">
            <summary>
            You cannot update this comment
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CommentDeletedEvent">
            <summary>
            Represents a 'comment_deleted' event on a given issue or pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommentDeletedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommentDeletedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommentDeletedEvent.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommentDeletedEvent.DeletedCommentAuthor">
            <summary>
            The user who authored the deleted comment.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Commit">
            <summary>
            Represents a Git commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.AbbreviatedOid">
            <summary>
            An abbreviated version of the Git object ID
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.Additions">
            <summary>
            The number of additions in this commit.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Commit.AssociatedPullRequests(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.PullRequestOrder}})">
            <summary>
            The merged Pull Request that introduced the commit to the repository. If the commit is not present in the default branch, additionally returns open Pull Requests associated with the commit
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for pull requests.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.Author">
            <summary>
            Authorship details of the commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.AuthoredByCommitter">
            <summary>
            Check if the committer and the author match.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.AuthoredDate">
            <summary>
            The datetime when this commit was authored.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Commit.Authors(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The list of authors for this commit based on the git author and the Co-authored-by
            message trailer. The git author will always be first.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Commit.Blame(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Fetches `git blame` information.
            </summary>
            <param name="path">The file whose Git blame information you want.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.ChangedFiles">
            <summary>
            We recommend using the `changedFielsIfAvailable` field instead of `changedFiles`, as `changedFiles` will cause your request to return an error if GitHub is unable to calculate the number of changed files.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.ChangedFilesIfAvailable">
            <summary>
            The number of changed files in this commit. If GitHub is unable to calculate the number of changed files (for example due to a timeout), this will return `null`. We recommend using this field instead of `changedFiles`.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Commit.CheckSuites(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CheckSuiteFilter}})">
            <summary>
            The check suites associated with a commit.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="filterBy">Filters the check suites by this type.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Commit.Comments(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            Comments made on the commit.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.CommitResourcePath">
            <summary>
            The HTTP path for this Git object
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.CommitUrl">
            <summary>
            The HTTP URL for this Git object
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.CommittedDate">
            <summary>
            The datetime when this commit was committed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.CommittedViaWeb">
            <summary>
            Check if committed via GitHub web UI.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.Committer">
            <summary>
            Committer details of the commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.Deletions">
            <summary>
            The number of deletions in this commit.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Commit.Deployments(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeploymentOrder}})">
            <summary>
            The deployments associated with a commit.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="environments">Environments to list deployments for</param>
            <param name="orderBy">Ordering options for deployments returned from the connection.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Commit.File(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            The tree entry representing the file located at the given path.
            </summary>
            <param name="path">The path for the file</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Commit.History(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CommitAuthor}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The linear commit history starting from (and including) this commit, in the same order as `git log`.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="author">If non-null, filters history to only show commits with matching authorship.</param>
            <param name="path">If non-null, filters history to only show commits touching files under this path.</param>
            <param name="since">Allows specifying a beginning time or date for fetching commits.</param>
            <param name="until">Allows specifying an ending time or date for fetching commits.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.Message">
            <summary>
            The Git commit message
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.MessageBody">
            <summary>
            The Git commit message body
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.MessageBodyHTML">
            <summary>
            The commit message body rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.MessageHeadline">
            <summary>
            The Git commit message headline
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.MessageHeadlineHTML">
            <summary>
            The commit message headline rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.Oid">
            <summary>
            The Git object ID
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.OnBehalfOf">
            <summary>
            The organization this commit was made on behalf of.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Commit.Parents(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The parents of a commit.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.PushedDate">
            <summary>
            The datetime when this commit was pushed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.Repository">
            <summary>
            The Repository this commit belongs to
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.ResourcePath">
            <summary>
            The HTTP path for this commit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.Signature">
            <summary>
            Commit signing information, if present.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.Status">
            <summary>
            Status information for this commit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.StatusCheckRollup">
            <summary>
            Check and Status rollup information for this commit.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Commit.Submodules(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            Returns a list of all submodules in this repository as of this Commit parsed from the .gitmodules file.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.TarballUrl">
            <summary>
            Returns a URL to download a tarball archive for a repository.
            Note: For private repositories, these links are temporary and expire after five minutes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.Tree">
            <summary>
            Commit's root Tree
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.TreeResourcePath">
            <summary>
            The HTTP path for the tree of this commit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.TreeUrl">
            <summary>
            The HTTP URL for the tree of this commit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.Url">
            <summary>
            The HTTP URL for this commit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.ViewerCanSubscribe">
            <summary>
            Check if the viewer is able to change their subscription status for the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.ViewerSubscription">
            <summary>
            Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Commit.ZipballUrl">
            <summary>
            Returns a URL to download a zipball archive for a repository.
            Note: For private repositories, these links are temporary and expire after five minutes.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CommitAuthor">
            <summary>
            Specifies an author for filtering Git commits.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitAuthor.Id">
            <summary>
            ID of a User to filter by. If non-null, only commits authored by this user will be returned. This field takes precedence over emails.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitAuthor.Emails">
            <summary>
            Email addresses to filter by. Commits authored by any of the specified email addresses will be returned.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CommitAuthorEmailPatternParameters">
            <summary>
            Parameters to be used for the commit_author_email_pattern rule
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitAuthorEmailPatternParameters.Name">
            <summary>
            How this rule will appear to users.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitAuthorEmailPatternParameters.Negate">
            <summary>
            If true, the rule will fail if the pattern matches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitAuthorEmailPatternParameters.Operator">
            <summary>
            The operator to use for matching.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitAuthorEmailPatternParameters.Pattern">
            <summary>
            The pattern to match with.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CommitAuthorEmailPatternParametersInput">
            <summary>
            Parameters to be used for the commit_author_email_pattern rule
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitAuthorEmailPatternParametersInput.Name">
            <summary>
            How this rule will appear to users.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitAuthorEmailPatternParametersInput.Negate">
            <summary>
            If true, the rule will fail if the pattern matches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitAuthorEmailPatternParametersInput.Operator">
            <summary>
            The operator to use for matching.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitAuthorEmailPatternParametersInput.Pattern">
            <summary>
            The pattern to match with.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CommitComment">
            <summary>
            Represents a comment on a given Commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.Author">
            <summary>
            The actor who authored the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.AuthorAssociation">
            <summary>
            Author's association with the subject of the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.Body">
            <summary>
            Identifies the comment body.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.BodyHTML">
            <summary>
            The body rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.BodyText">
            <summary>
            The body rendered to text.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.Commit">
            <summary>
            Identifies the commit associated with the comment, if the commit exists.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.CreatedViaEmail">
            <summary>
            Check if this comment was created via an email reply.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.Editor">
            <summary>
            The actor who edited the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.IncludesCreatedEdit">
            <summary>
            Check if this comment was edited and includes an edit with the creation data
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.IsMinimized">
            <summary>
            Returns whether or not a comment has been minimized.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.LastEditedAt">
            <summary>
            The moment the editor made the last edit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.MinimizedReason">
            <summary>
            Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.Path">
            <summary>
            Identifies the file path associated with the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.Position">
            <summary>
            Identifies the line position associated with the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.PublishedAt">
            <summary>
            Identifies when the comment was published at.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.ReactionGroups">
            <summary>
            A list of reactions grouped by content left on the subject.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.CommitComment.Reactions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionContent}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionOrder}})">
            <summary>
            A list of Reactions left on the Issue.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="content">Allows filtering Reactions by emoji.</param>
            <param name="orderBy">Allows specifying the order in which reactions are returned.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.Repository">
            <summary>
            The repository associated with this node.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.ResourcePath">
            <summary>
            The HTTP path permalink for this commit comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.Url">
            <summary>
            The HTTP URL permalink for this commit comment.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.CommitComment.UserContentEdits(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of edits to this content.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.ViewerCanDelete">
            <summary>
            Check if the current viewer can delete this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.ViewerCanMinimize">
            <summary>
            Check if the current viewer can minimize this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.ViewerCanReact">
            <summary>
            Can user react to this subject
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.ViewerCanUpdate">
            <summary>
            Check if the current viewer can update this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.ViewerCannotUpdateReasons">
            <summary>
            Reasons why the current viewer can not update this comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitComment.ViewerDidAuthor">
            <summary>
            Did the viewer author this comment.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CommitCommentConnection">
            <summary>
            The connection type for CommitComment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitCommentConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitCommentConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitCommentConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitCommentConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CommitCommentEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitCommentEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitCommentEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CommitCommentThread">
            <summary>
            A thread of comments on a commit.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.CommitCommentThread.Comments(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The comments that exist in this thread.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitCommentThread.Commit">
            <summary>
            The commit the comments were made on.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitCommentThread.Path">
            <summary>
            The file the comments were made on.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitCommentThread.Position">
            <summary>
            The position in the diff for the commit that the comment was made on.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitCommentThread.Repository">
            <summary>
            The repository associated with this node.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CommitConnection">
            <summary>
            The connection type for Commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CommitContributionOrder">
            <summary>
            Ordering options for commit contribution connections.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitContributionOrder.Field">
            <summary>
            The field by which to order commit contributions.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitContributionOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CommitContributionOrderField">
            <summary>
            Properties by which commit contribution connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CommitContributionOrderField.OccurredAt">
            <summary>
            Order commit contributions by when they were made.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.CommitContributionOrderField.CommitCount">
            <summary>
            Order commit contributions by how many commits they represent.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CommitContributionsByRepository">
            <summary>
            This aggregates commits made by a user within one repository.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.CommitContributionsByRepository.Contributions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CommitContributionOrder}})">
            <summary>
            The commit contributions, each representing a day.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for commit contributions returned from the connection.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitContributionsByRepository.Repository">
            <summary>
            The repository in which the commits were made.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitContributionsByRepository.ResourcePath">
            <summary>
            The HTTP path for the user's commits to the repository in this time range.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitContributionsByRepository.Url">
            <summary>
            The HTTP URL for the user's commits to the repository in this time range.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CommitEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CommitHistoryConnection">
            <summary>
            The connection type for Commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitHistoryConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitHistoryConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitHistoryConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitHistoryConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CommitMessage">
            <summary>
            A message to include with a new commit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitMessage.Headline">
            <summary>
            The headline of the message.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitMessage.Body">
            <summary>
            The body of the message.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CommitMessagePatternParameters">
            <summary>
            Parameters to be used for the commit_message_pattern rule
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitMessagePatternParameters.Name">
            <summary>
            How this rule will appear to users.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitMessagePatternParameters.Negate">
            <summary>
            If true, the rule will fail if the pattern matches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitMessagePatternParameters.Operator">
            <summary>
            The operator to use for matching.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitMessagePatternParameters.Pattern">
            <summary>
            The pattern to match with.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CommitMessagePatternParametersInput">
            <summary>
            Parameters to be used for the commit_message_pattern rule
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitMessagePatternParametersInput.Name">
            <summary>
            How this rule will appear to users.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitMessagePatternParametersInput.Negate">
            <summary>
            If true, the rule will fail if the pattern matches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitMessagePatternParametersInput.Operator">
            <summary>
            The operator to use for matching.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitMessagePatternParametersInput.Pattern">
            <summary>
            The pattern to match with.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CommittableBranch">
            <summary>
            A git ref for a commit to be appended to.
            The ref must be a branch, i.e. its fully qualified name must start
            with `refs/heads/` (although the input is not required to be fully
            qualified).
            The Ref may be specified by its global node ID or by the
            `repositoryNameWithOwner` and `branchName`.
            ### Examples
            Specify a branch using a global node ID:
                { "id": "MDM6UmVmMTpyZWZzL2hlYWRzL21haW4=" }
            Specify a branch using `repositoryNameWithOwner` and `branchName`:
                {
                  "repositoryNameWithOwner": "github/graphql-client",
                  "branchName": "main"
                }
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommittableBranch.Id">
            <summary>
            The Node ID of the Ref to be updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommittableBranch.RepositoryNameWithOwner">
            <summary>
            The nameWithOwner of the repository to commit to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommittableBranch.BranchName">
            <summary>
            The unqualified name of the branch to append the commit to.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CommitterEmailPatternParameters">
            <summary>
            Parameters to be used for the committer_email_pattern rule
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitterEmailPatternParameters.Name">
            <summary>
            How this rule will appear to users.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitterEmailPatternParameters.Negate">
            <summary>
            If true, the rule will fail if the pattern matches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitterEmailPatternParameters.Operator">
            <summary>
            The operator to use for matching.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitterEmailPatternParameters.Pattern">
            <summary>
            The pattern to match with.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CommitterEmailPatternParametersInput">
            <summary>
            Parameters to be used for the committer_email_pattern rule
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitterEmailPatternParametersInput.Name">
            <summary>
            How this rule will appear to users.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitterEmailPatternParametersInput.Negate">
            <summary>
            If true, the rule will fail if the pattern matches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitterEmailPatternParametersInput.Operator">
            <summary>
            The operator to use for matching.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CommitterEmailPatternParametersInput.Pattern">
            <summary>
            The pattern to match with.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Comparison">
            <summary>
            Represents a comparison between two commit revisions.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Comparison.AheadBy">
            <summary>
            The number of commits ahead of the base branch.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Comparison.BaseTarget">
            <summary>
            The base revision of this comparison.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Comparison.BehindBy">
            <summary>
            The number of commits behind the base branch.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Comparison.Commits(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The commits which compose this comparison.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Comparison.HeadTarget">
            <summary>
            The head revision of this comparison.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Comparison.Status">
            <summary>
            The status of this comparison.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ComparisonCommitConnection">
            <summary>
            The connection type for Commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ComparisonCommitConnection.AuthorCount">
            <summary>
            The total count of authors and co-authors across all commits.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ComparisonCommitConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ComparisonCommitConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ComparisonCommitConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ComparisonCommitConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ComparisonStatus">
            <summary>
            The status of a git comparison between two refs.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ComparisonStatus.Diverged">
            <summary>
            The head ref is both ahead and behind of the base ref, indicating git history has diverged.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ComparisonStatus.Ahead">
            <summary>
            The head ref is ahead of the base ref.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ComparisonStatus.Behind">
            <summary>
            The head ref is behind the base ref.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ComparisonStatus.Identical">
            <summary>
            The head ref and base ref are identical.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ConnectedEvent">
            <summary>
            Represents a 'connected' event on a given issue or pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConnectedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConnectedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConnectedEvent.IsCrossRepository">
            <summary>
            Reference originated in a different repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConnectedEvent.Source">
            <summary>
            Issue or pull request that made the reference.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConnectedEvent.Subject">
            <summary>
            Issue or pull request which was connected.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IContribution">
            <summary>
            Represents a contribution a user made on GitHub, such as opening an issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IContribution.IsRestricted">
            <summary>
            Whether this contribution is associated with a record you do not have access to. For
            example, your own 'first issue' contribution may have been made on a repository you can no
            longer access.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IContribution.OccurredAt">
            <summary>
            When this contribution was made.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IContribution.ResourcePath">
            <summary>
            The HTTP path for this contribution.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IContribution.Url">
            <summary>
            The HTTP URL for this contribution.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IContribution.User">
            <summary>
            The user who made this contribution.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ContributionCalendar">
            <summary>
            A calendar of contributions made on GitHub by a user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionCalendar.Colors">
            <summary>
            A list of hex color codes used in this calendar. The darker the color, the more contributions it represents.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionCalendar.IsHalloween">
            <summary>
            Determine if the color set was chosen because it's currently Halloween.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionCalendar.Months">
            <summary>
            A list of the months of contributions in this calendar.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionCalendar.TotalContributions">
            <summary>
            The count of total contributions in the calendar.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionCalendar.Weeks">
            <summary>
            A list of the weeks of contributions in this calendar.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ContributionCalendarDay">
            <summary>
            Represents a single day of contributions on GitHub by a user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionCalendarDay.Color">
            <summary>
            The hex color code that represents how many contributions were made on this day compared to others in the calendar.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionCalendarDay.ContributionCount">
            <summary>
            How many contributions were made by the user on this day.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionCalendarDay.ContributionLevel">
            <summary>
            Indication of contributions, relative to other days. Can be used to indicate which color to represent this day on a calendar.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionCalendarDay.Date">
            <summary>
            The day this square represents.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionCalendarDay.Weekday">
            <summary>
            A number representing which day of the week this square represents, e.g., 1 is Monday.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ContributionCalendarMonth">
            <summary>
            A month of contributions in a user's contribution graph.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionCalendarMonth.FirstDay">
            <summary>
            The date of the first day of this month.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionCalendarMonth.Name">
            <summary>
            The name of the month.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionCalendarMonth.TotalWeeks">
            <summary>
            How many weeks started in this month.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionCalendarMonth.Year">
            <summary>
            The year the month occurred in.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ContributionCalendarWeek">
            <summary>
            A week of contributions in a user's contribution graph.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionCalendarWeek.ContributionDays">
            <summary>
            The days of contributions in this week.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionCalendarWeek.FirstDay">
            <summary>
            The date of the earliest square in this week.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ContributionLevel">
            <summary>
            Varying levels of contributions from none to many.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ContributionLevel.None">
            <summary>
            No contributions occurred.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ContributionLevel.FirstQuartile">
            <summary>
            Lowest 25% of days of contributions.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ContributionLevel.SecondQuartile">
            <summary>
            Second lowest 25% of days of contributions. More contributions than the first quartile.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ContributionLevel.ThirdQuartile">
            <summary>
            Second highest 25% of days of contributions. More contributions than second quartile, less than the fourth quartile.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ContributionLevel.FourthQuartile">
            <summary>
            Highest 25% of days of contributions. More contributions than the third quartile.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ContributionOrder">
            <summary>
            Ordering options for contribution connections.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ContributionsCollection">
            <summary>
            A contributions collection aggregates contributions such as opened issues and commits created by a user.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ContributionsCollection.CommitContributionsByRepository(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            Commit contributions made by the user, grouped by repository.
            </summary>
            <param name="maxRepositories">How many repositories should be included.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.ContributionCalendar">
            <summary>
            A calendar of this user's contributions on GitHub.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.ContributionYears">
            <summary>
            The years the user has been making contributions with the most recent year first.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.DoesEndInCurrentMonth">
            <summary>
            Determine if this collection's time span ends in the current month.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.EarliestRestrictedContributionDate">
            <summary>
            The date of the first restricted contribution the user made in this time period. Can only be non-null when the user has enabled private contribution counts.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.EndedAt">
            <summary>
            The ending date and time of this collection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.FirstIssueContribution">
            <summary>
            The first issue the user opened on GitHub. This will be null if that issue was opened outside the collection's time range and ignoreTimeRange is false. If the issue is not visible but the user has opted to show private contributions, a RestrictedContribution will be returned.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.FirstPullRequestContribution">
            <summary>
            The first pull request the user opened on GitHub. This will be null if that pull request was opened outside the collection's time range and ignoreTimeRange is not true. If the pull request is not visible but the user has opted to show private contributions, a RestrictedContribution will be returned.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.FirstRepositoryContribution">
            <summary>
            The first repository the user created on GitHub. This will be null if that first repository was created outside the collection's time range and ignoreTimeRange is false. If the repository is not visible, then a RestrictedContribution is returned.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.HasActivityInThePast">
            <summary>
            Does the user have any more activity in the timeline that occurred prior to the collection's time range?
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.HasAnyContributions">
            <summary>
            Determine if there are any contributions in this collection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.HasAnyRestrictedContributions">
            <summary>
            Determine if the user made any contributions in this time frame whose details are not visible because they were made in a private repository. Can only be true if the user enabled private contribution counts.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.IsSingleDay">
            <summary>
            Whether or not the collector's time span is all within the same day.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ContributionsCollection.IssueContributions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ContributionOrder}})">
            <summary>
            A list of issues the user opened.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="excludeFirst">Should the user's first issue ever be excluded from the result.</param>
            <param name="excludePopular">Should the user's most commented issue be excluded from the result.</param>
            <param name="orderBy">Ordering options for contributions returned from the connection.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.ContributionsCollection.IssueContributionsByRepository(System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            Issue contributions made by the user, grouped by repository.
            </summary>
            <param name="excludeFirst">Should the user's first issue ever be excluded from the result.</param>
            <param name="excludePopular">Should the user's most commented issue be excluded from the result.</param>
            <param name="maxRepositories">How many repositories should be included.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.JoinedGitHubContribution">
            <summary>
            When the user signed up for GitHub. This will be null if that sign up date falls outside the collection's time range and ignoreTimeRange is false.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.LatestRestrictedContributionDate">
            <summary>
            The date of the most recent restricted contribution the user made in this time period. Can only be non-null when the user has enabled private contribution counts.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.MostRecentCollectionWithActivity">
            <summary>
            When this collection's time range does not include any activity from the user, use this
            to get a different collection from an earlier time range that does have activity.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.MostRecentCollectionWithoutActivity">
            <summary>
            Returns a different contributions collection from an earlier time range than this one
            that does not have any contributions.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.PopularIssueContribution">
            <summary>
            The issue the user opened on GitHub that received the most comments in the specified
            time frame.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.PopularPullRequestContribution">
            <summary>
            The pull request the user opened on GitHub that received the most comments in the
            specified time frame.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ContributionsCollection.PullRequestContributions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ContributionOrder}})">
            <summary>
            Pull request contributions made by the user.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="excludeFirst">Should the user's first pull request ever be excluded from the result.</param>
            <param name="excludePopular">Should the user's most commented pull request be excluded from the result.</param>
            <param name="orderBy">Ordering options for contributions returned from the connection.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.ContributionsCollection.PullRequestContributionsByRepository(System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            Pull request contributions made by the user, grouped by repository.
            </summary>
            <param name="excludeFirst">Should the user's first pull request ever be excluded from the result.</param>
            <param name="excludePopular">Should the user's most commented pull request be excluded from the result.</param>
            <param name="maxRepositories">How many repositories should be included.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.ContributionsCollection.PullRequestReviewContributions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ContributionOrder}})">
            <summary>
            Pull request review contributions made by the user. Returns the most recently
            submitted review for each PR reviewed by the user.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for contributions returned from the connection.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.ContributionsCollection.PullRequestReviewContributionsByRepository(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            Pull request review contributions made by the user, grouped by repository.
            </summary>
            <param name="maxRepositories">How many repositories should be included.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.ContributionsCollection.RepositoryContributions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ContributionOrder}})">
            <summary>
            A list of repositories owned by the user that the user created in this time range.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="excludeFirst">Should the user's first repository ever be excluded from the result.</param>
            <param name="orderBy">Ordering options for contributions returned from the connection.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.RestrictedContributionsCount">
            <summary>
            A count of contributions made by the user that the viewer cannot access. Only non-zero when the user has chosen to share their private contribution counts.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.StartedAt">
            <summary>
            The beginning date and time of this collection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.TotalCommitContributions">
            <summary>
            How many commits were made by the user in this time span.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ContributionsCollection.TotalIssueContributions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            How many issues the user opened.
            </summary>
            <param name="excludeFirst">Should the user's first issue ever be excluded from this count.</param>
            <param name="excludePopular">Should the user's most commented issue be excluded from this count.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.ContributionsCollection.TotalPullRequestContributions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            How many pull requests the user opened.
            </summary>
            <param name="excludeFirst">Should the user's first pull request ever be excluded from this count.</param>
            <param name="excludePopular">Should the user's most commented pull request be excluded from this count.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.TotalPullRequestReviewContributions">
            <summary>
            How many pull request reviews the user left.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.TotalRepositoriesWithContributedCommits">
            <summary>
            How many different repositories the user committed to.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ContributionsCollection.TotalRepositoriesWithContributedIssues(System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            How many different repositories the user opened issues in.
            </summary>
            <param name="excludeFirst">Should the user's first issue ever be excluded from this count.</param>
            <param name="excludePopular">Should the user's most commented issue be excluded from this count.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.TotalRepositoriesWithContributedPullRequestReviews">
            <summary>
            How many different repositories the user left pull request reviews in.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ContributionsCollection.TotalRepositoriesWithContributedPullRequests(System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            How many different repositories the user opened pull requests in.
            </summary>
            <param name="excludeFirst">Should the user's first pull request ever be excluded from this count.</param>
            <param name="excludePopular">Should the user's most commented pull request be excluded from this count.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.ContributionsCollection.TotalRepositoryContributions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            How many repositories the user created.
            </summary>
            <param name="excludeFirst">Should the user's first repository ever be excluded from this count.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.ContributionsCollection.User">
            <summary>
            The user who made the contributions in this collection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ConvertedNoteToIssueEvent">
            <summary>
            Represents a 'converted_note_to_issue' event on a given issue or pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConvertedNoteToIssueEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConvertedNoteToIssueEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConvertedNoteToIssueEvent.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ConvertedToDiscussionEvent">
            <summary>
            Represents a 'converted_to_discussion' event on a given issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConvertedToDiscussionEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConvertedToDiscussionEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConvertedToDiscussionEvent.Discussion">
            <summary>
            The discussion that the issue was converted into.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ConvertProjectCardNoteToIssueInput">
            <summary>
            Autogenerated input type of ConvertProjectCardNoteToIssue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConvertProjectCardNoteToIssueInput.ProjectCardId">
            <summary>
            The ProjectCard ID to convert.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConvertProjectCardNoteToIssueInput.RepositoryId">
            <summary>
            The ID of the repository to create the issue in.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConvertProjectCardNoteToIssueInput.Title">
            <summary>
            The title of the newly created issue. Defaults to the card's note text.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConvertProjectCardNoteToIssueInput.Body">
            <summary>
            The body of the newly created issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConvertProjectCardNoteToIssueInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ConvertProjectCardNoteToIssuePayload">
            <summary>
            Autogenerated return type of ConvertProjectCardNoteToIssue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConvertProjectCardNoteToIssuePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConvertProjectCardNoteToIssuePayload.ProjectCard">
            <summary>
            The updated ProjectCard.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ConvertPullRequestToDraftInput">
            <summary>
            Autogenerated input type of ConvertPullRequestToDraft
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConvertPullRequestToDraftInput.PullRequestId">
            <summary>
            ID of the pull request to convert to draft
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConvertPullRequestToDraftInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ConvertPullRequestToDraftPayload">
            <summary>
            Autogenerated return type of ConvertPullRequestToDraft
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConvertPullRequestToDraftPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConvertPullRequestToDraftPayload.PullRequest">
            <summary>
            The pull request that is now a draft.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ConvertToDraftEvent">
            <summary>
            Represents a 'convert_to_draft' event on a given pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConvertToDraftEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConvertToDraftEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConvertToDraftEvent.PullRequest">
            <summary>
            PullRequest referenced by event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConvertToDraftEvent.ResourcePath">
            <summary>
            The HTTP path for this convert to draft event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ConvertToDraftEvent.Url">
            <summary>
            The HTTP URL for this convert to draft event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CopyProjectV2Input">
            <summary>
            Autogenerated input type of CopyProjectV2
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CopyProjectV2Input.ProjectId">
            <summary>
            The ID of the source Project to copy.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CopyProjectV2Input.OwnerId">
            <summary>
            The owner ID of the new project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CopyProjectV2Input.Title">
            <summary>
            The title of the project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CopyProjectV2Input.IncludeDraftIssues">
            <summary>
            Include draft issues in the new project
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CopyProjectV2Input.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CopyProjectV2Payload">
            <summary>
            Autogenerated return type of CopyProjectV2
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CopyProjectV2Payload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CopyProjectV2Payload.ProjectV2">
            <summary>
            The copied project.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateAttributionInvitationInput">
            <summary>
            Autogenerated input type of CreateAttributionInvitation
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateAttributionInvitationInput.OwnerId">
            <summary>
            The Node ID of the owner scoping the reattributable data.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateAttributionInvitationInput.SourceId">
            <summary>
            The Node ID of the account owning the data to reattribute.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateAttributionInvitationInput.TargetId">
            <summary>
            The Node ID of the account which may claim the data.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateAttributionInvitationInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateAttributionInvitationPayload">
            <summary>
            Autogenerated return type of CreateAttributionInvitation
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateAttributionInvitationPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateAttributionInvitationPayload.Owner">
            <summary>
            The owner scoping the reattributable data.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateAttributionInvitationPayload.Source">
            <summary>
            The account owning the data to reattribute.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateAttributionInvitationPayload.Target">
            <summary>
            The account which may claim the data.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput">
            <summary>
            Autogenerated input type of CreateBranchProtectionRule
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.RepositoryId">
            <summary>
            The global relay id of the repository in which a new branch protection rule should be created in.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.Pattern">
            <summary>
            The glob-like pattern used to determine matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.RequiresApprovingReviews">
            <summary>
            Are approving reviews required to update matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.RequiredApprovingReviewCount">
            <summary>
            Number of approving reviews required to update matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.RequiresCommitSignatures">
            <summary>
            Are commits required to be signed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.RequiresLinearHistory">
            <summary>
            Are merge commits prohibited from being pushed to this branch.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.BlocksCreations">
            <summary>
            Is branch creation a protected operation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.AllowsForcePushes">
            <summary>
            Are force pushes allowed on this branch.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.AllowsDeletions">
            <summary>
            Can this branch be deleted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.IsAdminEnforced">
            <summary>
            Can admins overwrite branch protection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.RequiresStatusChecks">
            <summary>
            Are status checks required to update matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.RequiresStrictStatusChecks">
            <summary>
            Are branches required to be up to date before merging.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.RequiresCodeOwnerReviews">
            <summary>
            Are reviews from code owners required to update matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.DismissesStaleReviews">
            <summary>
            Will new commits pushed to matching branches dismiss pull request review approvals.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.RestrictsReviewDismissals">
            <summary>
            Is dismissal of pull request reviews restricted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.ReviewDismissalActorIds">
            <summary>
            A list of User, Team, or App IDs allowed to dismiss reviews on pull requests targeting matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.BypassPullRequestActorIds">
            <summary>
            A list of User, Team, or App IDs allowed to bypass pull requests targeting matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.BypassForcePushActorIds">
            <summary>
            A list of User, Team, or App IDs allowed to bypass force push targeting matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.RestrictsPushes">
            <summary>
            Is pushing to matching branches restricted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.PushActorIds">
            <summary>
            A list of User, Team, or App IDs allowed to push to matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.RequiredStatusCheckContexts">
            <summary>
            List of required status check contexts that must pass for commits to be accepted to matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.RequiredStatusChecks">
            <summary>
            The list of required status checks
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.RequiresDeployments">
            <summary>
            Are successful deployments required before merging.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.RequiredDeploymentEnvironments">
            <summary>
            The list of required deployment environments
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.RequiresConversationResolution">
            <summary>
            Are conversations required to be resolved before merging.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.RequireLastPushApproval">
            <summary>
            Whether the most recent push must be approved by someone other than the person who pushed it
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.LockBranch">
            <summary>
            Whether to set the branch as read-only. If this is true, users will not be able to push to the branch.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.LockAllowsFetchAndMerge">
            <summary>
            Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `false` to prevent fork syncing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRuleInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateBranchProtectionRulePayload">
            <summary>
            Autogenerated return type of CreateBranchProtectionRule
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRulePayload.BranchProtectionRule">
            <summary>
            The newly created BranchProtectionRule.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateBranchProtectionRulePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateCheckRunInput">
            <summary>
            Autogenerated input type of CreateCheckRun
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCheckRunInput.RepositoryId">
            <summary>
            The node ID of the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCheckRunInput.Name">
            <summary>
            The name of the check.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCheckRunInput.HeadSha">
            <summary>
            The SHA of the head commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCheckRunInput.DetailsUrl">
            <summary>
            The URL of the integrator's site that has the full details of the check.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCheckRunInput.ExternalId">
            <summary>
            A reference for the run on the integrator's system.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCheckRunInput.Status">
            <summary>
            The current status.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCheckRunInput.StartedAt">
            <summary>
            The time that the check run began.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCheckRunInput.Conclusion">
            <summary>
            The final conclusion of the check.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCheckRunInput.CompletedAt">
            <summary>
            The time that the check run finished.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCheckRunInput.Output">
            <summary>
            Descriptive details about the run.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCheckRunInput.Actions">
            <summary>
            Possible further actions the integrator can perform, which a user may trigger.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCheckRunInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateCheckRunPayload">
            <summary>
            Autogenerated return type of CreateCheckRun
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCheckRunPayload.CheckRun">
            <summary>
            The newly created check run.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCheckRunPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateCheckSuiteInput">
            <summary>
            Autogenerated input type of CreateCheckSuite
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCheckSuiteInput.RepositoryId">
            <summary>
            The Node ID of the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCheckSuiteInput.HeadSha">
            <summary>
            The SHA of the head commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCheckSuiteInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateCheckSuitePayload">
            <summary>
            Autogenerated return type of CreateCheckSuite
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCheckSuitePayload.CheckSuite">
            <summary>
            The newly created check suite.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCheckSuitePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateCommitOnBranchInput">
            <summary>
            Autogenerated input type of CreateCommitOnBranch
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCommitOnBranchInput.Branch">
            <summary>
            The Ref to be updated.  Must be a branch.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCommitOnBranchInput.FileChanges">
            <summary>
            A description of changes to files in this commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCommitOnBranchInput.Message">
            <summary>
            The commit message the be included with the commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCommitOnBranchInput.ExpectedHeadOid">
            <summary>
            The git commit oid expected at the head of the branch prior to the commit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCommitOnBranchInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateCommitOnBranchPayload">
            <summary>
            Autogenerated return type of CreateCommitOnBranch
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCommitOnBranchPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCommitOnBranchPayload.Commit">
            <summary>
            The new commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateCommitOnBranchPayload.Ref">
            <summary>
            The ref which has been updated to point to the new commit.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreatedCommitContribution">
            <summary>
            Represents the contribution a user made by committing to a repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedCommitContribution.CommitCount">
            <summary>
            How many commits were made on this day to this repository by the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedCommitContribution.IsRestricted">
            <summary>
            Whether this contribution is associated with a record you do not have access to. For
            example, your own 'first issue' contribution may have been made on a repository you can no
            longer access.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedCommitContribution.OccurredAt">
            <summary>
            When this contribution was made.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedCommitContribution.Repository">
            <summary>
            The repository the user made a commit in.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedCommitContribution.ResourcePath">
            <summary>
            The HTTP path for this contribution.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedCommitContribution.Url">
            <summary>
            The HTTP URL for this contribution.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedCommitContribution.User">
            <summary>
            The user who made this contribution.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreatedCommitContributionConnection">
            <summary>
            The connection type for CreatedCommitContribution.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedCommitContributionConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedCommitContributionConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedCommitContributionConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedCommitContributionConnection.TotalCount">
            <summary>
            Identifies the total count of commits across days and repositories in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreatedCommitContributionEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedCommitContributionEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedCommitContributionEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateDiscussionInput">
            <summary>
            Autogenerated input type of CreateDiscussion
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateDiscussionInput.RepositoryId">
            <summary>
            The id of the repository on which to create the discussion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateDiscussionInput.Title">
            <summary>
            The title of the discussion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateDiscussionInput.Body">
            <summary>
            The body of the discussion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateDiscussionInput.CategoryId">
            <summary>
            The id of the discussion category to associate with this discussion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateDiscussionInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateDiscussionPayload">
            <summary>
            Autogenerated return type of CreateDiscussion
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateDiscussionPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateDiscussionPayload.Discussion">
            <summary>
            The discussion that was just created.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreatedIssueContribution">
            <summary>
            Represents the contribution a user made on GitHub by opening an issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedIssueContribution.IsRestricted">
            <summary>
            Whether this contribution is associated with a record you do not have access to. For
            example, your own 'first issue' contribution may have been made on a repository you can no
            longer access.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedIssueContribution.Issue">
            <summary>
            The issue that was opened.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedIssueContribution.OccurredAt">
            <summary>
            When this contribution was made.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedIssueContribution.ResourcePath">
            <summary>
            The HTTP path for this contribution.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedIssueContribution.Url">
            <summary>
            The HTTP URL for this contribution.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedIssueContribution.User">
            <summary>
            The user who made this contribution.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreatedIssueContributionConnection">
            <summary>
            The connection type for CreatedIssueContribution.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedIssueContributionConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedIssueContributionConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedIssueContributionConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedIssueContributionConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreatedIssueContributionEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedIssueContributionEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedIssueContributionEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreatedIssueOrRestrictedContribution">
            <summary>
            Represents either a issue the viewer can access or a restricted contribution.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.CreatedIssueOrRestrictedContribution.Selector`1.CreatedIssueContribution(System.Func{Octokit.GraphQL.Model.CreatedIssueContribution,`0})">
            <summary>
            Represents the contribution a user made on GitHub by opening an issue.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.CreatedIssueOrRestrictedContribution.Selector`1.RestrictedContribution(System.Func{Octokit.GraphQL.Model.RestrictedContribution,`0})">
            <summary>
            Represents a private contribution a user made on GitHub.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreatedPullRequestContribution">
            <summary>
            Represents the contribution a user made on GitHub by opening a pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestContribution.IsRestricted">
            <summary>
            Whether this contribution is associated with a record you do not have access to. For
            example, your own 'first issue' contribution may have been made on a repository you can no
            longer access.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestContribution.OccurredAt">
            <summary>
            When this contribution was made.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestContribution.PullRequest">
            <summary>
            The pull request that was opened.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestContribution.ResourcePath">
            <summary>
            The HTTP path for this contribution.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestContribution.Url">
            <summary>
            The HTTP URL for this contribution.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestContribution.User">
            <summary>
            The user who made this contribution.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreatedPullRequestContributionConnection">
            <summary>
            The connection type for CreatedPullRequestContribution.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestContributionConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestContributionConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestContributionConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestContributionConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreatedPullRequestContributionEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestContributionEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestContributionEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreatedPullRequestOrRestrictedContribution">
            <summary>
            Represents either a pull request the viewer can access or a restricted contribution.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.CreatedPullRequestOrRestrictedContribution.Selector`1.CreatedPullRequestContribution(System.Func{Octokit.GraphQL.Model.CreatedPullRequestContribution,`0})">
            <summary>
            Represents the contribution a user made on GitHub by opening a pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.CreatedPullRequestOrRestrictedContribution.Selector`1.RestrictedContribution(System.Func{Octokit.GraphQL.Model.RestrictedContribution,`0})">
            <summary>
            Represents a private contribution a user made on GitHub.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreatedPullRequestReviewContribution">
            <summary>
            Represents the contribution a user made by leaving a review on a pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestReviewContribution.IsRestricted">
            <summary>
            Whether this contribution is associated with a record you do not have access to. For
            example, your own 'first issue' contribution may have been made on a repository you can no
            longer access.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestReviewContribution.OccurredAt">
            <summary>
            When this contribution was made.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestReviewContribution.PullRequest">
            <summary>
            The pull request the user reviewed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestReviewContribution.PullRequestReview">
            <summary>
            The review the user left on the pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestReviewContribution.Repository">
            <summary>
            The repository containing the pull request that the user reviewed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestReviewContribution.ResourcePath">
            <summary>
            The HTTP path for this contribution.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestReviewContribution.Url">
            <summary>
            The HTTP URL for this contribution.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestReviewContribution.User">
            <summary>
            The user who made this contribution.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreatedPullRequestReviewContributionConnection">
            <summary>
            The connection type for CreatedPullRequestReviewContribution.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestReviewContributionConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestReviewContributionConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestReviewContributionConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestReviewContributionConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreatedPullRequestReviewContributionEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestReviewContributionEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedPullRequestReviewContributionEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreatedRepositoryContribution">
            <summary>
            Represents the contribution a user made on GitHub by creating a repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedRepositoryContribution.IsRestricted">
            <summary>
            Whether this contribution is associated with a record you do not have access to. For
            example, your own 'first issue' contribution may have been made on a repository you can no
            longer access.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedRepositoryContribution.OccurredAt">
            <summary>
            When this contribution was made.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedRepositoryContribution.Repository">
            <summary>
            The repository that was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedRepositoryContribution.ResourcePath">
            <summary>
            The HTTP path for this contribution.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedRepositoryContribution.Url">
            <summary>
            The HTTP URL for this contribution.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedRepositoryContribution.User">
            <summary>
            The user who made this contribution.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreatedRepositoryContributionConnection">
            <summary>
            The connection type for CreatedRepositoryContribution.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedRepositoryContributionConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedRepositoryContributionConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedRepositoryContributionConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedRepositoryContributionConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreatedRepositoryContributionEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedRepositoryContributionEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatedRepositoryContributionEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreatedRepositoryOrRestrictedContribution">
            <summary>
            Represents either a repository the viewer can access or a restricted contribution.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.CreatedRepositoryOrRestrictedContribution.Selector`1.CreatedRepositoryContribution(System.Func{Octokit.GraphQL.Model.CreatedRepositoryContribution,`0})">
            <summary>
            Represents the contribution a user made on GitHub by creating a repository.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.CreatedRepositoryOrRestrictedContribution.Selector`1.RestrictedContribution(System.Func{Octokit.GraphQL.Model.RestrictedContribution,`0})">
            <summary>
            Represents a private contribution a user made on GitHub.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateEnterpriseOrganizationInput">
            <summary>
            Autogenerated input type of CreateEnterpriseOrganization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateEnterpriseOrganizationInput.EnterpriseId">
            <summary>
            The ID of the enterprise owning the new organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateEnterpriseOrganizationInput.Login">
            <summary>
            The login of the new organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateEnterpriseOrganizationInput.ProfileName">
            <summary>
            The profile name of the new organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateEnterpriseOrganizationInput.BillingEmail">
            <summary>
            The email used for sending billing receipts.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateEnterpriseOrganizationInput.AdminLogins">
            <summary>
            The logins for the administrators of the new organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateEnterpriseOrganizationInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateEnterpriseOrganizationPayload">
            <summary>
            Autogenerated return type of CreateEnterpriseOrganization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateEnterpriseOrganizationPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateEnterpriseOrganizationPayload.Enterprise">
            <summary>
            The enterprise that owns the created organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateEnterpriseOrganizationPayload.Organization">
            <summary>
            The organization that was created.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateEnvironmentInput">
            <summary>
            Autogenerated input type of CreateEnvironment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateEnvironmentInput.RepositoryId">
            <summary>
            The node ID of the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateEnvironmentInput.Name">
            <summary>
            The name of the environment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateEnvironmentInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateEnvironmentPayload">
            <summary>
            Autogenerated return type of CreateEnvironment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateEnvironmentPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateEnvironmentPayload.Environment">
            <summary>
            The new or existing environment.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateIpAllowListEntryInput">
            <summary>
            Autogenerated input type of CreateIpAllowListEntry
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateIpAllowListEntryInput.OwnerId">
            <summary>
            The ID of the owner for which to create the new IP allow list entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateIpAllowListEntryInput.AllowListValue">
            <summary>
            An IP address or range of addresses in CIDR notation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateIpAllowListEntryInput.Name">
            <summary>
            An optional name for the IP allow list entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateIpAllowListEntryInput.IsActive">
            <summary>
            Whether the IP allow list entry is active when an IP allow list is enabled.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateIpAllowListEntryInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateIpAllowListEntryPayload">
            <summary>
            Autogenerated return type of CreateIpAllowListEntry
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateIpAllowListEntryPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateIpAllowListEntryPayload.IpAllowListEntry">
            <summary>
            The IP allow list entry that was created.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateIssueInput">
            <summary>
            Autogenerated input type of CreateIssue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateIssueInput.RepositoryId">
            <summary>
            The Node ID of the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateIssueInput.Title">
            <summary>
            The title for the issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateIssueInput.Body">
            <summary>
            The body for the issue description.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateIssueInput.AssigneeIds">
            <summary>
            The Node ID for the user assignee for this issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateIssueInput.MilestoneId">
            <summary>
            The Node ID of the milestone for this issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateIssueInput.LabelIds">
            <summary>
            An array of Node IDs of labels for this issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateIssueInput.ProjectIds">
            <summary>
            An array of Node IDs for projects associated with this issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateIssueInput.IssueTemplate">
            <summary>
            The name of an issue template in the repository, assigns labels and assignees from the template to the issue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateIssueInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateIssuePayload">
            <summary>
            Autogenerated return type of CreateIssue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateIssuePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateIssuePayload.Issue">
            <summary>
            The new issue.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateLinkedBranchInput">
            <summary>
            Autogenerated input type of CreateLinkedBranch
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateLinkedBranchInput.IssueId">
            <summary>
            ID of the issue to link to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateLinkedBranchInput.Oid">
            <summary>
            The commit SHA to base the new branch on.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateLinkedBranchInput.Name">
            <summary>
            The name of the new branch. Defaults to issue number and title.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateLinkedBranchInput.RepositoryId">
            <summary>
            ID of the repository to create the branch in. Defaults to the issue repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateLinkedBranchInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateLinkedBranchPayload">
            <summary>
            Autogenerated return type of CreateLinkedBranch
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateLinkedBranchPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateLinkedBranchPayload.LinkedBranch">
            <summary>
            The new branch issue reference.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateMigrationSourceInput">
            <summary>
            Autogenerated input type of CreateMigrationSource
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateMigrationSourceInput.Name">
            <summary>
            The migration source name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateMigrationSourceInput.Url">
            <summary>
            The migration source URL, for example `https://github.com` or `https://monalisa.ghe.com`.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateMigrationSourceInput.AccessToken">
            <summary>
            The migration source access token.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateMigrationSourceInput.Type">
            <summary>
            The migration source type.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateMigrationSourceInput.OwnerId">
            <summary>
            The ID of the organization that will own the migration source.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateMigrationSourceInput.GithubPat">
            <summary>
            The GitHub personal access token of the user importing to the target repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateMigrationSourceInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateMigrationSourcePayload">
            <summary>
            Autogenerated return type of CreateMigrationSource
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateMigrationSourcePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateMigrationSourcePayload.MigrationSource">
            <summary>
            The created migration source.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateProjectInput">
            <summary>
            Autogenerated input type of CreateProject
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateProjectInput.OwnerId">
            <summary>
            The owner ID to create the project under.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateProjectInput.Name">
            <summary>
            The name of project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateProjectInput.Body">
            <summary>
            The description of project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateProjectInput.Template">
            <summary>
            The name of the GitHub-provided template.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateProjectInput.RepositoryIds">
            <summary>
            A list of repository IDs to create as linked repositories for the project
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateProjectInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateProjectPayload">
            <summary>
            Autogenerated return type of CreateProject
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateProjectPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateProjectPayload.Project">
            <summary>
            The new project.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateProjectV2FieldInput">
            <summary>
            Autogenerated input type of CreateProjectV2Field
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateProjectV2FieldInput.ProjectId">
            <summary>
            The ID of the Project to create the field in.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateProjectV2FieldInput.DataType">
            <summary>
            The data type of the field.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateProjectV2FieldInput.Name">
            <summary>
            The name of the field.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateProjectV2FieldInput.SingleSelectOptions">
            <summary>
            Options for a single select field. At least one value is required if data_type is SINGLE_SELECT
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateProjectV2FieldInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateProjectV2FieldPayload">
            <summary>
            Autogenerated return type of CreateProjectV2Field
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateProjectV2FieldPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateProjectV2FieldPayload.ProjectV2Field">
            <summary>
            The new field.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateProjectV2Input">
            <summary>
            Autogenerated input type of CreateProjectV2
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateProjectV2Input.OwnerId">
            <summary>
            The owner ID to create the project under.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateProjectV2Input.Title">
            <summary>
            The title of the project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateProjectV2Input.RepositoryId">
            <summary>
            The repository to link the project to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateProjectV2Input.TeamId">
            <summary>
            The team to link the project to. The team will be granted read permissions.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateProjectV2Input.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateProjectV2Payload">
            <summary>
            Autogenerated return type of CreateProjectV2
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateProjectV2Payload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateProjectV2Payload.ProjectV2">
            <summary>
            The new project.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreatePullRequestInput">
            <summary>
            Autogenerated input type of CreatePullRequest
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatePullRequestInput.RepositoryId">
            <summary>
            The Node ID of the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatePullRequestInput.BaseRefName">
            <summary>
            The name of the branch you want your changes pulled into. This should be an existing branch
            on the current repository. You cannot update the base branch on a pull request to point
            to another repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatePullRequestInput.HeadRefName">
            <summary>
            The name of the branch where your changes are implemented. For cross-repository pull requests
            in the same network, namespace `head_ref_name` with a user like this: `username:branch`.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatePullRequestInput.HeadRepositoryId">
            <summary>
            The Node ID of the head repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatePullRequestInput.Title">
            <summary>
            The title of the pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatePullRequestInput.Body">
            <summary>
            The contents of the pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatePullRequestInput.MaintainerCanModify">
            <summary>
            Indicates whether maintainers can modify the pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatePullRequestInput.Draft">
            <summary>
            Indicates whether this pull request should be a draft.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatePullRequestInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreatePullRequestPayload">
            <summary>
            Autogenerated return type of CreatePullRequest
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatePullRequestPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreatePullRequestPayload.PullRequest">
            <summary>
            The new pull request.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateRefInput">
            <summary>
            Autogenerated input type of CreateRef
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRefInput.RepositoryId">
            <summary>
            The Node ID of the Repository to create the Ref in.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRefInput.Name">
            <summary>
            The fully qualified name of the new Ref (ie: `refs/heads/my_new_branch`).
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRefInput.Oid">
            <summary>
            The GitObjectID that the new Ref shall target. Must point to a commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRefInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateRefPayload">
            <summary>
            Autogenerated return type of CreateRef
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRefPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRefPayload.Ref">
            <summary>
            The newly created ref.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateRepositoryInput">
            <summary>
            Autogenerated input type of CreateRepository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRepositoryInput.Name">
            <summary>
            The name of the new repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRepositoryInput.OwnerId">
            <summary>
            The ID of the owner for the new repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRepositoryInput.Description">
            <summary>
            A short description of the new repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRepositoryInput.Visibility">
            <summary>
            Indicates the repository's visibility level.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRepositoryInput.Template">
            <summary>
            Whether this repository should be marked as a template such that anyone who can access it can create new repositories with the same files and directory structure.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRepositoryInput.HomepageUrl">
            <summary>
            The URL for a web page about this repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRepositoryInput.HasWikiEnabled">
            <summary>
            Indicates if the repository should have the wiki feature enabled.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRepositoryInput.HasIssuesEnabled">
            <summary>
            Indicates if the repository should have the issues feature enabled.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRepositoryInput.TeamId">
            <summary>
            When an organization is specified as the owner, this ID identifies the team that should be granted access to the new repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRepositoryInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateRepositoryPayload">
            <summary>
            Autogenerated return type of CreateRepository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRepositoryPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRepositoryPayload.Repository">
            <summary>
            The new repository.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateRepositoryRulesetInput">
            <summary>
            Autogenerated input type of CreateRepositoryRuleset
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRepositoryRulesetInput.SourceId">
            <summary>
            The global relay id of the source in which a new ruleset should be created in.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRepositoryRulesetInput.Name">
            <summary>
            The name of the ruleset.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRepositoryRulesetInput.Target">
            <summary>
            The target of the ruleset.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRepositoryRulesetInput.Rules">
            <summary>
            The list of rules for this ruleset
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRepositoryRulesetInput.Conditions">
            <summary>
            The set of conditions for this ruleset
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRepositoryRulesetInput.Enforcement">
            <summary>
            The enforcement level for this ruleset
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRepositoryRulesetInput.BypassMode">
            <summary>
            The bypass mode for this ruleset
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRepositoryRulesetInput.BypassActorIds">
            <summary>
            A list of Team or App IDs allowed to bypass rules in this ruleset.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRepositoryRulesetInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateRepositoryRulesetPayload">
            <summary>
            Autogenerated return type of CreateRepositoryRuleset
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRepositoryRulesetPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateRepositoryRulesetPayload.Ruleset">
            <summary>
            The newly created Ruleset.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateSponsorshipInput">
            <summary>
            Autogenerated input type of CreateSponsorship
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorshipInput.SponsorId">
            <summary>
            The ID of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorLogin is not given.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorshipInput.SponsorLogin">
            <summary>
            The username of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorId is not given.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorshipInput.SponsorableId">
            <summary>
            The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorshipInput.SponsorableLogin">
            <summary>
            The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorshipInput.TierId">
            <summary>
            The ID of one of sponsorable's existing tiers to sponsor at. Required if amount is not specified.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorshipInput.Amount">
            <summary>
            The amount to pay to the sponsorable in US dollars. Required if a tierId is not specified. Valid values: 1-12000.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorshipInput.IsRecurring">
            <summary>
            Whether the sponsorship should happen monthly/yearly or just this one time. Required if a tierId is not specified.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorshipInput.ReceiveEmails">
            <summary>
            Whether the sponsor should receive email updates from the sponsorable.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorshipInput.PrivacyLevel">
            <summary>
            Specify whether others should be able to see that the sponsor is sponsoring the sponsorable. Public visibility still does not reveal which tier is used.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorshipInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateSponsorshipPayload">
            <summary>
            Autogenerated return type of CreateSponsorship
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorshipPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorshipPayload.Sponsorship">
            <summary>
            The sponsorship that was started.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateSponsorshipsInput">
            <summary>
            Autogenerated input type of CreateSponsorships
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorshipsInput.SponsorLogin">
            <summary>
            The username of the user or organization who is acting as the sponsor, paying for the sponsorships.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorshipsInput.Sponsorships">
            <summary>
            The list of maintainers to sponsor and for how much apiece.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorshipsInput.ReceiveEmails">
            <summary>
            Whether the sponsor should receive email updates from the sponsorables.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorshipsInput.PrivacyLevel">
            <summary>
            Specify whether others should be able to see that the sponsor is sponsoring the sponsorables. Public visibility still does not reveal the dollar value of the sponsorship.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorshipsInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateSponsorshipsPayload">
            <summary>
            Autogenerated return type of CreateSponsorships
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorshipsPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorshipsPayload.Sponsorables">
            <summary>
            The users and organizations who received a sponsorship.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateSponsorsListingInput">
            <summary>
            Autogenerated input type of CreateSponsorsListing
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorsListingInput.SponsorableLogin">
            <summary>
            The username of the organization to create a GitHub Sponsors profile for, if desired. Defaults to creating a GitHub Sponsors profile for the authenticated user if omitted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorsListingInput.FiscalHostLogin">
            <summary>
            The username of the supported fiscal host's GitHub organization, if you want to receive sponsorship payouts through a fiscal host rather than directly to a bank account. For example, 'Open-Source-Collective' for Open Source Collective or 'numfocus' for numFOCUS. Case insensitive. See https://docs.github.com/sponsors/receiving-sponsorships-through-github-sponsors/using-a-fiscal-host-to-receive-github-sponsors-payouts for more information.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorsListingInput.FiscallyHostedProjectProfileUrl">
            <summary>
            The URL for your profile page on the fiscal host's website, e.g., https://opencollective.com/babel or https://numfocus.org/project/bokeh. Required if fiscalHostLogin is specified.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorsListingInput.BillingCountryOrRegionCode">
            <summary>
            The country or region where the sponsorable's bank account is located. Required if fiscalHostLogin is not specified, ignored when fiscalHostLogin is specified.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorsListingInput.ResidenceCountryOrRegionCode">
            <summary>
            The country or region where the sponsorable resides. This is for tax purposes. Required if the sponsorable is yourself, ignored when sponsorableLogin specifies an organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorsListingInput.ContactEmail">
            <summary>
            The email address we should use to contact you about the GitHub Sponsors profile being created. This will not be shared publicly. Must be a verified email address already on your GitHub account. Only relevant when the sponsorable is yourself. Defaults to your primary email address on file if omitted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorsListingInput.FullDescription">
            <summary>
            Provide an introduction to serve as the main focus that appears on your GitHub Sponsors profile. It's a great opportunity to help potential sponsors learn more about you, your work, and why their sponsorship is important to you. GitHub-flavored Markdown is supported.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorsListingInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateSponsorsListingPayload">
            <summary>
            Autogenerated return type of CreateSponsorsListing
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorsListingPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorsListingPayload.SponsorsListing">
            <summary>
            The new GitHub Sponsors profile.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateSponsorsTierInput">
            <summary>
            Autogenerated input type of CreateSponsorsTier
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorsTierInput.SponsorableId">
            <summary>
            The ID of the user or organization who owns the GitHub Sponsors profile. Defaults to the current user if omitted and sponsorableLogin is not given.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorsTierInput.SponsorableLogin">
            <summary>
            The username of the user or organization who owns the GitHub Sponsors profile. Defaults to the current user if omitted and sponsorableId is not given.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorsTierInput.Amount">
            <summary>
            The value of the new tier in US dollars. Valid values: 1-12000.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorsTierInput.IsRecurring">
            <summary>
            Whether sponsorships using this tier should happen monthly/yearly or just once.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorsTierInput.RepositoryId">
            <summary>
            Optional ID of the private repository that sponsors at this tier should gain read-only access to. Must be owned by an organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorsTierInput.RepositoryOwnerLogin">
            <summary>
            Optional login of the organization owner of the private repository that sponsors at this tier should gain read-only access to. Necessary if repositoryName is given. Will be ignored if repositoryId is given.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorsTierInput.RepositoryName">
            <summary>
            Optional name of the private repository that sponsors at this tier should gain read-only access to. Must be owned by an organization. Necessary if repositoryOwnerLogin is given. Will be ignored if repositoryId is given.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorsTierInput.WelcomeMessage">
            <summary>
            Optional message new sponsors at this tier will receive.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorsTierInput.Description">
            <summary>
            A description of what this tier is, what perks sponsors might receive, what a sponsorship at this tier means for you, etc.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorsTierInput.Publish">
            <summary>
            Whether to make the tier available immediately for sponsors to choose. Defaults to creating a draft tier that will not be publicly visible.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorsTierInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateSponsorsTierPayload">
            <summary>
            Autogenerated return type of CreateSponsorsTier
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorsTierPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateSponsorsTierPayload.SponsorsTier">
            <summary>
            The new tier.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateTeamDiscussionCommentInput">
            <summary>
            Autogenerated input type of CreateTeamDiscussionComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateTeamDiscussionCommentInput.DiscussionId">
            <summary>
            The ID of the discussion to which the comment belongs.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateTeamDiscussionCommentInput.Body">
            <summary>
            The content of the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateTeamDiscussionCommentInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateTeamDiscussionCommentPayload">
            <summary>
            Autogenerated return type of CreateTeamDiscussionComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateTeamDiscussionCommentPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateTeamDiscussionCommentPayload.TeamDiscussionComment">
            <summary>
            The new comment.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateTeamDiscussionInput">
            <summary>
            Autogenerated input type of CreateTeamDiscussion
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateTeamDiscussionInput.TeamId">
            <summary>
            The ID of the team to which the discussion belongs.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateTeamDiscussionInput.Title">
            <summary>
            The title of the discussion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateTeamDiscussionInput.Body">
            <summary>
            The content of the discussion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateTeamDiscussionInput.Private">
            <summary>
            If true, restricts the visibility of this discussion to team members and organization admins. If false or not specified, allows any organization member to view this discussion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateTeamDiscussionInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CreateTeamDiscussionPayload">
            <summary>
            Autogenerated return type of CreateTeamDiscussion
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateTeamDiscussionPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CreateTeamDiscussionPayload.TeamDiscussion">
            <summary>
            The new discussion.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CrossReferencedEvent">
            <summary>
            Represents a mention made by one issue or pull request to another.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CrossReferencedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CrossReferencedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CrossReferencedEvent.IsCrossRepository">
            <summary>
            Reference originated in a different repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CrossReferencedEvent.ReferencedAt">
            <summary>
            Identifies when the reference was made.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CrossReferencedEvent.ResourcePath">
            <summary>
            The HTTP path for this pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CrossReferencedEvent.Source">
            <summary>
            Issue or pull request that made the reference.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CrossReferencedEvent.Target">
            <summary>
            Issue or pull request to which the reference was made.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CrossReferencedEvent.Url">
            <summary>
            The HTTP URL for this pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CrossReferencedEvent.WillCloseTarget">
            <summary>
            Checks if the target will be closed when the source is merged.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CVSS">
            <summary>
            The Common Vulnerability Scoring System
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CVSS.Score">
            <summary>
            The CVSS score associated with this advisory
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CVSS.VectorString">
            <summary>
            The CVSS vector string associated with this advisory
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CWE">
            <summary>
            A common weakness enumeration
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CWE.CweId">
            <summary>
            The id of the CWE
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CWE.Description">
            <summary>
            A detailed description of this CWE
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CWE.Name">
            <summary>
            The name of this CWE
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CWEConnection">
            <summary>
            The connection type for CWE.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CWEConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CWEConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CWEConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CWEConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.CWEEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CWEEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.CWEEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeclineTopicSuggestionInput">
            <summary>
            Autogenerated input type of DeclineTopicSuggestion
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeclineTopicSuggestionInput.RepositoryId">
            <summary>
            The Node ID of the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeclineTopicSuggestionInput.Name">
            <summary>
            The name of the suggested topic.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeclineTopicSuggestionInput.Reason">
            <summary>
            The reason why the suggested topic is declined.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeclineTopicSuggestionInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeclineTopicSuggestionPayload">
            <summary>
            Autogenerated return type of DeclineTopicSuggestion
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeclineTopicSuggestionPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeclineTopicSuggestionPayload.Topic">
            <summary>
            The declined topic.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DefaultRepositoryPermissionField">
            <summary>
            The possible base permissions for repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DefaultRepositoryPermissionField.None">
            <summary>
            No access
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DefaultRepositoryPermissionField.Read">
            <summary>
            Can read repos by default
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DefaultRepositoryPermissionField.Write">
            <summary>
            Can read and write repos by default
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DefaultRepositoryPermissionField.Admin">
            <summary>
            Can read, write, and administrate repos by default
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IDeletable">
            <summary>
            Entities that can be deleted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IDeletable.ViewerCanDelete">
            <summary>
            Check if the current viewer can delete this object.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteBranchProtectionRuleInput">
            <summary>
            Autogenerated input type of DeleteBranchProtectionRule
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteBranchProtectionRuleInput.BranchProtectionRuleId">
            <summary>
            The global relay id of the branch protection rule to be deleted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteBranchProtectionRuleInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteBranchProtectionRulePayload">
            <summary>
            Autogenerated return type of DeleteBranchProtectionRule
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteBranchProtectionRulePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteDeploymentInput">
            <summary>
            Autogenerated input type of DeleteDeployment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteDeploymentInput.Id">
            <summary>
            The Node ID of the deployment to be deleted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteDeploymentInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteDeploymentPayload">
            <summary>
            Autogenerated return type of DeleteDeployment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteDeploymentPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteDiscussionCommentInput">
            <summary>
            Autogenerated input type of DeleteDiscussionComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteDiscussionCommentInput.Id">
            <summary>
            The Node id of the discussion comment to delete.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteDiscussionCommentInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteDiscussionCommentPayload">
            <summary>
            Autogenerated return type of DeleteDiscussionComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteDiscussionCommentPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteDiscussionCommentPayload.Comment">
            <summary>
            The discussion comment that was just deleted.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteDiscussionInput">
            <summary>
            Autogenerated input type of DeleteDiscussion
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteDiscussionInput.Id">
            <summary>
            The id of the discussion to delete.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteDiscussionInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteDiscussionPayload">
            <summary>
            Autogenerated return type of DeleteDiscussion
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteDiscussionPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteDiscussionPayload.Discussion">
            <summary>
            The discussion that was just deleted.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteEnvironmentInput">
            <summary>
            Autogenerated input type of DeleteEnvironment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteEnvironmentInput.Id">
            <summary>
            The Node ID of the environment to be deleted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteEnvironmentInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteEnvironmentPayload">
            <summary>
            Autogenerated return type of DeleteEnvironment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteEnvironmentPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteIpAllowListEntryInput">
            <summary>
            Autogenerated input type of DeleteIpAllowListEntry
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteIpAllowListEntryInput.IpAllowListEntryId">
            <summary>
            The ID of the IP allow list entry to delete.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteIpAllowListEntryInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteIpAllowListEntryPayload">
            <summary>
            Autogenerated return type of DeleteIpAllowListEntry
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteIpAllowListEntryPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteIpAllowListEntryPayload.IpAllowListEntry">
            <summary>
            The IP allow list entry that was deleted.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteIssueCommentInput">
            <summary>
            Autogenerated input type of DeleteIssueComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteIssueCommentInput.Id">
            <summary>
            The ID of the comment to delete.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteIssueCommentInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteIssueCommentPayload">
            <summary>
            Autogenerated return type of DeleteIssueComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteIssueCommentPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteIssueInput">
            <summary>
            Autogenerated input type of DeleteIssue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteIssueInput.IssueId">
            <summary>
            The ID of the issue to delete.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteIssueInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteIssuePayload">
            <summary>
            Autogenerated return type of DeleteIssue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteIssuePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteIssuePayload.Repository">
            <summary>
            The repository the issue belonged to
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteLinkedBranchInput">
            <summary>
            Autogenerated input type of DeleteLinkedBranch
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteLinkedBranchInput.LinkedBranchId">
            <summary>
            The ID of the linked branch
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteLinkedBranchInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteLinkedBranchPayload">
            <summary>
            Autogenerated return type of DeleteLinkedBranch
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteLinkedBranchPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteLinkedBranchPayload.Issue">
            <summary>
            The issue the linked branch was unlinked from.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteProjectCardInput">
            <summary>
            Autogenerated input type of DeleteProjectCard
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectCardInput.CardId">
            <summary>
            The id of the card to delete.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectCardInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteProjectCardPayload">
            <summary>
            Autogenerated return type of DeleteProjectCard
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectCardPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectCardPayload.Column">
            <summary>
            The column the deleted card was in.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectCardPayload.DeletedCardId">
            <summary>
            The deleted card ID.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteProjectColumnInput">
            <summary>
            Autogenerated input type of DeleteProjectColumn
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectColumnInput.ColumnId">
            <summary>
            The id of the column to delete.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectColumnInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteProjectColumnPayload">
            <summary>
            Autogenerated return type of DeleteProjectColumn
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectColumnPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectColumnPayload.DeletedColumnId">
            <summary>
            The deleted column ID.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectColumnPayload.Project">
            <summary>
            The project the deleted column was in.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteProjectInput">
            <summary>
            Autogenerated input type of DeleteProject
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectInput.ProjectId">
            <summary>
            The Project ID to update.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteProjectPayload">
            <summary>
            Autogenerated return type of DeleteProject
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectPayload.Owner">
            <summary>
            The repository or organization the project was removed from.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteProjectV2FieldInput">
            <summary>
            Autogenerated input type of DeleteProjectV2Field
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectV2FieldInput.FieldId">
            <summary>
            The ID of the field to delete.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectV2FieldInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteProjectV2FieldPayload">
            <summary>
            Autogenerated return type of DeleteProjectV2Field
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectV2FieldPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectV2FieldPayload.ProjectV2Field">
            <summary>
            The deleted field.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteProjectV2Input">
            <summary>
            Autogenerated input type of DeleteProjectV2
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectV2Input.ProjectId">
            <summary>
            The ID of the Project to delete.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectV2Input.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteProjectV2ItemInput">
            <summary>
            Autogenerated input type of DeleteProjectV2Item
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectV2ItemInput.ProjectId">
            <summary>
            The ID of the Project from which the item should be removed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectV2ItemInput.ItemId">
            <summary>
            The ID of the item to be removed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectV2ItemInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteProjectV2ItemPayload">
            <summary>
            Autogenerated return type of DeleteProjectV2Item
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectV2ItemPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectV2ItemPayload.DeletedItemId">
            <summary>
            The ID of the deleted item.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteProjectV2Payload">
            <summary>
            Autogenerated return type of DeleteProjectV2
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectV2Payload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectV2Payload.ProjectV2">
            <summary>
            The deleted Project.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteProjectV2WorkflowInput">
            <summary>
            Autogenerated input type of DeleteProjectV2Workflow
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectV2WorkflowInput.WorkflowId">
            <summary>
            The ID of the workflow to be removed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectV2WorkflowInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteProjectV2WorkflowPayload">
            <summary>
            Autogenerated return type of DeleteProjectV2Workflow
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectV2WorkflowPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectV2WorkflowPayload.DeletedWorkflowId">
            <summary>
            The ID of the deleted workflow.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteProjectV2WorkflowPayload.ProjectV2">
            <summary>
            The project the deleted workflow was in.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeletePullRequestReviewCommentInput">
            <summary>
            Autogenerated input type of DeletePullRequestReviewComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeletePullRequestReviewCommentInput.Id">
            <summary>
            The ID of the comment to delete.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeletePullRequestReviewCommentInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeletePullRequestReviewCommentPayload">
            <summary>
            Autogenerated return type of DeletePullRequestReviewComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeletePullRequestReviewCommentPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeletePullRequestReviewCommentPayload.PullRequestReview">
            <summary>
            The pull request review the deleted comment belonged to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeletePullRequestReviewCommentPayload.PullRequestReviewComment">
            <summary>
            The deleted pull request review comment.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeletePullRequestReviewInput">
            <summary>
            Autogenerated input type of DeletePullRequestReview
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeletePullRequestReviewInput.PullRequestReviewId">
            <summary>
            The Node ID of the pull request review to delete.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeletePullRequestReviewInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeletePullRequestReviewPayload">
            <summary>
            Autogenerated return type of DeletePullRequestReview
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeletePullRequestReviewPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeletePullRequestReviewPayload.PullRequestReview">
            <summary>
            The deleted pull request review.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteRefInput">
            <summary>
            Autogenerated input type of DeleteRef
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteRefInput.RefId">
            <summary>
            The Node ID of the Ref to be deleted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteRefInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteRefPayload">
            <summary>
            Autogenerated return type of DeleteRef
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteRefPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteRepositoryRulesetInput">
            <summary>
            Autogenerated input type of DeleteRepositoryRuleset
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteRepositoryRulesetInput.RepositoryRulesetId">
            <summary>
            The global relay id of the repository ruleset to be deleted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteRepositoryRulesetInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteRepositoryRulesetPayload">
            <summary>
            Autogenerated return type of DeleteRepositoryRuleset
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteRepositoryRulesetPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteTeamDiscussionCommentInput">
            <summary>
            Autogenerated input type of DeleteTeamDiscussionComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteTeamDiscussionCommentInput.Id">
            <summary>
            The ID of the comment to delete.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteTeamDiscussionCommentInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteTeamDiscussionCommentPayload">
            <summary>
            Autogenerated return type of DeleteTeamDiscussionComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteTeamDiscussionCommentPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteTeamDiscussionInput">
            <summary>
            Autogenerated input type of DeleteTeamDiscussion
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteTeamDiscussionInput.Id">
            <summary>
            The discussion ID to delete.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteTeamDiscussionInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteTeamDiscussionPayload">
            <summary>
            Autogenerated return type of DeleteTeamDiscussion
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteTeamDiscussionPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteVerifiableDomainInput">
            <summary>
            Autogenerated input type of DeleteVerifiableDomain
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteVerifiableDomainInput.Id">
            <summary>
            The ID of the verifiable domain to delete.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteVerifiableDomainInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeleteVerifiableDomainPayload">
            <summary>
            Autogenerated return type of DeleteVerifiableDomain
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteVerifiableDomainPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeleteVerifiableDomainPayload.Owner">
            <summary>
            The owning account from which the domain was deleted.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DemilestonedEvent">
            <summary>
            Represents a 'demilestoned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DemilestonedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DemilestonedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DemilestonedEvent.MilestoneTitle">
            <summary>
            Identifies the milestone title associated with the 'demilestoned' event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DemilestonedEvent.Subject">
            <summary>
            Object referenced by event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DependabotUpdate">
            <summary>
            A Dependabot Update for a dependency in a repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DependabotUpdate.Error">
            <summary>
            The error from a dependency update
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DependabotUpdate.PullRequest">
            <summary>
            The associated pull request
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DependabotUpdate.Repository">
            <summary>
            The repository associated with this node.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DependabotUpdateError">
            <summary>
            An error produced from a Dependabot Update
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DependabotUpdateError.Body">
            <summary>
            The body of the error
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DependabotUpdateError.ErrorType">
            <summary>
            The error code
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DependabotUpdateError.Title">
            <summary>
            The title of the error
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DependencyGraphEcosystem">
            <summary>
            The possible ecosystems of a dependency graph package.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DependencyGraphEcosystem.Rubygems">
            <summary>
            Ruby gems hosted at RubyGems.org
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DependencyGraphEcosystem.Npm">
            <summary>
            JavaScript packages hosted at npmjs.com
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DependencyGraphEcosystem.Pip">
            <summary>
            Python packages hosted at PyPI.org
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DependencyGraphEcosystem.Maven">
            <summary>
            Java artifacts hosted at the Maven central repository
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DependencyGraphEcosystem.Nuget">
            <summary>
            .NET packages hosted at the NuGet Gallery
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DependencyGraphEcosystem.Composer">
            <summary>
            PHP packages hosted at packagist.org
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DependencyGraphEcosystem.Go">
            <summary>
            Go modules
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DependencyGraphEcosystem.Actions">
            <summary>
            GitHub Actions
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DependencyGraphEcosystem.Rust">
            <summary>
            Rust crates
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DependencyGraphEcosystem.Pub">
            <summary>
            Dart packages hosted at pub.dev
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeployedEvent">
            <summary>
            Represents a 'deployed' event on a given pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeployedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeployedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeployedEvent.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeployedEvent.Deployment">
            <summary>
            The deployment associated with the 'deployed' event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeployedEvent.PullRequest">
            <summary>
            PullRequest referenced by event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeployedEvent.Ref">
            <summary>
            The ref associated with the 'deployed' event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeployKey">
            <summary>
            A repository deploy key.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeployKey.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeployKey.Key">
            <summary>
            The deploy key.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeployKey.ReadOnly">
            <summary>
            Whether or not the deploy key is read only.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeployKey.Title">
            <summary>
            The deploy key title.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeployKey.Verified">
            <summary>
            Whether or not the deploy key has been verified.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeployKeyConnection">
            <summary>
            The connection type for DeployKey.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeployKeyConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeployKeyConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeployKeyConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeployKeyConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeployKeyEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeployKeyEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeployKeyEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Deployment">
            <summary>
            Represents triggered deployment instance.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Deployment.Commit">
            <summary>
            Identifies the commit sha of the deployment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Deployment.CommitOid">
            <summary>
            Identifies the oid of the deployment commit, even if the commit has been deleted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Deployment.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Deployment.Creator">
            <summary>
            Identifies the actor who triggered the deployment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Deployment.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Deployment.Description">
            <summary>
            The deployment description.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Deployment.Environment">
            <summary>
            The latest environment to which this deployment was made.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Deployment.LatestEnvironment">
            <summary>
            The latest environment to which this deployment was made.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Deployment.LatestStatus">
            <summary>
            The latest status of this deployment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Deployment.OriginalEnvironment">
            <summary>
            The original environment to which this deployment was made.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Deployment.Payload">
            <summary>
            Extra information that a deployment system might need.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Deployment.Ref">
            <summary>
            Identifies the Ref of the deployment, if the deployment was created by ref.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Deployment.Repository">
            <summary>
            Identifies the repository associated with the deployment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Deployment.State">
            <summary>
            The current state of the deployment.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Deployment.Statuses(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of statuses associated with the deployment.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Deployment.Task">
            <summary>
            The deployment task.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Deployment.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentConnection">
            <summary>
            The connection type for Deployment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentEnvironmentChangedEvent">
            <summary>
            Represents a 'deployment_environment_changed' event on a given pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentEnvironmentChangedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentEnvironmentChangedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentEnvironmentChangedEvent.DeploymentStatus">
            <summary>
            The deployment status that updated the deployment environment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentEnvironmentChangedEvent.PullRequest">
            <summary>
            PullRequest referenced by event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentOrder">
            <summary>
            Ordering options for deployment connections
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentOrder.Field">
            <summary>
            The field to order deployments by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentOrderField">
            <summary>
            Properties by which deployment connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentOrderField.CreatedAt">
            <summary>
            Order collection by creation time
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentProtectionRule">
            <summary>
            A protection rule.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentProtectionRule.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.DeploymentProtectionRule.Reviewers(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The teams or users that can review the deployment
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentProtectionRule.Timeout">
            <summary>
            The timeout in minutes for this protection rule.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentProtectionRule.Type">
            <summary>
            The type of protection rule.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentProtectionRuleConnection">
            <summary>
            The connection type for DeploymentProtectionRule.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentProtectionRuleConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentProtectionRuleConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentProtectionRuleConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentProtectionRuleConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentProtectionRuleEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentProtectionRuleEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentProtectionRuleEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentProtectionRuleType">
            <summary>
            The possible protection rule types.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentProtectionRuleType.RequiredReviewers">
            <summary>
            Required reviewers
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentProtectionRuleType.WaitTimer">
            <summary>
            Wait timer
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentRequest">
            <summary>
            A request to deploy a workflow run to an environment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentRequest.CurrentUserCanApprove">
            <summary>
            Whether or not the current user can approve the deployment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentRequest.Environment">
            <summary>
            The target environment of the deployment
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.DeploymentRequest.Reviewers(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The teams or users that can review the deployment
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentRequest.WaitTimer">
            <summary>
            The wait timer in minutes configured in the environment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentRequest.WaitTimerStartedAt">
            <summary>
            The wait timer in minutes configured in the environment
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentRequestConnection">
            <summary>
            The connection type for DeploymentRequest.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentRequestConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentRequestConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentRequestConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentRequestConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentRequestEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentRequestEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentRequestEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentReview">
            <summary>
            A deployment review.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentReview.Comment">
            <summary>
            The comment the user left.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentReview.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.DeploymentReview.Environments(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The environments approved or rejected
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentReview.State">
            <summary>
            The decision of the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentReview.User">
            <summary>
            The user that reviewed the deployment.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentReviewConnection">
            <summary>
            The connection type for DeploymentReview.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentReviewConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentReviewConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentReviewConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentReviewConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentReviewEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentReviewEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentReviewEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentReviewer">
            <summary>
            Users and teams.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.DeploymentReviewer.Selector`1.Team(System.Func{Octokit.GraphQL.Model.Team,`0})">
            <summary>
            A team of users in an organization.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.DeploymentReviewer.Selector`1.User(System.Func{Octokit.GraphQL.Model.User,`0})">
            <summary>
            A user is an individual's account on GitHub that owns repositories and can make new content.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentReviewerConnection">
            <summary>
            The connection type for DeploymentReviewer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentReviewerConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentReviewerConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentReviewerConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentReviewerConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentReviewerEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentReviewerEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentReviewerEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentReviewState">
            <summary>
            The possible states for a deployment review.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentReviewState.Approved">
            <summary>
            The deployment was approved.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentReviewState.Rejected">
            <summary>
            The deployment was rejected.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentState">
            <summary>
            The possible states in which a deployment can be.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentState.Abandoned">
            <summary>
            The pending deployment was not updated after 30 minutes.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentState.Active">
            <summary>
            The deployment is currently active.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentState.Destroyed">
            <summary>
            An inactive transient deployment.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentState.Error">
            <summary>
            The deployment experienced an error.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentState.Failure">
            <summary>
            The deployment has failed.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentState.Inactive">
            <summary>
            The deployment is inactive.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentState.Pending">
            <summary>
            The deployment is pending.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentState.Success">
            <summary>
            The deployment was successful.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentState.Queued">
            <summary>
            The deployment has queued
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentState.InProgress">
            <summary>
            The deployment is in progress.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentState.Waiting">
            <summary>
            The deployment is waiting.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentStatus">
            <summary>
            Describes the status of a given deployment attempt.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentStatus.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentStatus.Creator">
            <summary>
            Identifies the actor who triggered the deployment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentStatus.Deployment">
            <summary>
            Identifies the deployment associated with status.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentStatus.Description">
            <summary>
            Identifies the description of the deployment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentStatus.EnvironmentUrl">
            <summary>
            Identifies the environment URL of the deployment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentStatus.LogUrl">
            <summary>
            Identifies the log URL of the deployment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentStatus.State">
            <summary>
            Identifies the current state of the deployment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentStatus.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentStatusConnection">
            <summary>
            The connection type for DeploymentStatus.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentStatusConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentStatusConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentStatusConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentStatusConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentStatusEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentStatusEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DeploymentStatusEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DeploymentStatusState">
            <summary>
            The possible states for a deployment status.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentStatusState.Pending">
            <summary>
            The deployment is pending.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentStatusState.Success">
            <summary>
            The deployment was successful.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentStatusState.Failure">
            <summary>
            The deployment has failed.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentStatusState.Inactive">
            <summary>
            The deployment is inactive.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentStatusState.Error">
            <summary>
            The deployment experienced an error.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentStatusState.Queued">
            <summary>
            The deployment is queued
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentStatusState.InProgress">
            <summary>
            The deployment is in progress.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DeploymentStatusState.Waiting">
            <summary>
            The deployment is waiting.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DequeuePullRequestInput">
            <summary>
            Autogenerated input type of DequeuePullRequest
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DequeuePullRequestInput.Id">
            <summary>
            The ID of the pull request to be dequeued.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DequeuePullRequestInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DequeuePullRequestPayload">
            <summary>
            Autogenerated return type of DequeuePullRequest
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DequeuePullRequestPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DequeuePullRequestPayload.MergeQueueEntry">
            <summary>
            The merge queue entry of the dequeued pull request.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DiffSide">
            <summary>
            The possible sides of a diff.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DiffSide.Left">
            <summary>
            The left side of the diff.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DiffSide.Right">
            <summary>
            The right side of the diff.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DisablePullRequestAutoMergeInput">
            <summary>
            Autogenerated input type of DisablePullRequestAutoMerge
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DisablePullRequestAutoMergeInput.PullRequestId">
            <summary>
            ID of the pull request to disable auto merge on.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DisablePullRequestAutoMergeInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DisablePullRequestAutoMergePayload">
            <summary>
            Autogenerated return type of DisablePullRequestAutoMerge
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DisablePullRequestAutoMergePayload.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DisablePullRequestAutoMergePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DisablePullRequestAutoMergePayload.PullRequest">
            <summary>
            The pull request auto merge was disabled on.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DisconnectedEvent">
            <summary>
            Represents a 'disconnected' event on a given issue or pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DisconnectedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DisconnectedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DisconnectedEvent.IsCrossRepository">
            <summary>
            Reference originated in a different repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DisconnectedEvent.Source">
            <summary>
            Issue or pull request from which the issue was disconnected.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DisconnectedEvent.Subject">
            <summary>
            Issue or pull request which was disconnected.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Discussion">
            <summary>
            A discussion in a repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.ActiveLockReason">
            <summary>
            Reason that the conversation was locked.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.Answer">
            <summary>
            The comment chosen as this discussion's answer, if any.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.AnswerChosenAt">
            <summary>
            The time when a user chose this discussion's answer, if answered.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.AnswerChosenBy">
            <summary>
            The user who chose this discussion's answer, if answered.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.Author">
            <summary>
            The actor who authored the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.AuthorAssociation">
            <summary>
            Author's association with the subject of the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.Body">
            <summary>
            The main text of the discussion post.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.BodyHTML">
            <summary>
            The body rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.BodyText">
            <summary>
            The body rendered to text.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.Category">
            <summary>
            The category for this discussion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.Closed">
            <summary>
            Indicates if the object is closed (definition of closed may depend on type)
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.ClosedAt">
            <summary>
            Identifies the date and time when the object was closed.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Discussion.Comments(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The replies to the discussion.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.CreatedViaEmail">
            <summary>
            Check if this comment was created via an email reply.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.Editor">
            <summary>
            The actor who edited the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.IncludesCreatedEdit">
            <summary>
            Check if this comment was edited and includes an edit with the creation data
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Discussion.Labels(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.LabelOrder}})">
            <summary>
            A list of labels associated with the object.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for labels returned from the connection.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.LastEditedAt">
            <summary>
            The moment the editor made the last edit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.Locked">
            <summary>
            `true` if the object is locked
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.Number">
            <summary>
            The number identifying this discussion within the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.Poll">
            <summary>
            The poll associated with this discussion, if one exists.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.PublishedAt">
            <summary>
            Identifies when the comment was published at.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.ReactionGroups">
            <summary>
            A list of reactions grouped by content left on the subject.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Discussion.Reactions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionContent}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionOrder}})">
            <summary>
            A list of Reactions left on the Issue.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="content">Allows filtering Reactions by emoji.</param>
            <param name="orderBy">Allows specifying the order in which reactions are returned.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.Repository">
            <summary>
            The repository associated with this node.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.ResourcePath">
            <summary>
            The path for this discussion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.StateReason">
            <summary>
            Identifies the reason for the discussion's state.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.Title">
            <summary>
            The title of this discussion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.UpvoteCount">
            <summary>
            Number of upvotes that this subject has received.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.Url">
            <summary>
            The URL for this discussion.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Discussion.UserContentEdits(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of edits to this content.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.ViewerCanClose">
            <summary>
            Indicates if the object can be closed by the viewer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.ViewerCanDelete">
            <summary>
            Check if the current viewer can delete this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.ViewerCanReact">
            <summary>
            Can user react to this subject
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.ViewerCanReopen">
            <summary>
            Indicates if the object can be reopened by the viewer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.ViewerCanSubscribe">
            <summary>
            Check if the viewer is able to change their subscription status for the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.ViewerCanUpdate">
            <summary>
            Check if the current viewer can update this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.ViewerCanUpvote">
            <summary>
            Whether or not the current user can add or remove an upvote on this subject.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.ViewerDidAuthor">
            <summary>
            Did the viewer author this comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.ViewerHasUpvoted">
            <summary>
            Whether or not the current user has already upvoted this subject.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Discussion.ViewerSubscription">
            <summary>
            Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DiscussionCategory">
            <summary>
            A category for discussions in a repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionCategory.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionCategory.Description">
            <summary>
            A description of this category.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionCategory.Emoji">
            <summary>
            An emoji representing this category.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionCategory.EmojiHTML">
            <summary>
            This category's emoji rendered as HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionCategory.IsAnswerable">
            <summary>
            Whether or not discussions in this category support choosing an answer with the markDiscussionCommentAsAnswer mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionCategory.Name">
            <summary>
            The name of this category.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionCategory.Repository">
            <summary>
            The repository associated with this node.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionCategory.Slug">
            <summary>
            The slug of this category.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionCategory.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DiscussionCategoryConnection">
            <summary>
            The connection type for DiscussionCategory.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionCategoryConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionCategoryConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionCategoryConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionCategoryConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DiscussionCategoryEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionCategoryEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionCategoryEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DiscussionCloseReason">
            <summary>
            The possible reasons for closing a discussion.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DiscussionCloseReason.Resolved">
            <summary>
            The discussion has been resolved
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DiscussionCloseReason.Outdated">
            <summary>
            The discussion is no longer relevant
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DiscussionCloseReason.Duplicate">
            <summary>
            The discussion is a duplicate of another
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DiscussionComment">
            <summary>
            A comment on a discussion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.Author">
            <summary>
            The actor who authored the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.AuthorAssociation">
            <summary>
            Author's association with the subject of the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.Body">
            <summary>
            The body as Markdown.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.BodyHTML">
            <summary>
            The body rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.BodyText">
            <summary>
            The body rendered to text.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.CreatedViaEmail">
            <summary>
            Check if this comment was created via an email reply.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.DeletedAt">
            <summary>
            The time when this replied-to comment was deleted
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.Discussion">
            <summary>
            The discussion this comment was created in
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.Editor">
            <summary>
            The actor who edited the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.IncludesCreatedEdit">
            <summary>
            Check if this comment was edited and includes an edit with the creation data
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.IsAnswer">
            <summary>
            Has this comment been chosen as the answer of its discussion?
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.IsMinimized">
            <summary>
            Returns whether or not a comment has been minimized.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.LastEditedAt">
            <summary>
            The moment the editor made the last edit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.MinimizedReason">
            <summary>
            Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.PublishedAt">
            <summary>
            Identifies when the comment was published at.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.ReactionGroups">
            <summary>
            A list of reactions grouped by content left on the subject.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.DiscussionComment.Reactions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionContent}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionOrder}})">
            <summary>
            A list of Reactions left on the Issue.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="content">Allows filtering Reactions by emoji.</param>
            <param name="orderBy">Allows specifying the order in which reactions are returned.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.DiscussionComment.Replies(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The threaded replies to this comment.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.ReplyTo">
            <summary>
            The discussion comment this comment is a reply to
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.ResourcePath">
            <summary>
            The path for this discussion comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.UpvoteCount">
            <summary>
            Number of upvotes that this subject has received.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.Url">
            <summary>
            The URL for this discussion comment.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.DiscussionComment.UserContentEdits(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of edits to this content.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.ViewerCanDelete">
            <summary>
            Check if the current viewer can delete this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.ViewerCanMarkAsAnswer">
            <summary>
            Can the current user mark this comment as an answer?
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.ViewerCanMinimize">
            <summary>
            Check if the current viewer can minimize this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.ViewerCanReact">
            <summary>
            Can user react to this subject
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.ViewerCanUnmarkAsAnswer">
            <summary>
            Can the current user unmark this comment as an answer?
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.ViewerCanUpdate">
            <summary>
            Check if the current viewer can update this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.ViewerCanUpvote">
            <summary>
            Whether or not the current user can add or remove an upvote on this subject.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.ViewerCannotUpdateReasons">
            <summary>
            Reasons why the current viewer can not update this comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.ViewerDidAuthor">
            <summary>
            Did the viewer author this comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionComment.ViewerHasUpvoted">
            <summary>
            Whether or not the current user has already upvoted this subject.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DiscussionCommentConnection">
            <summary>
            The connection type for DiscussionComment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionCommentConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionCommentConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionCommentConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionCommentConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DiscussionCommentEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionCommentEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionCommentEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DiscussionConnection">
            <summary>
            The connection type for Discussion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DiscussionEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DiscussionOrder">
            <summary>
            Ways in which lists of discussions can be ordered upon return.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionOrder.Field">
            <summary>
            The field by which to order discussions.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionOrder.Direction">
            <summary>
            The direction in which to order discussions by the specified field.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DiscussionOrderField">
            <summary>
            Properties by which discussion connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DiscussionOrderField.CreatedAt">
            <summary>
            Order discussions by creation time.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DiscussionOrderField.UpdatedAt">
            <summary>
            Order discussions by most recent modification time.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DiscussionPoll">
            <summary>
            A poll for a discussion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionPoll.Discussion">
            <summary>
            The discussion that this poll belongs to.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.DiscussionPoll.Options(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DiscussionPollOptionOrder}})">
            <summary>
            The options for this poll.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">How to order the options for the discussion poll.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionPoll.Question">
            <summary>
            The question that is being asked by this poll.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionPoll.TotalVoteCount">
            <summary>
            The total number of votes that have been cast for this poll.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionPoll.ViewerCanVote">
            <summary>
            Indicates if the viewer has permission to vote in this poll.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionPoll.ViewerHasVoted">
            <summary>
            Indicates if the viewer has voted for any option in this poll.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DiscussionPollOption">
            <summary>
            An option for a discussion poll.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionPollOption.Option">
            <summary>
            The text for this option.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionPollOption.Poll">
            <summary>
            The discussion poll that this option belongs to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionPollOption.TotalVoteCount">
            <summary>
            The total number of votes that have been cast for this option.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionPollOption.ViewerHasVoted">
            <summary>
            Indicates if the viewer has voted for this option in the poll.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DiscussionPollOptionConnection">
            <summary>
            The connection type for DiscussionPollOption.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionPollOptionConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionPollOptionConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionPollOptionConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionPollOptionConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DiscussionPollOptionEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionPollOptionEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionPollOptionEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DiscussionPollOptionOrder">
            <summary>
            Ordering options for discussion poll option connections.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionPollOptionOrder.Field">
            <summary>
            The field to order poll options by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DiscussionPollOptionOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DiscussionPollOptionOrderField">
            <summary>
            Properties by which discussion poll option connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DiscussionPollOptionOrderField.AuthoredOrder">
            <summary>
            Order poll options by the order that the poll author specified when creating the poll.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DiscussionPollOptionOrderField.VoteCount">
            <summary>
            Order poll options by the number of votes it has.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DiscussionState">
            <summary>
            The possible states of a discussion.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DiscussionState.Open">
            <summary>
            A discussion that is open
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DiscussionState.Closed">
            <summary>
            A discussion that has been closed
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DiscussionStateReason">
            <summary>
            The possible state reasons of a discussion.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DiscussionStateReason.Resolved">
            <summary>
            The discussion has been resolved
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DiscussionStateReason.Outdated">
            <summary>
            The discussion is no longer relevant
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DiscussionStateReason.Duplicate">
            <summary>
            The discussion is a duplicate of another
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DiscussionStateReason.Reopened">
            <summary>
            The discussion was reopened
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DismissPullRequestReviewInput">
            <summary>
            Autogenerated input type of DismissPullRequestReview
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DismissPullRequestReviewInput.PullRequestReviewId">
            <summary>
            The Node ID of the pull request review to modify.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DismissPullRequestReviewInput.Message">
            <summary>
            The contents of the pull request review dismissal message.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DismissPullRequestReviewInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DismissPullRequestReviewPayload">
            <summary>
            Autogenerated return type of DismissPullRequestReview
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DismissPullRequestReviewPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DismissPullRequestReviewPayload.PullRequestReview">
            <summary>
            The dismissed pull request review.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DismissReason">
            <summary>
            The possible reasons that a Dependabot alert was dismissed.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DismissReason.FixStarted">
            <summary>
            A fix has already been started
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DismissReason.NoBandwidth">
            <summary>
            No bandwidth to fix this
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DismissReason.TolerableRisk">
            <summary>
            Risk is tolerable to this project
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DismissReason.Inaccurate">
            <summary>
            This alert is inaccurate or incorrect
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.DismissReason.NotUsed">
            <summary>
            Vulnerable code is not actually used
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DismissRepositoryVulnerabilityAlertInput">
            <summary>
            Autogenerated input type of DismissRepositoryVulnerabilityAlert
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DismissRepositoryVulnerabilityAlertInput.RepositoryVulnerabilityAlertId">
            <summary>
            The Dependabot alert ID to dismiss.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DismissRepositoryVulnerabilityAlertInput.DismissReason">
            <summary>
            The reason the Dependabot alert is being dismissed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DismissRepositoryVulnerabilityAlertInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DismissRepositoryVulnerabilityAlertPayload">
            <summary>
            Autogenerated return type of DismissRepositoryVulnerabilityAlert
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DismissRepositoryVulnerabilityAlertPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DismissRepositoryVulnerabilityAlertPayload.RepositoryVulnerabilityAlert">
            <summary>
            The Dependabot alert that was dismissed
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DraftIssue">
            <summary>
            A draft issue within a project.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.DraftIssue.Assignees(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of users to assigned to this draft issue.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.DraftIssue.Body">
            <summary>
            The body of the draft issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DraftIssue.BodyHTML">
            <summary>
            The body of the draft issue rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DraftIssue.BodyText">
            <summary>
            The body of the draft issue rendered to text.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DraftIssue.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DraftIssue.Creator">
            <summary>
            The actor who created this draft issue.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.DraftIssue.ProjectV2Items(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            List of items linked with the draft issue (currently draft issue can be linked to only one item).
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.DraftIssue.ProjectsV2(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            Projects that link to this draft issue (currently draft issue can be linked to only one project).
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.DraftIssue.Title">
            <summary>
            The title of the draft issue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DraftIssue.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DraftPullRequestReviewComment">
            <summary>
            Specifies a review comment to be left with a Pull Request Review.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DraftPullRequestReviewComment.Path">
            <summary>
            Path to the file being commented on.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DraftPullRequestReviewComment.Position">
            <summary>
            Position in the file to leave a comment on.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DraftPullRequestReviewComment.Body">
            <summary>
            Body of the comment to leave.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.DraftPullRequestReviewThread">
            <summary>
            Specifies a review comment thread to be left with a Pull Request Review.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DraftPullRequestReviewThread.Path">
            <summary>
            Path to the file being commented on.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DraftPullRequestReviewThread.Line">
            <summary>
            The line of the blob to which the thread refers. The end of the line range for multi-line comments.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DraftPullRequestReviewThread.Side">
            <summary>
            The side of the diff on which the line resides. For multi-line comments, this is the side for the end of the line range.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DraftPullRequestReviewThread.StartLine">
            <summary>
            The first line of the range to which the comment refers.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DraftPullRequestReviewThread.StartSide">
            <summary>
            The side of the diff on which the start line resides.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.DraftPullRequestReviewThread.Body">
            <summary>
            Body of the comment to leave.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnablePullRequestAutoMergeInput">
            <summary>
            Autogenerated input type of EnablePullRequestAutoMerge
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnablePullRequestAutoMergeInput.PullRequestId">
            <summary>
            ID of the pull request to enable auto-merge on.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnablePullRequestAutoMergeInput.CommitHeadline">
            <summary>
            Commit headline to use for the commit when the PR is mergable; if omitted, a default message will be used. NOTE: when merging with a merge queue any input value for commit headline is ignored.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnablePullRequestAutoMergeInput.CommitBody">
            <summary>
            Commit body to use for the commit when the PR is mergable; if omitted, a default message will be used. NOTE: when merging with a merge queue any input value for commit message is ignored.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnablePullRequestAutoMergeInput.MergeMethod">
            <summary>
            The merge method to use. If omitted, defaults to `MERGE`. NOTE: when merging with a merge queue any input value for merge method is ignored.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnablePullRequestAutoMergeInput.AuthorEmail">
            <summary>
            The email address to associate with this merge.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnablePullRequestAutoMergeInput.ExpectedHeadOid">
            <summary>
            The expected head OID of the pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnablePullRequestAutoMergeInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnablePullRequestAutoMergePayload">
            <summary>
            Autogenerated return type of EnablePullRequestAutoMerge
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnablePullRequestAutoMergePayload.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnablePullRequestAutoMergePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnablePullRequestAutoMergePayload.PullRequest">
            <summary>
            The pull request auto-merge was enabled on.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnqueuePullRequestInput">
            <summary>
            Autogenerated input type of EnqueuePullRequest
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnqueuePullRequestInput.PullRequestId">
            <summary>
            The ID of the pull request to enqueue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnqueuePullRequestInput.Jump">
            <summary>
            Add the pull request to the front of the queue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnqueuePullRequestInput.ExpectedHeadOid">
            <summary>
            The expected head OID of the pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnqueuePullRequestInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnqueuePullRequestPayload">
            <summary>
            Autogenerated return type of EnqueuePullRequest
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnqueuePullRequestPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnqueuePullRequestPayload.MergeQueueEntry">
            <summary>
            The merge queue entry for the enqueued pull request.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Enterprise">
            <summary>
            An account to manage multiple organizations with consolidated policy and billing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Enterprise.Announcement">
            <summary>
            The text of the announcement
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Enterprise.AnnouncementExpiresAt">
            <summary>
            The expiration date of the announcement, if any
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Enterprise.AnnouncementUserDismissible">
            <summary>
            Whether the announcement can be dismissed by the user
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Enterprise.AvatarUrl(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            A URL pointing to the enterprise's public avatar.
            </summary>
            <param name="size">The size of the resulting square image.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Enterprise.BillingInfo">
            <summary>
            Enterprise billing information visible to enterprise billing managers.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Enterprise.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Enterprise.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Enterprise.Description">
            <summary>
            The description of the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Enterprise.DescriptionHTML">
            <summary>
            The description of the enterprise as HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Enterprise.Location">
            <summary>
            The location of the enterprise.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Enterprise.Members(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.EnterpriseUserDeployment}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.EnterpriseMemberOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.EnterpriseUserAccountMembershipRole}})">
            <summary>
            A list of users who are members of this enterprise.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="deployment">Only return members within the selected GitHub Enterprise deployment</param>
            <param name="hasTwoFactorEnabled">Only return members with this two-factor authentication status. Does not include members who only have an account on a GitHub Enterprise Server instance.</param>
            <param name="orderBy">Ordering options for members returned from the connection.</param>
            <param name="organizationLogins">Only return members within the organizations with these logins</param>
            <param name="query">The search string to look for.</param>
            <param name="role">The role of the user in the enterprise organization or server.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Enterprise.Name">
            <summary>
            The name of the enterprise.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Enterprise.Organizations(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.OrganizationOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RoleInOrganization}})">
            <summary>
            A list of organizations that belong to this enterprise.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for organizations returned from the connection.</param>
            <param name="query">The search string to look for.</param>
            <param name="viewerOrganizationRole">The viewer's role in an organization.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Enterprise.OwnerInfo">
            <summary>
            Enterprise information visible to enterprise owners or enterprise owners' personal access tokens (classic) with read:enterprise or admin:enterprise scope.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Enterprise.ResourcePath">
            <summary>
            The HTTP path for this enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Enterprise.Slug">
            <summary>
            The URL-friendly identifier for the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Enterprise.Url">
            <summary>
            The HTTP URL for this enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Enterprise.ViewerIsAdmin">
            <summary>
            Is the current viewer an admin of this enterprise?
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Enterprise.WebsiteUrl">
            <summary>
            The URL of the enterprise website.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseAdministratorConnection">
            <summary>
            The connection type for User.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseAdministratorConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseAdministratorConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseAdministratorConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseAdministratorConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseAdministratorEdge">
            <summary>
            A User who is an administrator of an enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseAdministratorEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseAdministratorEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseAdministratorEdge.Role">
            <summary>
            The role of the administrator.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseAdministratorInvitation">
            <summary>
            An invitation for a user to become an owner or billing manager of an enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseAdministratorInvitation.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseAdministratorInvitation.Email">
            <summary>
            The email of the person who was invited to the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseAdministratorInvitation.Enterprise">
            <summary>
            The enterprise the invitation is for.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseAdministratorInvitation.Invitee">
            <summary>
            The user who was invited to the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseAdministratorInvitation.Inviter">
            <summary>
            The user who created the invitation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseAdministratorInvitation.Role">
            <summary>
            The invitee's pending role in the enterprise (owner or billing_manager).
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseAdministratorInvitationConnection">
            <summary>
            The connection type for EnterpriseAdministratorInvitation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseAdministratorInvitationConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseAdministratorInvitationConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseAdministratorInvitationConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseAdministratorInvitationConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseAdministratorInvitationEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseAdministratorInvitationEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseAdministratorInvitationEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseAdministratorInvitationOrder">
            <summary>
            Ordering options for enterprise administrator invitation connections
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseAdministratorInvitationOrder.Field">
            <summary>
            The field to order enterprise administrator invitations by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseAdministratorInvitationOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseAdministratorInvitationOrderField">
            <summary>
            Properties by which enterprise administrator invitation connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseAdministratorInvitationOrderField.CreatedAt">
            <summary>
            Order enterprise administrator member invitations by creation time
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseAdministratorRole">
            <summary>
            The possible administrator roles in an enterprise account.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseAdministratorRole.Owner">
            <summary>
            Represents an owner of the enterprise account.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseAdministratorRole.BillingManager">
            <summary>
            Represents a billing manager of the enterprise account.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseAllowPrivateRepositoryForkingPolicyValue">
            <summary>
            The possible values for the enterprise allow private repository forking policy value.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseAllowPrivateRepositoryForkingPolicyValue.EnterpriseOrganizations">
            <summary>
            Members can fork a repository to an organization within this enterprise.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseAllowPrivateRepositoryForkingPolicyValue.SameOrganization">
            <summary>
            Members can fork a repository only within the same organization (intra-org).
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseAllowPrivateRepositoryForkingPolicyValue.SameOrganizationUserAccounts">
            <summary>
            Members can fork a repository to their user account or within the same organization.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseAllowPrivateRepositoryForkingPolicyValue.EnterpriseOrganizationsUserAccounts">
            <summary>
            Members can fork a repository to their enterprise-managed user account or an organization inside this enterprise.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseAllowPrivateRepositoryForkingPolicyValue.UserAccounts">
            <summary>
            Members can fork a repository to their user account.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseAllowPrivateRepositoryForkingPolicyValue.Everywhere">
            <summary>
            Members can fork a repository to their user account or an organization, either inside or outside of this enterprise.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IEnterpriseAuditEntryData">
            <summary>
            Metadata for an audit entry containing enterprise account information.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IEnterpriseAuditEntryData.EnterpriseResourcePath">
            <summary>
            The HTTP path for this enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IEnterpriseAuditEntryData.EnterpriseSlug">
            <summary>
            The slug of the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IEnterpriseAuditEntryData.EnterpriseUrl">
            <summary>
            The HTTP URL for this enterprise.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseBillingInfo">
            <summary>
            Enterprise billing information visible to enterprise billing managers and owners.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseBillingInfo.AllLicensableUsersCount">
            <summary>
            The number of licenseable users/emails across the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseBillingInfo.AssetPacks">
            <summary>
            The number of data packs used by all organizations owned by the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseBillingInfo.BandwidthQuota">
            <summary>
            The bandwidth quota in GB for all organizations owned by the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseBillingInfo.BandwidthUsage">
            <summary>
            The bandwidth usage in GB for all organizations owned by the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseBillingInfo.BandwidthUsagePercentage">
            <summary>
            The bandwidth usage as a percentage of the bandwidth quota.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseBillingInfo.StorageQuota">
            <summary>
            The storage quota in GB for all organizations owned by the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseBillingInfo.StorageUsage">
            <summary>
            The storage usage in GB for all organizations owned by the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseBillingInfo.StorageUsagePercentage">
            <summary>
            The storage usage as a percentage of the storage quota.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseBillingInfo.TotalAvailableLicenses">
            <summary>
            The number of available licenses across all owned organizations based on the unique number of billable users.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseBillingInfo.TotalLicenses">
            <summary>
            The total number of licenses allocated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseDefaultRepositoryPermissionSettingValue">
            <summary>
            The possible values for the enterprise base repository permission setting.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseDefaultRepositoryPermissionSettingValue.NoPolicy">
            <summary>
            Organizations in the enterprise choose base repository permissions for their members.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseDefaultRepositoryPermissionSettingValue.Admin">
            <summary>
            Organization members will be able to clone, pull, push, and add new collaborators to all organization repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseDefaultRepositoryPermissionSettingValue.Write">
            <summary>
            Organization members will be able to clone, pull, and push all organization repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseDefaultRepositoryPermissionSettingValue.Read">
            <summary>
            Organization members will be able to clone and pull all organization repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseDefaultRepositoryPermissionSettingValue.None">
            <summary>
            Organization members will only be able to clone and pull public repositories.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseEnabledDisabledSettingValue">
            <summary>
            The possible values for an enabled/disabled enterprise setting.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseEnabledDisabledSettingValue.Enabled">
            <summary>
            The setting is enabled for organizations in the enterprise.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseEnabledDisabledSettingValue.Disabled">
            <summary>
            The setting is disabled for organizations in the enterprise.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseEnabledDisabledSettingValue.NoPolicy">
            <summary>
            There is no policy set for organizations in the enterprise.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseEnabledSettingValue">
            <summary>
            The possible values for an enabled/no policy enterprise setting.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseEnabledSettingValue.Enabled">
            <summary>
            The setting is enabled for organizations in the enterprise.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseEnabledSettingValue.NoPolicy">
            <summary>
            There is no policy set for organizations in the enterprise.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseFailedInvitationConnection">
            <summary>
            The connection type for OrganizationInvitation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseFailedInvitationConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseFailedInvitationConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseFailedInvitationConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseFailedInvitationConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseFailedInvitationConnection.TotalUniqueUserCount">
            <summary>
            Identifies the total count of unique users in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseFailedInvitationEdge">
            <summary>
            A failed invitation to be a member in an enterprise organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseFailedInvitationEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseFailedInvitationEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseIdentityProvider">
            <summary>
            An identity provider configured to provision identities for an enterprise. Visible to enterprise owners or enterprise owners' personal access tokens (classic) with read:enterprise or admin:enterprise scope.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseIdentityProvider.DigestMethod">
            <summary>
            The digest algorithm used to sign SAML requests for the identity provider.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseIdentityProvider.Enterprise">
            <summary>
            The enterprise this identity provider belongs to.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseIdentityProvider.ExternalIdentities(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            ExternalIdentities provisioned by this identity provider.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="login">Filter to external identities with the users login</param>
            <param name="membersOnly">Filter to external identities with valid org membership only</param>
            <param name="userName">Filter to external identities with the users userName/NameID attribute</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseIdentityProvider.IdpCertificate">
            <summary>
            The x509 certificate used by the identity provider to sign assertions and responses.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseIdentityProvider.Issuer">
            <summary>
            The Issuer Entity ID for the SAML identity provider.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseIdentityProvider.RecoveryCodes">
            <summary>
            Recovery codes that can be used by admins to access the enterprise if the identity provider is unavailable.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseIdentityProvider.SignatureMethod">
            <summary>
            The signature algorithm used to sign SAML requests for the identity provider.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseIdentityProvider.SsoUrl">
            <summary>
            The URL endpoint for the identity provider's SAML SSO.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseMember">
            <summary>
            An object that is a member of an enterprise.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseMember.Selector`1.EnterpriseUserAccount(System.Func{Octokit.GraphQL.Model.EnterpriseUserAccount,`0})">
            <summary>
            An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseMember.Selector`1.User(System.Func{Octokit.GraphQL.Model.User,`0})">
            <summary>
            A user is an individual's account on GitHub that owns repositories and can make new content.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseMemberConnection">
            <summary>
            The connection type for EnterpriseMember.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseMemberConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseMemberConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseMemberConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseMemberConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseMemberEdge">
            <summary>
            A User who is a member of an enterprise through one or more organizations.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseMemberEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseMemberEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseMemberOrder">
            <summary>
            Ordering options for enterprise member connections.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseMemberOrder.Field">
            <summary>
            The field to order enterprise members by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseMemberOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseMemberOrderField">
            <summary>
            Properties by which enterprise member connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseMemberOrderField.Login">
            <summary>
            Order enterprise members by login
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseMemberOrderField.CreatedAt">
            <summary>
            Order enterprise members by creation time
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseMembersCanCreateRepositoriesSettingValue">
            <summary>
            The possible values for the enterprise members can create repositories setting.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseMembersCanCreateRepositoriesSettingValue.NoPolicy">
            <summary>
            Organization administrators choose whether to allow members to create repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseMembersCanCreateRepositoriesSettingValue.All">
            <summary>
            Members will be able to create public and private repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseMembersCanCreateRepositoriesSettingValue.Public">
            <summary>
            Members will be able to create only public repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseMembersCanCreateRepositoriesSettingValue.Private">
            <summary>
            Members will be able to create only private repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseMembersCanCreateRepositoriesSettingValue.Disabled">
            <summary>
            Members will not be able to create public or private repositories.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseMembersCanMakePurchasesSettingValue">
            <summary>
            The possible values for the members can make purchases setting.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseMembersCanMakePurchasesSettingValue.Enabled">
            <summary>
            The setting is enabled for organizations in the enterprise.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseMembersCanMakePurchasesSettingValue.Disabled">
            <summary>
            The setting is disabled for organizations in the enterprise.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseOrganizationMembershipConnection">
            <summary>
            The connection type for Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOrganizationMembershipConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOrganizationMembershipConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOrganizationMembershipConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOrganizationMembershipConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseOrganizationMembershipEdge">
            <summary>
            An enterprise organization that a user is a member of.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOrganizationMembershipEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOrganizationMembershipEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOrganizationMembershipEdge.Role">
            <summary>
            The role of the user in the enterprise membership.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseOutsideCollaboratorConnection">
            <summary>
            The connection type for User.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOutsideCollaboratorConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOutsideCollaboratorConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOutsideCollaboratorConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOutsideCollaboratorConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseOutsideCollaboratorEdge">
            <summary>
            A User who is an outside collaborator of an enterprise through one or more organizations.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOutsideCollaboratorEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOutsideCollaboratorEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOutsideCollaboratorEdge.Repositories(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RepositoryOrder}})">
            <summary>
            The enterprise organization repositories this user is a member of.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for repositories.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseOwnerInfo">
            <summary>
            Enterprise information visible to enterprise owners or enterprise owners' personal access tokens (classic) with read:enterprise or admin:enterprise scope.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.Admins(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.EnterpriseMemberOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.EnterpriseAdministratorRole}})">
            <summary>
            A list of all of the administrators for this enterprise.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="hasTwoFactorEnabled">Only return administrators with this two-factor authentication status.</param>
            <param name="orderBy">Ordering options for administrators returned from the connection.</param>
            <param name="organizationLogins">Only return members within the organizations with these logins</param>
            <param name="query">The search string to look for.</param>
            <param name="role">The role to filter by.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.AffiliatedUsersWithTwoFactorDisabled(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of users in the enterprise who currently have two-factor authentication disabled.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.AffiliatedUsersWithTwoFactorDisabledExist">
            <summary>
            Whether or not affiliated users with two-factor authentication disabled exist in the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.AllowPrivateRepositoryForkingSetting">
            <summary>
            The setting value for whether private repository forking is enabled for repositories in organizations in this enterprise.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.AllowPrivateRepositoryForkingSettingOrganizations(Octokit.GraphQL.Core.Arg{System.Boolean},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.OrganizationOrder}})">
            <summary>
            A list of enterprise organizations configured with the provided private repository forking setting value.
            </summary>
            <param name="value">The setting value to find organizations for.</param>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for organizations with this setting.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.AllowPrivateRepositoryForkingSettingPolicyValue">
            <summary>
            The value for the allow private repository forking policy on the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.DefaultRepositoryPermissionSetting">
            <summary>
            The setting value for base repository permissions for organizations in this enterprise.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.DefaultRepositoryPermissionSettingOrganizations(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DefaultRepositoryPermissionField},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.OrganizationOrder}})">
            <summary>
            A list of enterprise organizations configured with the provided base repository permission.
            </summary>
            <param name="value">The permission to find organizations for.</param>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for organizations with this setting.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.Domains(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.VerifiableDomainOrder}})">
            <summary>
            A list of domains owned by the enterprise. Visible to enterprise owners or enterprise owners' personal access tokens (classic) with admin:enterprise scope.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="isApproved">Filter whether or not the domain is approved.</param>
            <param name="isVerified">Filter whether or not the domain is verified.</param>
            <param name="orderBy">Ordering options for verifiable domains returned.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.EnterpriseServerInstallations(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.EnterpriseServerInstallationOrder}})">
            <summary>
            Enterprise Server installations owned by the enterprise.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="connectedOnly">Whether or not to only return installations discovered via GitHub Connect.</param>
            <param name="orderBy">Ordering options for Enterprise Server installations returned.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.FailedInvitations(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of failed invitations in the enterprise.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="query">The search string to look for.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.IpAllowListEnabledSetting">
            <summary>
            The setting value for whether the enterprise has an IP allow list enabled.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.IpAllowListEntries(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.IpAllowListEntryOrder}})">
            <summary>
            The IP addresses that are allowed to access resources owned by the enterprise. Visible to enterprise owners or enterprise owners' personal access tokens (classic) with admin:enterprise scope.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for IP allow list entries returned.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.IpAllowListForInstalledAppsEnabledSetting">
            <summary>
            The setting value for whether the enterprise has IP allow list configuration for installed GitHub Apps enabled.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.IsUpdatingDefaultRepositoryPermission">
            <summary>
            Whether or not the base repository permission is currently being updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.IsUpdatingTwoFactorRequirement">
            <summary>
            Whether the two-factor authentication requirement is currently being enforced.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.MembersCanChangeRepositoryVisibilitySetting">
            <summary>
            The setting value for whether organization members with admin permissions on a repository can change repository visibility.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.MembersCanChangeRepositoryVisibilitySettingOrganizations(Octokit.GraphQL.Core.Arg{System.Boolean},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.OrganizationOrder}})">
            <summary>
            A list of enterprise organizations configured with the provided can change repository visibility setting value.
            </summary>
            <param name="value">The setting value to find organizations for.</param>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for organizations with this setting.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.MembersCanCreateInternalRepositoriesSetting">
            <summary>
            The setting value for whether members of organizations in the enterprise can create internal repositories.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.MembersCanCreatePrivateRepositoriesSetting">
            <summary>
            The setting value for whether members of organizations in the enterprise can create private repositories.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.MembersCanCreatePublicRepositoriesSetting">
            <summary>
            The setting value for whether members of organizations in the enterprise can create public repositories.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.MembersCanCreateRepositoriesSetting">
            <summary>
            The setting value for whether members of organizations in the enterprise can create repositories.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.MembersCanCreateRepositoriesSettingOrganizations(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.OrganizationMembersCanCreateRepositoriesSettingValue},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.OrganizationOrder}})">
            <summary>
            A list of enterprise organizations configured with the provided repository creation setting value.
            </summary>
            <param name="value">The setting to find organizations for.</param>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for organizations with this setting.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.MembersCanDeleteIssuesSetting">
            <summary>
            The setting value for whether members with admin permissions for repositories can delete issues.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.MembersCanDeleteIssuesSettingOrganizations(Octokit.GraphQL.Core.Arg{System.Boolean},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.OrganizationOrder}})">
            <summary>
            A list of enterprise organizations configured with the provided members can delete issues setting value.
            </summary>
            <param name="value">The setting value to find organizations for.</param>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for organizations with this setting.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.MembersCanDeleteRepositoriesSetting">
            <summary>
            The setting value for whether members with admin permissions for repositories can delete or transfer repositories.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.MembersCanDeleteRepositoriesSettingOrganizations(Octokit.GraphQL.Core.Arg{System.Boolean},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.OrganizationOrder}})">
            <summary>
            A list of enterprise organizations configured with the provided members can delete repositories setting value.
            </summary>
            <param name="value">The setting value to find organizations for.</param>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for organizations with this setting.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.MembersCanInviteCollaboratorsSetting">
            <summary>
            The setting value for whether members of organizations in the enterprise can invite outside collaborators.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.MembersCanInviteCollaboratorsSettingOrganizations(Octokit.GraphQL.Core.Arg{System.Boolean},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.OrganizationOrder}})">
            <summary>
            A list of enterprise organizations configured with the provided members can invite collaborators setting value.
            </summary>
            <param name="value">The setting value to find organizations for.</param>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for organizations with this setting.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.MembersCanMakePurchasesSetting">
            <summary>
            Indicates whether members of this enterprise's organizations can purchase additional services for those organizations.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.MembersCanUpdateProtectedBranchesSetting">
            <summary>
            The setting value for whether members with admin permissions for repositories can update protected branches.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.MembersCanUpdateProtectedBranchesSettingOrganizations(Octokit.GraphQL.Core.Arg{System.Boolean},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.OrganizationOrder}})">
            <summary>
            A list of enterprise organizations configured with the provided members can update protected branches setting value.
            </summary>
            <param name="value">The setting value to find organizations for.</param>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for organizations with this setting.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.MembersCanViewDependencyInsightsSetting">
            <summary>
            The setting value for whether members can view dependency insights.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.MembersCanViewDependencyInsightsSettingOrganizations(Octokit.GraphQL.Core.Arg{System.Boolean},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.OrganizationOrder}})">
            <summary>
            A list of enterprise organizations configured with the provided members can view dependency insights setting value.
            </summary>
            <param name="value">The setting value to find organizations for.</param>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for organizations with this setting.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.NotificationDeliveryRestrictionEnabledSetting">
            <summary>
            Indicates if email notification delivery for this enterprise is restricted to verified or approved domains.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.OidcProvider">
            <summary>
            The OIDC Identity Provider for the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.OrganizationProjectsSetting">
            <summary>
            The setting value for whether organization projects are enabled for organizations in this enterprise.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.OrganizationProjectsSettingOrganizations(Octokit.GraphQL.Core.Arg{System.Boolean},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.OrganizationOrder}})">
            <summary>
            A list of enterprise organizations configured with the provided organization projects setting value.
            </summary>
            <param name="value">The setting value to find organizations for.</param>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for organizations with this setting.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.OutsideCollaborators(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.EnterpriseMemberOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RepositoryVisibility}})">
            <summary>
            A list of outside collaborators across the repositories in the enterprise.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="hasTwoFactorEnabled">Only return outside collaborators with this two-factor authentication status.</param>
            <param name="login">The login of one specific outside collaborator.</param>
            <param name="orderBy">Ordering options for outside collaborators returned from the connection.</param>
            <param name="organizationLogins">Only return outside collaborators within the organizations with these logins</param>
            <param name="query">The search string to look for.</param>
            <param name="visibility">Only return outside collaborators on repositories with this visibility.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.PendingAdminInvitations(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.EnterpriseAdministratorInvitationOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.EnterpriseAdministratorRole}})">
            <summary>
            A list of pending administrator invitations for the enterprise.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for pending enterprise administrator invitations returned from the connection.</param>
            <param name="query">The search string to look for.</param>
            <param name="role">The role to filter by.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.PendingCollaboratorInvitations(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RepositoryInvitationOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of pending collaborator invitations across the repositories in the enterprise.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for pending repository collaborator invitations returned from the connection.</param>
            <param name="query">The search string to look for.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.PendingMemberInvitations(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.OrganizationInvitationSource}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of pending member invitations for organizations in the enterprise.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="invitationSource">Only return invitations matching this invitation source</param>
            <param name="organizationLogins">Only return invitations within the organizations with these logins</param>
            <param name="query">The search string to look for.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.RepositoryProjectsSetting">
            <summary>
            The setting value for whether repository projects are enabled in this enterprise.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.RepositoryProjectsSettingOrganizations(Octokit.GraphQL.Core.Arg{System.Boolean},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.OrganizationOrder}})">
            <summary>
            A list of enterprise organizations configured with the provided repository projects setting value.
            </summary>
            <param name="value">The setting value to find organizations for.</param>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for organizations with this setting.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.SamlIdentityProvider">
            <summary>
            The SAML Identity Provider for the enterprise.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.SamlIdentityProviderSettingOrganizations(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.IdentityProviderConfigurationState},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.OrganizationOrder}})">
            <summary>
            A list of enterprise organizations configured with the SAML single sign-on setting value.
            </summary>
            <param name="value">The setting value to find organizations for.</param>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for organizations with this setting.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.SupportEntitlements(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.EnterpriseMemberOrder}})">
            <summary>
            A list of members with a support entitlement.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for support entitlement users returned from the connection.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.TeamDiscussionsSetting">
            <summary>
            The setting value for whether team discussions are enabled for organizations in this enterprise.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.TeamDiscussionsSettingOrganizations(Octokit.GraphQL.Core.Arg{System.Boolean},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.OrganizationOrder}})">
            <summary>
            A list of enterprise organizations configured with the provided team discussions setting value.
            </summary>
            <param name="value">The setting value to find organizations for.</param>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for organizations with this setting.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseOwnerInfo.TwoFactorRequiredSetting">
            <summary>
            The setting value for whether the enterprise requires two-factor authentication for its organizations and users.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseOwnerInfo.TwoFactorRequiredSettingOrganizations(Octokit.GraphQL.Core.Arg{System.Boolean},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.OrganizationOrder}})">
            <summary>
            A list of enterprise organizations configured with the two-factor authentication setting value.
            </summary>
            <param name="value">The setting value to find organizations for.</param>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for organizations with this setting.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterprisePendingMemberInvitationConnection">
            <summary>
            The connection type for OrganizationInvitation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterprisePendingMemberInvitationConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterprisePendingMemberInvitationConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterprisePendingMemberInvitationConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterprisePendingMemberInvitationConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterprisePendingMemberInvitationConnection.TotalUniqueUserCount">
            <summary>
            Identifies the total count of unique users in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterprisePendingMemberInvitationEdge">
            <summary>
            An invitation to be a member in an enterprise organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterprisePendingMemberInvitationEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterprisePendingMemberInvitationEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseRepositoryInfo">
            <summary>
            A subset of repository information queryable from an enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseRepositoryInfo.IsPrivate">
            <summary>
            Identifies if the repository is private or internal.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseRepositoryInfo.Name">
            <summary>
            The repository's name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseRepositoryInfo.NameWithOwner">
            <summary>
            The repository's name with owner.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseRepositoryInfoConnection">
            <summary>
            The connection type for EnterpriseRepositoryInfo.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseRepositoryInfoConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseRepositoryInfoConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseRepositoryInfoConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseRepositoryInfoConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseRepositoryInfoEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseRepositoryInfoEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseRepositoryInfoEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseServerInstallation">
            <summary>
            An Enterprise Server installation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerInstallation.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerInstallation.CustomerName">
            <summary>
            The customer name to which the Enterprise Server installation belongs.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerInstallation.HostName">
            <summary>
            The host name of the Enterprise Server installation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerInstallation.IsConnected">
            <summary>
            Whether or not the installation is connected to an Enterprise Server installation via GitHub Connect.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerInstallation.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseServerInstallation.UserAccounts(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.EnterpriseServerUserAccountOrder}})">
            <summary>
            User accounts on this Enterprise Server installation.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for Enterprise Server user accounts returned from the connection.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseServerInstallation.UserAccountsUploads(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.EnterpriseServerUserAccountsUploadOrder}})">
            <summary>
            User accounts uploads for the Enterprise Server installation.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for Enterprise Server user accounts uploads returned from the connection.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseServerInstallationConnection">
            <summary>
            The connection type for EnterpriseServerInstallation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerInstallationConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerInstallationConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerInstallationConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerInstallationConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseServerInstallationEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerInstallationEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerInstallationEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseServerInstallationMembershipConnection">
            <summary>
            The connection type for EnterpriseServerInstallation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerInstallationMembershipConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerInstallationMembershipConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerInstallationMembershipConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerInstallationMembershipConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseServerInstallationMembershipEdge">
            <summary>
            An Enterprise Server installation that a user is a member of.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerInstallationMembershipEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerInstallationMembershipEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerInstallationMembershipEdge.Role">
            <summary>
            The role of the user in the enterprise membership.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseServerInstallationOrder">
            <summary>
            Ordering options for Enterprise Server installation connections.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerInstallationOrder.Field">
            <summary>
            The field to order Enterprise Server installations by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerInstallationOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseServerInstallationOrderField">
            <summary>
            Properties by which Enterprise Server installation connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseServerInstallationOrderField.HostName">
            <summary>
            Order Enterprise Server installations by host name
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseServerInstallationOrderField.CustomerName">
            <summary>
            Order Enterprise Server installations by customer name
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseServerInstallationOrderField.CreatedAt">
            <summary>
            Order Enterprise Server installations by creation time
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseServerUserAccount">
            <summary>
            A user account on an Enterprise Server installation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccount.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseServerUserAccount.Emails(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.EnterpriseServerUserAccountEmailOrder}})">
            <summary>
            User emails belonging to this user account.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for Enterprise Server user account emails returned from the connection.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccount.EnterpriseServerInstallation">
            <summary>
            The Enterprise Server installation on which this user account exists.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccount.IsSiteAdmin">
            <summary>
            Whether the user account is a site administrator on the Enterprise Server installation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccount.Login">
            <summary>
            The login of the user account on the Enterprise Server installation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccount.ProfileName">
            <summary>
            The profile name of the user account on the Enterprise Server installation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccount.RemoteCreatedAt">
            <summary>
            The date and time when the user account was created on the Enterprise Server installation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccount.RemoteUserId">
            <summary>
            The ID of the user account on the Enterprise Server installation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccount.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseServerUserAccountConnection">
            <summary>
            The connection type for EnterpriseServerUserAccount.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseServerUserAccountEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseServerUserAccountEmail">
            <summary>
            An email belonging to a user account on an Enterprise Server installation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountEmail.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountEmail.Email">
            <summary>
            The email address.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountEmail.IsPrimary">
            <summary>
            Indicates whether this is the primary email of the associated user account.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountEmail.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountEmail.UserAccount">
            <summary>
            The user account to which the email belongs.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseServerUserAccountEmailConnection">
            <summary>
            The connection type for EnterpriseServerUserAccountEmail.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountEmailConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountEmailConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountEmailConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountEmailConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseServerUserAccountEmailEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountEmailEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountEmailEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseServerUserAccountEmailOrder">
            <summary>
            Ordering options for Enterprise Server user account email connections.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountEmailOrder.Field">
            <summary>
            The field to order emails by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountEmailOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseServerUserAccountEmailOrderField">
            <summary>
            Properties by which Enterprise Server user account email connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseServerUserAccountEmailOrderField.Email">
            <summary>
            Order emails by email
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseServerUserAccountOrder">
            <summary>
            Ordering options for Enterprise Server user account connections.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountOrder.Field">
            <summary>
            The field to order user accounts by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseServerUserAccountOrderField">
            <summary>
            Properties by which Enterprise Server user account connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseServerUserAccountOrderField.Login">
            <summary>
            Order user accounts by login
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseServerUserAccountOrderField.RemoteCreatedAt">
            <summary>
            Order user accounts by creation time on the Enterprise Server installation
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUpload">
            <summary>
            A user accounts upload from an Enterprise Server installation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUpload.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUpload.Enterprise">
            <summary>
            The enterprise to which this upload belongs.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUpload.EnterpriseServerInstallation">
            <summary>
            The Enterprise Server installation for which this upload was generated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUpload.Name">
            <summary>
            The name of the file uploaded.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUpload.SyncState">
            <summary>
            The synchronization state of the upload
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUpload.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUploadConnection">
            <summary>
            The connection type for EnterpriseServerUserAccountsUpload.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUploadConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUploadConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUploadConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUploadConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUploadEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUploadEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUploadEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUploadOrder">
            <summary>
            Ordering options for Enterprise Server user accounts upload connections.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUploadOrder.Field">
            <summary>
            The field to order user accounts uploads by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUploadOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUploadOrderField">
            <summary>
            Properties by which Enterprise Server user accounts upload connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUploadOrderField.CreatedAt">
            <summary>
            Order user accounts uploads by creation time
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUploadSyncState">
            <summary>
            Synchronization state of the Enterprise Server user accounts upload
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUploadSyncState.Pending">
            <summary>
            The synchronization of the upload is pending.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUploadSyncState.Success">
            <summary>
            The synchronization of the upload succeeded.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseServerUserAccountsUploadSyncState.Failure">
            <summary>
            The synchronization of the upload failed.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseUserAccount">
            <summary>
            An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseUserAccount.AvatarUrl(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            A URL pointing to the enterprise user account's public avatar.
            </summary>
            <param name="size">The size of the resulting square image.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseUserAccount.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseUserAccount.Enterprise">
            <summary>
            The enterprise in which this user account exists.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseUserAccount.EnterpriseInstallations(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.EnterpriseServerInstallationOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.EnterpriseUserAccountMembershipRole}})">
            <summary>
            A list of Enterprise Server installations this user is a member of.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for installations returned from the connection.</param>
            <param name="query">The search string to look for.</param>
            <param name="role">The role of the user in the installation.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseUserAccount.Login">
            <summary>
            An identifier for the enterprise user account, a login or email address
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseUserAccount.Name">
            <summary>
            The name of the enterprise user account
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.EnterpriseUserAccount.Organizations(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.OrganizationOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.EnterpriseUserAccountMembershipRole}})">
            <summary>
            A list of enterprise organizations this user is a member of.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for organizations returned from the connection.</param>
            <param name="query">The search string to look for.</param>
            <param name="role">The role of the user in the enterprise organization.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseUserAccount.ResourcePath">
            <summary>
            The HTTP path for this user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseUserAccount.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseUserAccount.Url">
            <summary>
            The HTTP URL for this user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnterpriseUserAccount.User">
            <summary>
            The user within the enterprise.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseUserAccountMembershipRole">
            <summary>
            The possible roles for enterprise membership.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseUserAccountMembershipRole.Member">
            <summary>
            The user is a member of an organization in the enterprise.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseUserAccountMembershipRole.Owner">
            <summary>
            The user is an owner of an organization in the enterprise.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseUserAccountMembershipRole.Unaffiliated">
            <summary>
            The user is not an owner of the enterprise, and not a member or owner of any organizations in the enterprise; only for EMU-enabled enterprises.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnterpriseUserDeployment">
            <summary>
            The possible GitHub Enterprise deployments where this user can exist.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseUserDeployment.Cloud">
            <summary>
            The user is part of a GitHub Enterprise Cloud deployment.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.EnterpriseUserDeployment.Server">
            <summary>
            The user is part of a GitHub Enterprise Server deployment.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Environment">
            <summary>
            An environment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Environment.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Environment.Name">
            <summary>
            The name of the environment
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Environment.ProtectionRules(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The protection rules defined for this environment
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnvironmentConnection">
            <summary>
            The connection type for Environment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnvironmentConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnvironmentConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnvironmentConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnvironmentConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.EnvironmentEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnvironmentEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.EnvironmentEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ExternalIdentity">
            <summary>
            An external identity provisioned by SAML SSO or SCIM. If SAML is configured on the organization, the external identity is visible to (1) organization owners, (2) organization owners' personal access tokens (classic) with read:org or admin:org scope, (3) GitHub App with an installation token with read or write access to members. If SAML is configured on the enterprise, the external identity is visible to (1) enterprise owners, (2) enterprise owners' personal access tokens (classic) with read:enterprise or admin:enterprise scope.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentity.Guid">
            <summary>
            The GUID for this identity
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentity.OrganizationInvitation">
            <summary>
            Organization invitation for this SCIM-provisioned external identity
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentity.SamlIdentity">
            <summary>
            SAML Identity attributes
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentity.ScimIdentity">
            <summary>
            SCIM Identity attributes
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentity.User">
            <summary>
            User linked to this external identity. Will be NULL if this identity has not been claimed by an organization member.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ExternalIdentityAttribute">
            <summary>
            An attribute for the External Identity attributes collection
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentityAttribute.Metadata">
            <summary>
            The attribute metadata as JSON
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentityAttribute.Name">
            <summary>
            The attribute name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentityAttribute.Value">
            <summary>
            The attribute value
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ExternalIdentityConnection">
            <summary>
            The connection type for ExternalIdentity.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentityConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentityConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentityConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentityConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ExternalIdentityEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentityEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentityEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ExternalIdentitySamlAttributes">
            <summary>
            SAML attributes for the External Identity
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentitySamlAttributes.Attributes">
            <summary>
            SAML Identity attributes
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentitySamlAttributes.Emails">
            <summary>
            The emails associated with the SAML identity
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentitySamlAttributes.FamilyName">
            <summary>
            Family name of the SAML identity
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentitySamlAttributes.GivenName">
            <summary>
            Given name of the SAML identity
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentitySamlAttributes.Groups">
            <summary>
            The groups linked to this identity in IDP
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentitySamlAttributes.NameId">
            <summary>
            The NameID of the SAML identity
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentitySamlAttributes.Username">
            <summary>
            The userName of the SAML identity
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ExternalIdentityScimAttributes">
            <summary>
            SCIM attributes for the External Identity
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentityScimAttributes.Emails">
            <summary>
            The emails associated with the SCIM identity
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentityScimAttributes.FamilyName">
            <summary>
            Family name of the SCIM identity
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentityScimAttributes.GivenName">
            <summary>
            Given name of the SCIM identity
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentityScimAttributes.Groups">
            <summary>
            The groups linked to this identity in IDP
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ExternalIdentityScimAttributes.Username">
            <summary>
            The userName of the SCIM identity
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.FileAddition">
            <summary>
            A command to add a file at the given path with the given contents as part of a commit.  Any existing file at that that path will be replaced.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.FileAddition.Path">
            <summary>
            The path in the repository where the file will be located
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.FileAddition.Contents">
            <summary>
            The base64 encoded contents of the file
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.FileChanges">
            <summary>
            A description of a set of changes to a file tree to be made as part of
            a git commit, modeled as zero or more file `additions` and zero or more
            file `deletions`.
            Both fields are optional; omitting both will produce a commit with no
            file changes.
            `deletions` and `additions` describe changes to files identified
            by their path in the git tree using unix-style path separators, i.e.
            `/`.  The root of a git tree is an empty string, so paths are not
            slash-prefixed.
            `path` values must be unique across all `additions` and `deletions`
            provided.  Any duplication will result in a validation error.
            ### Encoding
            File contents must be provided in full for each `FileAddition`.
            The `contents` of a `FileAddition` must be encoded using RFC 4648
            compliant base64, i.e. correct padding is required and no characters
            outside the standard alphabet may be used.  Invalid base64
            encoding will be rejected with a validation error.
            The encoded contents may be binary.
            For text files, no assumptions are made about the character encoding of
            the file contents (after base64 decoding).  No charset transcoding or
            line-ending normalization will be performed; it is the client's
            responsibility to manage the character encoding of files they provide.
            However, for maximum compatibility we recommend using UTF-8 encoding
            and ensuring that all files in a repository use a consistent
            line-ending convention (`\n` or `\r\n`), and that all files end
            with a newline.
            ### Modeling file changes
            Each of the the five types of conceptual changes that can be made in a
            git commit can be described using the `FileChanges` type as follows:
            1. New file addition: create file `hello world\n` at path `docs/README.txt`:
                   {
                     "additions" [
                       {
                         "path": "docs/README.txt",
                         "contents": base64encode("hello world\n")
                       }
                     ]
                   }
            2. Existing file modification: change existing `docs/README.txt` to have new
               content `new content here\n`:
                   {
                     "additions" [
                       {
                         "path": "docs/README.txt",
                         "contents": base64encode("new content here\n")
                       }
                     ]
                   }
            3. Existing file deletion: remove existing file `docs/README.txt`.
               Note that the path is required to exist -- specifying a
               path that does not exist on the given branch will abort the
               commit and return an error.
                   {
                     "deletions" [
                       {
                         "path": "docs/README.txt"
                       }
                     ]
                   }
            4. File rename with no changes: rename `docs/README.txt` with
               previous content `hello world\n` to the same content at
               `newdocs/README.txt`:
                   {
                     "deletions" [
                       {
                         "path": "docs/README.txt",
                       }
                     ],
                     "additions" [
                       {
                         "path": "newdocs/README.txt",
                         "contents": base64encode("hello world\n")
                       }
                     ]
                   }
            5. File rename with changes: rename `docs/README.txt` with
               previous content `hello world\n` to a file at path
               `newdocs/README.txt` with content `new contents\n`:
                   {
                     "deletions" [
                       {
                         "path": "docs/README.txt",
                       }
                     ],
                     "additions" [
                       {
                         "path": "newdocs/README.txt",
                         "contents": base64encode("new contents\n")
                       }
                     ]
                   }
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.FileChanges.Deletions">
            <summary>
            Files to delete.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.FileChanges.Additions">
            <summary>
            File to add or change.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.FileDeletion">
            <summary>
            A command to delete the file at the given path as part of a commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.FileDeletion.Path">
            <summary>
            The path to delete
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.FileViewedState">
            <summary>
            The possible viewed states of a file .
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.FileViewedState.Dismissed">
            <summary>
            The file has new changes since last viewed.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.FileViewedState.Viewed">
            <summary>
            The file has been marked as viewed.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.FileViewedState.Unviewed">
            <summary>
            The file has not been marked as viewed.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.FollowerConnection">
            <summary>
            The connection type for User.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.FollowerConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.FollowerConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.FollowerConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.FollowerConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.FollowingConnection">
            <summary>
            The connection type for User.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.FollowingConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.FollowingConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.FollowingConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.FollowingConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.FollowOrganizationInput">
            <summary>
            Autogenerated input type of FollowOrganization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.FollowOrganizationInput.OrganizationId">
            <summary>
            ID of the organization to follow.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.FollowOrganizationInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.FollowOrganizationPayload">
            <summary>
            Autogenerated return type of FollowOrganization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.FollowOrganizationPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.FollowOrganizationPayload.Organization">
            <summary>
            The organization that was followed.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.FollowUserInput">
            <summary>
            Autogenerated input type of FollowUser
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.FollowUserInput.UserId">
            <summary>
            ID of the user to follow.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.FollowUserInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.FollowUserPayload">
            <summary>
            Autogenerated return type of FollowUser
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.FollowUserPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.FollowUserPayload.User">
            <summary>
            The user that was followed.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.FundingLink">
            <summary>
            A funding platform link for a repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.FundingLink.Platform">
            <summary>
            The funding platform this link is for.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.FundingLink.Url">
            <summary>
            The configured URL for this funding link.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.FundingPlatform">
            <summary>
            The possible funding platforms for repository funding links.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.FundingPlatform.Github">
            <summary>
            GitHub funding platform.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.FundingPlatform.Patreon">
            <summary>
            Patreon funding platform.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.FundingPlatform.OpenCollective">
            <summary>
            Open Collective funding platform.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.FundingPlatform.KoFi">
            <summary>
            Ko-fi funding platform.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.FundingPlatform.Tidelift">
            <summary>
            Tidelift funding platform.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.FundingPlatform.CommunityBridge">
            <summary>
            Community Bridge funding platform.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.FundingPlatform.Liberapay">
            <summary>
            Liberapay funding platform.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.FundingPlatform.Issuehunt">
            <summary>
            IssueHunt funding platform.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.FundingPlatform.Otechie">
            <summary>
            Otechie funding platform.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.FundingPlatform.LfxCrowdfunding">
            <summary>
            LFX Crowdfunding funding platform.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.FundingPlatform.Custom">
            <summary>
            Custom funding platform.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.GenericHovercardContext">
            <summary>
            A generic hovercard context with a message and icon
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GenericHovercardContext.Message">
            <summary>
            A string describing this context
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GenericHovercardContext.Octicon">
            <summary>
            An octicon to accompany this context
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Gist">
            <summary>
            A Gist.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Gist.Comments(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of comments associated with the gist
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Gist.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Gist.Description">
            <summary>
            The gist description.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Gist.Files(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The files in this gist.
            </summary>
            <param name="limit">The maximum number of files to return.</param>
            <param name="oid">The oid of the files to return</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Gist.Forks(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.GistOrder}})">
            <summary>
            A list of forks associated with the gist
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for gists returned from the connection</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Gist.IsFork">
            <summary>
            Identifies if the gist is a fork.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Gist.IsPublic">
            <summary>
            Whether the gist is public or not.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Gist.Name">
            <summary>
            The gist name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Gist.Owner">
            <summary>
            The gist owner.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Gist.PushedAt">
            <summary>
            Identifies when the gist was last pushed to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Gist.ResourcePath">
            <summary>
            The HTML path to this resource.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Gist.StargazerCount">
            <summary>
            Returns a count of how many stargazers there are on this object
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Gist.Stargazers(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.StarOrder}})">
            <summary>
            A list of users who have starred this starrable.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Order for connection</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Gist.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Gist.Url">
            <summary>
            The HTTP URL for this Gist.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Gist.ViewerHasStarred">
            <summary>
            Returns a boolean indicating whether the viewing user has starred this starrable.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.GistComment">
            <summary>
            Represents a comment on an Gist.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistComment.Author">
            <summary>
            The actor who authored the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistComment.AuthorAssociation">
            <summary>
            Author's association with the gist.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistComment.Body">
            <summary>
            Identifies the comment body.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistComment.BodyHTML">
            <summary>
            The body rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistComment.BodyText">
            <summary>
            The body rendered to text.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistComment.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistComment.CreatedViaEmail">
            <summary>
            Check if this comment was created via an email reply.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistComment.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistComment.Editor">
            <summary>
            The actor who edited the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistComment.Gist">
            <summary>
            The associated gist.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistComment.IncludesCreatedEdit">
            <summary>
            Check if this comment was edited and includes an edit with the creation data
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistComment.IsMinimized">
            <summary>
            Returns whether or not a comment has been minimized.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistComment.LastEditedAt">
            <summary>
            The moment the editor made the last edit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistComment.MinimizedReason">
            <summary>
            Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistComment.PublishedAt">
            <summary>
            Identifies when the comment was published at.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistComment.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.GistComment.UserContentEdits(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of edits to this content.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistComment.ViewerCanDelete">
            <summary>
            Check if the current viewer can delete this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistComment.ViewerCanMinimize">
            <summary>
            Check if the current viewer can minimize this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistComment.ViewerCanUpdate">
            <summary>
            Check if the current viewer can update this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistComment.ViewerCannotUpdateReasons">
            <summary>
            Reasons why the current viewer can not update this comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistComment.ViewerDidAuthor">
            <summary>
            Did the viewer author this comment.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.GistCommentConnection">
            <summary>
            The connection type for GistComment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistCommentConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistCommentConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistCommentConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistCommentConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.GistCommentEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistCommentEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistCommentEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.GistConnection">
            <summary>
            The connection type for Gist.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.GistEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.GistFile">
            <summary>
            A file in a gist.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistFile.EncodedName">
            <summary>
            The file name encoded to remove characters that are invalid in URL paths.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistFile.Encoding">
            <summary>
            The gist file encoding.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistFile.Extension">
            <summary>
            The file extension from the file name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistFile.IsImage">
            <summary>
            Indicates if this file is an image.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistFile.IsTruncated">
            <summary>
            Whether the file's contents were truncated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistFile.Language">
            <summary>
            The programming language this file is written in.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistFile.Name">
            <summary>
            The gist file name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistFile.Size">
            <summary>
            The gist file size in bytes.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.GistFile.Text(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            UTF8 text data or null if the file is binary
            </summary>
            <param name="truncate">Optionally truncate the returned file to this length.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.GistOrder">
            <summary>
            Ordering options for gist connections
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistOrder.Field">
            <summary>
            The field to order repositories by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GistOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.GistOrderField">
            <summary>
            Properties by which gist connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.GistOrderField.CreatedAt">
            <summary>
            Order gists by creation time
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.GistOrderField.UpdatedAt">
            <summary>
            Order gists by update time
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.GistOrderField.PushedAt">
            <summary>
            Order gists by push time
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.GistPrivacy">
            <summary>
            The privacy of a Gist
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.GistPrivacy.Public">
            <summary>
            Public
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.GistPrivacy.Secret">
            <summary>
            Secret
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.GistPrivacy.All">
            <summary>
            Gists that are public and secret
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.GitActor">
            <summary>
            Represents an actor in a Git commit (ie. an author or committer).
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.GitActor.AvatarUrl(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            A URL pointing to the author's public avatar.
            </summary>
            <param name="size">The size of the resulting square image.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.GitActor.Date">
            <summary>
            The timestamp of the Git action (authoring or committing).
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GitActor.Email">
            <summary>
            The email in the Git commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GitActor.Name">
            <summary>
            The name in the Git commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GitActor.User">
            <summary>
            The GitHub user corresponding to the email field. Null if no such user exists.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.GitActorConnection">
            <summary>
            The connection type for GitActor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GitActorConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GitActorConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GitActorConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GitActorConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.GitActorEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GitActorEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GitActorEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.GitHubMetadata">
            <summary>
            Represents information about the GitHub instance.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GitHubMetadata.GitHubServicesSha">
            <summary>
            Returns a String that's a SHA of `github-services`
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GitHubMetadata.GitIpAddresses">
            <summary>
            IP addresses that users connect to for git operations
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GitHubMetadata.HookIpAddresses">
            <summary>
            IP addresses that service hooks are sent from
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GitHubMetadata.ImporterIpAddresses">
            <summary>
            IP addresses that the importer connects from
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GitHubMetadata.IsPasswordAuthenticationVerifiable">
            <summary>
            Whether or not users are verified
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GitHubMetadata.PagesIpAddresses">
            <summary>
            IP addresses for GitHub Pages' A records
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IGitObject">
            <summary>
            Represents a Git object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IGitObject.AbbreviatedOid">
            <summary>
            An abbreviated version of the Git object ID
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IGitObject.CommitResourcePath">
            <summary>
            The HTTP path for this Git object
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IGitObject.CommitUrl">
            <summary>
            The HTTP URL for this Git object
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IGitObject.Oid">
            <summary>
            The Git object ID
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IGitObject.Repository">
            <summary>
            The Repository the Git object belongs to
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IGitSignature">
            <summary>
            Information about a signature (GPG or S/MIME) on a Commit or Tag.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IGitSignature.Email">
            <summary>
            Email used to sign this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IGitSignature.IsValid">
            <summary>
            True if the signature is valid and verified by GitHub.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IGitSignature.Payload">
            <summary>
            Payload for GPG signing object. Raw ODB object without the signature header.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IGitSignature.Signature">
            <summary>
            ASCII-armored signature header from object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IGitSignature.Signer">
            <summary>
            GitHub user corresponding to the email signing this commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IGitSignature.State">
            <summary>
            The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IGitSignature.WasSignedByGitHub">
            <summary>
            True if the signature was made with GitHub's signing key.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.GitSignatureState">
            <summary>
            The state of a Git signature.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.GitSignatureState.Valid">
            <summary>
            Valid signature and verified by GitHub
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.GitSignatureState.Invalid">
            <summary>
            Invalid signature
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.GitSignatureState.MalformedSig">
            <summary>
            Malformed signature
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.GitSignatureState.UnknownKey">
            <summary>
            Key used for signing not known to GitHub
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.GitSignatureState.BadEmail">
            <summary>
            Invalid email used for signing
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.GitSignatureState.UnverifiedEmail">
            <summary>
            Email used for signing unverified on GitHub
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.GitSignatureState.NoUser">
            <summary>
            Email used for signing not known to GitHub
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.GitSignatureState.UnknownSigType">
            <summary>
            Unknown signature type
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.GitSignatureState.Unsigned">
            <summary>
            Unsigned
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.GitSignatureState.GpgverifyUnavailable">
            <summary>
            Internal error - the GPG verification service is unavailable at the moment
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.GitSignatureState.GpgverifyError">
            <summary>
            Internal error - the GPG verification service misbehaved
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.GitSignatureState.NotSigningKey">
            <summary>
            The usage flags for the key that signed this don't allow signing
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.GitSignatureState.ExpiredKey">
            <summary>
            Signing key expired
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.GitSignatureState.OcspPending">
            <summary>
            Valid signature, pending certificate revocation checking
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.GitSignatureState.OcspError">
            <summary>
            Valid signature, though certificate revocation check failed
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.GitSignatureState.BadCert">
            <summary>
            The signing certificate or its chain could not be verified
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.GitSignatureState.OcspRevoked">
            <summary>
            One or more certificates in chain has been revoked
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.GpgSignature">
            <summary>
            Represents a GPG signature on a Commit or Tag.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GpgSignature.Email">
            <summary>
            Email used to sign this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GpgSignature.IsValid">
            <summary>
            True if the signature is valid and verified by GitHub.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GpgSignature.KeyId">
            <summary>
            Hex-encoded ID of the key that signed this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GpgSignature.Payload">
            <summary>
            Payload for GPG signing object. Raw ODB object without the signature header.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GpgSignature.Signature">
            <summary>
            ASCII-armored signature header from object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GpgSignature.Signer">
            <summary>
            GitHub user corresponding to the email signing this commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GpgSignature.State">
            <summary>
            The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GpgSignature.WasSignedByGitHub">
            <summary>
            True if the signature was made with GitHub's signing key.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.GrantEnterpriseOrganizationsMigratorRoleInput">
            <summary>
            Autogenerated input type of GrantEnterpriseOrganizationsMigratorRole
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GrantEnterpriseOrganizationsMigratorRoleInput.EnterpriseId">
            <summary>
            The ID of the enterprise to which all organizations managed by it will be granted the migrator role.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GrantEnterpriseOrganizationsMigratorRoleInput.Login">
            <summary>
            The login of the user to grant the migrator role
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GrantEnterpriseOrganizationsMigratorRoleInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.GrantEnterpriseOrganizationsMigratorRolePayload">
            <summary>
            Autogenerated return type of GrantEnterpriseOrganizationsMigratorRole
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GrantEnterpriseOrganizationsMigratorRolePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.GrantEnterpriseOrganizationsMigratorRolePayload.Organizations(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The organizations that had the migrator role applied to for the given user.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.GrantMigratorRoleInput">
            <summary>
            Autogenerated input type of GrantMigratorRole
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GrantMigratorRoleInput.OrganizationId">
            <summary>
            The ID of the organization that the user/team belongs to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GrantMigratorRoleInput.Actor">
            <summary>
            The user login or Team slug to grant the migrator role.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GrantMigratorRoleInput.ActorType">
            <summary>
            Specifies the type of the actor, can be either USER or TEAM.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GrantMigratorRoleInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.GrantMigratorRolePayload">
            <summary>
            Autogenerated return type of GrantMigratorRole
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GrantMigratorRolePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.GrantMigratorRolePayload.Success">
            <summary>
            Did the operation succeed?
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.HeadRefDeletedEvent">
            <summary>
            Represents a 'head_ref_deleted' event on a given pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.HeadRefDeletedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.HeadRefDeletedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.HeadRefDeletedEvent.HeadRef">
            <summary>
            Identifies the Ref associated with the `head_ref_deleted` event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.HeadRefDeletedEvent.HeadRefName">
            <summary>
            Identifies the name of the Ref associated with the `head_ref_deleted` event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.HeadRefDeletedEvent.PullRequest">
            <summary>
            PullRequest referenced by event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.HeadRefForcePushedEvent">
            <summary>
            Represents a 'head_ref_force_pushed' event on a given pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.HeadRefForcePushedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.HeadRefForcePushedEvent.AfterCommit">
            <summary>
            Identifies the after commit SHA for the 'head_ref_force_pushed' event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.HeadRefForcePushedEvent.BeforeCommit">
            <summary>
            Identifies the before commit SHA for the 'head_ref_force_pushed' event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.HeadRefForcePushedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.HeadRefForcePushedEvent.PullRequest">
            <summary>
            PullRequest referenced by event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.HeadRefForcePushedEvent.Ref">
            <summary>
            Identifies the fully qualified ref name for the 'head_ref_force_pushed' event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.HeadRefRestoredEvent">
            <summary>
            Represents a 'head_ref_restored' event on a given pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.HeadRefRestoredEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.HeadRefRestoredEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.HeadRefRestoredEvent.PullRequest">
            <summary>
            PullRequest referenced by event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Hovercard">
            <summary>
            Detail needed to display a hovercard for a user
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Hovercard.Contexts">
            <summary>
            Each of the contexts for this hovercard
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IHovercardContext">
            <summary>
            An individual line of a hovercard
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IHovercardContext.Message">
            <summary>
            A string describing this context
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IHovercardContext.Octicon">
            <summary>
            An octicon to accompany this context
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IdentityProviderConfigurationState">
            <summary>
            The possible states in which authentication can be configured with an identity provider.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IdentityProviderConfigurationState.Enforced">
            <summary>
            Authentication with an identity provider is configured and enforced.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IdentityProviderConfigurationState.Configured">
            <summary>
            Authentication with an identity provider is configured but not enforced.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IdentityProviderConfigurationState.Unconfigured">
            <summary>
            Authentication with an identity provider is not configured.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.InviteEnterpriseAdminInput">
            <summary>
            Autogenerated input type of InviteEnterpriseAdmin
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.InviteEnterpriseAdminInput.EnterpriseId">
            <summary>
            The ID of the enterprise to which you want to invite an administrator.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.InviteEnterpriseAdminInput.Invitee">
            <summary>
            The login of a user to invite as an administrator.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.InviteEnterpriseAdminInput.Email">
            <summary>
            The email of the person to invite as an administrator.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.InviteEnterpriseAdminInput.Role">
            <summary>
            The role of the administrator.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.InviteEnterpriseAdminInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.InviteEnterpriseAdminPayload">
            <summary>
            Autogenerated return type of InviteEnterpriseAdmin
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.InviteEnterpriseAdminPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.InviteEnterpriseAdminPayload.Invitation">
            <summary>
            The created enterprise administrator invitation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IpAllowListEnabledSettingValue">
            <summary>
            The possible values for the IP allow list enabled setting.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IpAllowListEnabledSettingValue.Enabled">
            <summary>
            The setting is enabled for the owner.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IpAllowListEnabledSettingValue.Disabled">
            <summary>
            The setting is disabled for the owner.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IpAllowListEntry">
            <summary>
            An IP address or range of addresses that is allowed to access an owner's resources.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IpAllowListEntry.AllowListValue">
            <summary>
            A single IP address or range of IP addresses in CIDR notation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IpAllowListEntry.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IpAllowListEntry.IsActive">
            <summary>
            Whether the entry is currently active.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IpAllowListEntry.Name">
            <summary>
            The name of the IP allow list entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IpAllowListEntry.Owner">
            <summary>
            The owner of the IP allow list entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IpAllowListEntry.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IpAllowListEntryConnection">
            <summary>
            The connection type for IpAllowListEntry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IpAllowListEntryConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IpAllowListEntryConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IpAllowListEntryConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IpAllowListEntryConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IpAllowListEntryEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IpAllowListEntryEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IpAllowListEntryEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IpAllowListEntryOrder">
            <summary>
            Ordering options for IP allow list entry connections.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IpAllowListEntryOrder.Field">
            <summary>
            The field to order IP allow list entries by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IpAllowListEntryOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IpAllowListEntryOrderField">
            <summary>
            Properties by which IP allow list entry connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IpAllowListEntryOrderField.CreatedAt">
            <summary>
            Order IP allow list entries by creation time.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IpAllowListEntryOrderField.AllowListValue">
            <summary>
            Order IP allow list entries by the allow list value.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IpAllowListForInstalledAppsEnabledSettingValue">
            <summary>
            The possible values for the IP allow list configuration for installed GitHub Apps setting.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IpAllowListForInstalledAppsEnabledSettingValue.Enabled">
            <summary>
            The setting is enabled for the owner.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IpAllowListForInstalledAppsEnabledSettingValue.Disabled">
            <summary>
            The setting is disabled for the owner.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IpAllowListOwner">
            <summary>
            Types that can own an IP allow list.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IpAllowListOwner.Selector`1.App(System.Func{Octokit.GraphQL.Model.App,`0})">
            <summary>
            A GitHub App.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IpAllowListOwner.Selector`1.Enterprise(System.Func{Octokit.GraphQL.Model.Enterprise,`0})">
            <summary>
            An account to manage multiple organizations with consolidated policy and billing.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IpAllowListOwner.Selector`1.Organization(System.Func{Octokit.GraphQL.Model.Organization,`0})">
            <summary>
            An account on GitHub, with one or more owners, that has repositories, members and teams.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Issue">
            <summary>
            An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.ActiveLockReason">
            <summary>
            Reason that the conversation was locked.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Issue.Assignees(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of Users assigned to this object.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.Author">
            <summary>
            The actor who authored the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.AuthorAssociation">
            <summary>
            Author's association with the subject of the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.Body">
            <summary>
            Identifies the body of the issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.BodyHTML">
            <summary>
            The body rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.BodyResourcePath">
            <summary>
            The http path for this issue body
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.BodyText">
            <summary>
            Identifies the body of the issue rendered to text.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.BodyUrl">
            <summary>
            The http URL for this issue body
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.Closed">
            <summary>
            Indicates if the object is closed (definition of closed may depend on type)
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.ClosedAt">
            <summary>
            Identifies the date and time when the object was closed.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Issue.Comments(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.IssueCommentOrder}})">
            <summary>
            A list of comments associated with the Issue.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for issue comments returned from the connection.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.CreatedViaEmail">
            <summary>
            Check if this comment was created via an email reply.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.Editor">
            <summary>
            The actor who edited the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.FullDatabaseId">
            <summary>
            Identifies the primary key from the database as a BigInt.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Issue.Hovercard(System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            The hovercard information for this issue
            </summary>
            <param name="includeNotificationContexts">Whether or not to include notification contexts</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.IncludesCreatedEdit">
            <summary>
            Check if this comment was edited and includes an edit with the creation data
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.IsPinned">
            <summary>
            Indicates whether or not this issue is currently pinned to the repository issues list
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.IsReadByViewer">
            <summary>
            Is this issue read by the viewer
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Issue.Labels(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.LabelOrder}})">
            <summary>
            A list of labels associated with the object.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for labels returned from the connection.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.LastEditedAt">
            <summary>
            The moment the editor made the last edit
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Issue.LinkedBranches(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            Branches linked to this issue.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.Locked">
            <summary>
            `true` if the object is locked
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.Milestone">
            <summary>
            Identifies the milestone associated with the issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.Number">
            <summary>
            Identifies the issue number.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Issue.Participants(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of Users that are participating in the Issue conversation.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Issue.ProjectCards(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.Nullable{Octokit.GraphQL.Model.ProjectCardArchivedState}}}})">
            <summary>
            List of project cards associated with this issue.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="archivedStates">A list of archived states to filter the cards by</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Issue.ProjectItems(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            List of project items associated with this issue.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="includeArchived">Include archived items.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Issue.ProjectV2(Octokit.GraphQL.Core.Arg{System.Int32})">
            <summary>
            Find a project by number.
            </summary>
            <param name="number">The project number.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Issue.ProjectsV2(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ProjectV2Order}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of projects under the owner.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">How to order the returned projects.</param>
            <param name="query">A project to search for under the the owner.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.PublishedAt">
            <summary>
            Identifies when the comment was published at.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.ReactionGroups">
            <summary>
            A list of reactions grouped by content left on the subject.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Issue.Reactions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionContent}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionOrder}})">
            <summary>
            A list of Reactions left on the Issue.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="content">Allows filtering Reactions by emoji.</param>
            <param name="orderBy">Allows specifying the order in which reactions are returned.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.Repository">
            <summary>
            The repository associated with this node.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.ResourcePath">
            <summary>
            The HTTP path for this issue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.State">
            <summary>
            Identifies the state of the issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.StateReason">
            <summary>
            Identifies the reason for the issue state.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Issue.Timeline(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.DateTimeOffset}})">
            <summary>
            A list of events, comments, commits, etc. associated with the issue.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="since">Allows filtering timeline events by a `since` timestamp.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Issue.TimelineItems(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.IssueTimelineItemsItemType}}},System.Nullable{Octokit.GraphQL.Core.Arg{System.DateTimeOffset}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            A list of events, comments, commits, etc. associated with the issue.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="itemTypes">Filter timeline items by type.</param>
            <param name="since">Filter timeline items by a `since` timestamp.</param>
            <param name="skip">Skips the first _n_ elements in the list.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.Title">
            <summary>
            Identifies the issue title.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.TitleHTML">
            <summary>
            Identifies the issue title rendered to HTML.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Issue.TrackedInIssues(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of issues that track this issue
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Issue.TrackedIssues(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of issues tracked inside the current issue
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Issue.TrackedIssuesCount(System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.Nullable{Octokit.GraphQL.Model.TrackedIssueStates}}}})">
            <summary>
            The number of tracked issues for this issue
            </summary>
            <param name="states">Limit the count to tracked issues with the specified states.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.Url">
            <summary>
            The HTTP URL for this issue
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Issue.UserContentEdits(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of edits to this content.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.ViewerCanClose">
            <summary>
            Indicates if the object can be closed by the viewer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.ViewerCanDelete">
            <summary>
            Check if the current viewer can delete this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.ViewerCanReact">
            <summary>
            Can user react to this subject
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.ViewerCanReopen">
            <summary>
            Indicates if the object can be reopened by the viewer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.ViewerCanSubscribe">
            <summary>
            Check if the viewer is able to change their subscription status for the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.ViewerCanUpdate">
            <summary>
            Check if the current viewer can update this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.ViewerCannotUpdateReasons">
            <summary>
            Reasons why the current viewer can not update this comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.ViewerDidAuthor">
            <summary>
            Did the viewer author this comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Issue.ViewerSubscription">
            <summary>
            Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IssueClosedStateReason">
            <summary>
            The possible state reasons of a closed issue.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueClosedStateReason.Completed">
            <summary>
            An issue that has been closed as completed
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueClosedStateReason.NotPlanned">
            <summary>
            An issue that has been closed as not planned
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IssueComment">
            <summary>
            Represents a comment on an Issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.Author">
            <summary>
            The actor who authored the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.AuthorAssociation">
            <summary>
            Author's association with the subject of the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.Body">
            <summary>
            The body as Markdown.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.BodyHTML">
            <summary>
            The body rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.BodyText">
            <summary>
            The body rendered to text.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.CreatedViaEmail">
            <summary>
            Check if this comment was created via an email reply.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.Editor">
            <summary>
            The actor who edited the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.FullDatabaseId">
            <summary>
            Identifies the primary key from the database as a BigInt.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.IncludesCreatedEdit">
            <summary>
            Check if this comment was edited and includes an edit with the creation data
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.IsMinimized">
            <summary>
            Returns whether or not a comment has been minimized.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.Issue">
            <summary>
            Identifies the issue associated with the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.LastEditedAt">
            <summary>
            The moment the editor made the last edit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.MinimizedReason">
            <summary>
            Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.PublishedAt">
            <summary>
            Identifies when the comment was published at.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.PullRequest">
            <summary>
            Returns the pull request associated with the comment, if this comment was made on a
            pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.ReactionGroups">
            <summary>
            A list of reactions grouped by content left on the subject.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueComment.Reactions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionContent}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionOrder}})">
            <summary>
            A list of Reactions left on the Issue.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="content">Allows filtering Reactions by emoji.</param>
            <param name="orderBy">Allows specifying the order in which reactions are returned.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.Repository">
            <summary>
            The repository associated with this node.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.ResourcePath">
            <summary>
            The HTTP path for this issue comment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.Url">
            <summary>
            The HTTP URL for this issue comment
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueComment.UserContentEdits(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of edits to this content.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.ViewerCanDelete">
            <summary>
            Check if the current viewer can delete this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.ViewerCanMinimize">
            <summary>
            Check if the current viewer can minimize this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.ViewerCanReact">
            <summary>
            Can user react to this subject
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.ViewerCanUpdate">
            <summary>
            Check if the current viewer can update this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.ViewerCannotUpdateReasons">
            <summary>
            Reasons why the current viewer can not update this comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueComment.ViewerDidAuthor">
            <summary>
            Did the viewer author this comment.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IssueCommentConnection">
            <summary>
            The connection type for IssueComment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueCommentConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueCommentConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueCommentConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueCommentConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IssueCommentEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueCommentEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueCommentEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IssueCommentOrder">
            <summary>
            Ways in which lists of issue comments can be ordered upon return.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueCommentOrder.Field">
            <summary>
            The field in which to order issue comments by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueCommentOrder.Direction">
            <summary>
            The direction in which to order issue comments by the specified field.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IssueCommentOrderField">
            <summary>
            Properties by which issue comment connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueCommentOrderField.UpdatedAt">
            <summary>
            Order issue comments by update time
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IssueConnection">
            <summary>
            The connection type for Issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IssueContributionsByRepository">
            <summary>
            This aggregates issues opened by a user within one repository.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueContributionsByRepository.Contributions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ContributionOrder}})">
            <summary>
            The issue contributions.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for contributions returned from the connection.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueContributionsByRepository.Repository">
            <summary>
            The repository in which the issues were opened.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IssueEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IssueFilters">
            <summary>
            Ways in which to filter lists of issues.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueFilters.Assignee">
            <summary>
            List issues assigned to given name. Pass in `null` for issues with no assigned user, and `*` for issues assigned to any user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueFilters.CreatedBy">
            <summary>
            List issues created by given name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueFilters.Labels">
            <summary>
            List issues where the list of label names exist on the issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueFilters.Mentioned">
            <summary>
            List issues where the given name is mentioned in the issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueFilters.Milestone">
            <summary>
            List issues by given milestone argument. If an string representation of an integer is passed, it should refer to a milestone by its database ID. Pass in `null` for issues with no milestone, and `*` for issues that are assigned to any milestone.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueFilters.MilestoneNumber">
            <summary>
            List issues by given milestone argument. If an string representation of an integer is passed, it should refer to a milestone by its number field. Pass in `null` for issues with no milestone, and `*` for issues that are assigned to any milestone.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueFilters.Since">
            <summary>
            List issues that have been updated at or after the given date.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueFilters.States">
            <summary>
            List issues filtered by the list of states given.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueFilters.ViewerSubscribed">
            <summary>
            List issues subscribed to by viewer.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IssueOrder">
            <summary>
            Ways in which lists of issues can be ordered upon return.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueOrder.Field">
            <summary>
            The field in which to order issues by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueOrder.Direction">
            <summary>
            The direction in which to order issues by the specified field.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IssueOrderField">
            <summary>
            Properties by which issue connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueOrderField.CreatedAt">
            <summary>
            Order issues by creation time
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueOrderField.UpdatedAt">
            <summary>
            Order issues by update time
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueOrderField.Comments">
            <summary>
            Order issues by comment count
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IssueOrPullRequest">
            <summary>
            Used for return value of Repository.issueOrPullRequest.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueOrPullRequest.Selector`1.Issue(System.Func{Octokit.GraphQL.Model.Issue,`0})">
            <summary>
            An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueOrPullRequest.Selector`1.PullRequest(System.Func{Octokit.GraphQL.Model.PullRequest,`0})">
            <summary>
            A repository pull request.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IssueState">
            <summary>
            The possible states of an issue.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueState.Open">
            <summary>
            An issue that is still open
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueState.Closed">
            <summary>
            An issue that has been closed
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IssueStateReason">
            <summary>
            The possible state reasons of an issue.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueStateReason.Reopened">
            <summary>
            An issue that has been reopened
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueStateReason.NotPlanned">
            <summary>
            An issue that has been closed as not planned
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueStateReason.Completed">
            <summary>
            An issue that has been closed as completed
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IssueTemplate">
            <summary>
            A repository issue template.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueTemplate.About">
            <summary>
            The template purpose.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTemplate.Assignees(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The suggested assignees.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueTemplate.Body">
            <summary>
            The suggested issue body.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueTemplate.Filename">
            <summary>
            The template filename.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTemplate.Labels(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.LabelOrder}})">
            <summary>
            The suggested issue labels
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for labels returned from the connection.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueTemplate.Name">
            <summary>
            The template name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueTemplate.Title">
            <summary>
            The suggested issue title.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IssueTimelineConnection">
            <summary>
            The connection type for IssueTimelineItem.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueTimelineConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueTimelineConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueTimelineConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueTimelineConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IssueTimelineItem">
            <summary>
            An item in an issue timeline
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItem.Selector`1.AssignedEvent(System.Func{Octokit.GraphQL.Model.AssignedEvent,`0})">
            <summary>
            Represents an 'assigned' event on any assignable object.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItem.Selector`1.ClosedEvent(System.Func{Octokit.GraphQL.Model.ClosedEvent,`0})">
            <summary>
            Represents a 'closed' event on any `Closable`.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItem.Selector`1.Commit(System.Func{Octokit.GraphQL.Model.Commit,`0})">
            <summary>
            Represents a Git commit.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItem.Selector`1.CrossReferencedEvent(System.Func{Octokit.GraphQL.Model.CrossReferencedEvent,`0})">
            <summary>
            Represents a mention made by one issue or pull request to another.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItem.Selector`1.DemilestonedEvent(System.Func{Octokit.GraphQL.Model.DemilestonedEvent,`0})">
            <summary>
            Represents a 'demilestoned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItem.Selector`1.IssueComment(System.Func{Octokit.GraphQL.Model.IssueComment,`0})">
            <summary>
            Represents a comment on an Issue.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItem.Selector`1.LabeledEvent(System.Func{Octokit.GraphQL.Model.LabeledEvent,`0})">
            <summary>
            Represents a 'labeled' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItem.Selector`1.LockedEvent(System.Func{Octokit.GraphQL.Model.LockedEvent,`0})">
            <summary>
            Represents a 'locked' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItem.Selector`1.MilestonedEvent(System.Func{Octokit.GraphQL.Model.MilestonedEvent,`0})">
            <summary>
            Represents a 'milestoned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItem.Selector`1.ReferencedEvent(System.Func{Octokit.GraphQL.Model.ReferencedEvent,`0})">
            <summary>
            Represents a 'referenced' event on a given `ReferencedSubject`.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItem.Selector`1.RenamedTitleEvent(System.Func{Octokit.GraphQL.Model.RenamedTitleEvent,`0})">
            <summary>
            Represents a 'renamed' event on a given issue or pull request
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItem.Selector`1.ReopenedEvent(System.Func{Octokit.GraphQL.Model.ReopenedEvent,`0})">
            <summary>
            Represents a 'reopened' event on any `Closable`.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItem.Selector`1.SubscribedEvent(System.Func{Octokit.GraphQL.Model.SubscribedEvent,`0})">
            <summary>
            Represents a 'subscribed' event on a given `Subscribable`.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItem.Selector`1.TransferredEvent(System.Func{Octokit.GraphQL.Model.TransferredEvent,`0})">
            <summary>
            Represents a 'transferred' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItem.Selector`1.UnassignedEvent(System.Func{Octokit.GraphQL.Model.UnassignedEvent,`0})">
            <summary>
            Represents an 'unassigned' event on any assignable object.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItem.Selector`1.UnlabeledEvent(System.Func{Octokit.GraphQL.Model.UnlabeledEvent,`0})">
            <summary>
            Represents an 'unlabeled' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItem.Selector`1.UnlockedEvent(System.Func{Octokit.GraphQL.Model.UnlockedEvent,`0})">
            <summary>
            Represents an 'unlocked' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItem.Selector`1.UnsubscribedEvent(System.Func{Octokit.GraphQL.Model.UnsubscribedEvent,`0})">
            <summary>
            Represents an 'unsubscribed' event on a given `Subscribable`.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItem.Selector`1.UserBlockedEvent(System.Func{Octokit.GraphQL.Model.UserBlockedEvent,`0})">
            <summary>
            Represents a 'user_blocked' event on a given user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IssueTimelineItemEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueTimelineItemEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueTimelineItemEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IssueTimelineItems">
            <summary>
            An item in an issue timeline
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.AddedToProjectEvent(System.Func{Octokit.GraphQL.Model.AddedToProjectEvent,`0})">
            <summary>
            Represents a 'added_to_project' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.AssignedEvent(System.Func{Octokit.GraphQL.Model.AssignedEvent,`0})">
            <summary>
            Represents an 'assigned' event on any assignable object.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.ClosedEvent(System.Func{Octokit.GraphQL.Model.ClosedEvent,`0})">
            <summary>
            Represents a 'closed' event on any `Closable`.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.CommentDeletedEvent(System.Func{Octokit.GraphQL.Model.CommentDeletedEvent,`0})">
            <summary>
            Represents a 'comment_deleted' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.ConnectedEvent(System.Func{Octokit.GraphQL.Model.ConnectedEvent,`0})">
            <summary>
            Represents a 'connected' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.ConvertedNoteToIssueEvent(System.Func{Octokit.GraphQL.Model.ConvertedNoteToIssueEvent,`0})">
            <summary>
            Represents a 'converted_note_to_issue' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.ConvertedToDiscussionEvent(System.Func{Octokit.GraphQL.Model.ConvertedToDiscussionEvent,`0})">
            <summary>
            Represents a 'converted_to_discussion' event on a given issue.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.CrossReferencedEvent(System.Func{Octokit.GraphQL.Model.CrossReferencedEvent,`0})">
            <summary>
            Represents a mention made by one issue or pull request to another.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.DemilestonedEvent(System.Func{Octokit.GraphQL.Model.DemilestonedEvent,`0})">
            <summary>
            Represents a 'demilestoned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.DisconnectedEvent(System.Func{Octokit.GraphQL.Model.DisconnectedEvent,`0})">
            <summary>
            Represents a 'disconnected' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.IssueComment(System.Func{Octokit.GraphQL.Model.IssueComment,`0})">
            <summary>
            Represents a comment on an Issue.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.LabeledEvent(System.Func{Octokit.GraphQL.Model.LabeledEvent,`0})">
            <summary>
            Represents a 'labeled' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.LockedEvent(System.Func{Octokit.GraphQL.Model.LockedEvent,`0})">
            <summary>
            Represents a 'locked' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.MarkedAsDuplicateEvent(System.Func{Octokit.GraphQL.Model.MarkedAsDuplicateEvent,`0})">
            <summary>
            Represents a 'marked_as_duplicate' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.MentionedEvent(System.Func{Octokit.GraphQL.Model.MentionedEvent,`0})">
            <summary>
            Represents a 'mentioned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.MilestonedEvent(System.Func{Octokit.GraphQL.Model.MilestonedEvent,`0})">
            <summary>
            Represents a 'milestoned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.MovedColumnsInProjectEvent(System.Func{Octokit.GraphQL.Model.MovedColumnsInProjectEvent,`0})">
            <summary>
            Represents a 'moved_columns_in_project' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.PinnedEvent(System.Func{Octokit.GraphQL.Model.PinnedEvent,`0})">
            <summary>
            Represents a 'pinned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.ReferencedEvent(System.Func{Octokit.GraphQL.Model.ReferencedEvent,`0})">
            <summary>
            Represents a 'referenced' event on a given `ReferencedSubject`.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.RemovedFromProjectEvent(System.Func{Octokit.GraphQL.Model.RemovedFromProjectEvent,`0})">
            <summary>
            Represents a 'removed_from_project' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.RenamedTitleEvent(System.Func{Octokit.GraphQL.Model.RenamedTitleEvent,`0})">
            <summary>
            Represents a 'renamed' event on a given issue or pull request
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.ReopenedEvent(System.Func{Octokit.GraphQL.Model.ReopenedEvent,`0})">
            <summary>
            Represents a 'reopened' event on any `Closable`.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.SubscribedEvent(System.Func{Octokit.GraphQL.Model.SubscribedEvent,`0})">
            <summary>
            Represents a 'subscribed' event on a given `Subscribable`.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.TransferredEvent(System.Func{Octokit.GraphQL.Model.TransferredEvent,`0})">
            <summary>
            Represents a 'transferred' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.UnassignedEvent(System.Func{Octokit.GraphQL.Model.UnassignedEvent,`0})">
            <summary>
            Represents an 'unassigned' event on any assignable object.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.UnlabeledEvent(System.Func{Octokit.GraphQL.Model.UnlabeledEvent,`0})">
            <summary>
            Represents an 'unlabeled' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.UnlockedEvent(System.Func{Octokit.GraphQL.Model.UnlockedEvent,`0})">
            <summary>
            Represents an 'unlocked' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.UnmarkedAsDuplicateEvent(System.Func{Octokit.GraphQL.Model.UnmarkedAsDuplicateEvent,`0})">
            <summary>
            Represents an 'unmarked_as_duplicate' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.UnpinnedEvent(System.Func{Octokit.GraphQL.Model.UnpinnedEvent,`0})">
            <summary>
            Represents an 'unpinned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.UnsubscribedEvent(System.Func{Octokit.GraphQL.Model.UnsubscribedEvent,`0})">
            <summary>
            Represents an 'unsubscribed' event on a given `Subscribable`.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IssueTimelineItems.Selector`1.UserBlockedEvent(System.Func{Octokit.GraphQL.Model.UserBlockedEvent,`0})">
            <summary>
            Represents a 'user_blocked' event on a given user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IssueTimelineItemsConnection">
            <summary>
            The connection type for IssueTimelineItems.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueTimelineItemsConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueTimelineItemsConnection.FilteredCount">
            <summary>
            Identifies the count of items after applying `before` and `after` filters.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueTimelineItemsConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueTimelineItemsConnection.PageCount">
            <summary>
            Identifies the count of items after applying `before`/`after` filters and `first`/`last`/`skip` slicing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueTimelineItemsConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueTimelineItemsConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueTimelineItemsConnection.UpdatedAt">
            <summary>
            Identifies the date and time when the timeline was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IssueTimelineItemsEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueTimelineItemsEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IssueTimelineItemsEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IssueTimelineItemsItemType">
            <summary>
            The possible item types found in a timeline.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.IssueComment">
            <summary>
            Represents a comment on an Issue.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.CrossReferencedEvent">
            <summary>
            Represents a mention made by one issue or pull request to another.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.AddedToProjectEvent">
            <summary>
            Represents a 'added_to_project' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.AssignedEvent">
            <summary>
            Represents an 'assigned' event on any assignable object.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.ClosedEvent">
            <summary>
            Represents a 'closed' event on any `Closable`.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.CommentDeletedEvent">
            <summary>
            Represents a 'comment_deleted' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.ConnectedEvent">
            <summary>
            Represents a 'connected' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.ConvertedNoteToIssueEvent">
            <summary>
            Represents a 'converted_note_to_issue' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.ConvertedToDiscussionEvent">
            <summary>
            Represents a 'converted_to_discussion' event on a given issue.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.DemilestonedEvent">
            <summary>
            Represents a 'demilestoned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.DisconnectedEvent">
            <summary>
            Represents a 'disconnected' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.LabeledEvent">
            <summary>
            Represents a 'labeled' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.LockedEvent">
            <summary>
            Represents a 'locked' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.MarkedAsDuplicateEvent">
            <summary>
            Represents a 'marked_as_duplicate' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.MentionedEvent">
            <summary>
            Represents a 'mentioned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.MilestonedEvent">
            <summary>
            Represents a 'milestoned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.MovedColumnsInProjectEvent">
            <summary>
            Represents a 'moved_columns_in_project' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.PinnedEvent">
            <summary>
            Represents a 'pinned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.ReferencedEvent">
            <summary>
            Represents a 'referenced' event on a given `ReferencedSubject`.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.RemovedFromProjectEvent">
            <summary>
            Represents a 'removed_from_project' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.RenamedTitleEvent">
            <summary>
            Represents a 'renamed' event on a given issue or pull request
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.ReopenedEvent">
            <summary>
            Represents a 'reopened' event on any `Closable`.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.SubscribedEvent">
            <summary>
            Represents a 'subscribed' event on a given `Subscribable`.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.TransferredEvent">
            <summary>
            Represents a 'transferred' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.UnassignedEvent">
            <summary>
            Represents an 'unassigned' event on any assignable object.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.UnlabeledEvent">
            <summary>
            Represents an 'unlabeled' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.UnlockedEvent">
            <summary>
            Represents an 'unlocked' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.UserBlockedEvent">
            <summary>
            Represents a 'user_blocked' event on a given user.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.UnmarkedAsDuplicateEvent">
            <summary>
            Represents an 'unmarked_as_duplicate' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.UnpinnedEvent">
            <summary>
            Represents an 'unpinned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.IssueTimelineItemsItemType.UnsubscribedEvent">
            <summary>
            Represents an 'unsubscribed' event on a given `Subscribable`.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.JoinedGitHubContribution">
            <summary>
            Represents a user signing up for a GitHub account.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.JoinedGitHubContribution.IsRestricted">
            <summary>
            Whether this contribution is associated with a record you do not have access to. For
            example, your own 'first issue' contribution may have been made on a repository you can no
            longer access.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.JoinedGitHubContribution.OccurredAt">
            <summary>
            When this contribution was made.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.JoinedGitHubContribution.ResourcePath">
            <summary>
            The HTTP path for this contribution.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.JoinedGitHubContribution.Url">
            <summary>
            The HTTP URL for this contribution.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.JoinedGitHubContribution.User">
            <summary>
            The user who made this contribution.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Label">
            <summary>
            A label for categorizing Issues, Pull Requests, Milestones, or Discussions with a given Repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Label.Color">
            <summary>
            Identifies the label color.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Label.CreatedAt">
            <summary>
            Identifies the date and time when the label was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Label.Description">
            <summary>
            A brief description of this label.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Label.IsDefault">
            <summary>
            Indicates whether or not this is a default label.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Label.Issues(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.IssueFilters}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.IssueOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.IssueState}}})">
            <summary>
            A list of issues associated with this label.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="filterBy">Filtering options for issues returned from the connection.</param>
            <param name="labels">A list of label names to filter the pull requests by.</param>
            <param name="orderBy">Ordering options for issues returned from the connection.</param>
            <param name="states">A list of states to filter the issues by.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Label.Name">
            <summary>
            Identifies the label name.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Label.PullRequests(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.IssueOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.PullRequestState}}})">
            <summary>
            A list of pull requests associated with this label.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="baseRefName">The base ref name to filter the pull requests by.</param>
            <param name="headRefName">The head ref name to filter the pull requests by.</param>
            <param name="labels">A list of label names to filter the pull requests by.</param>
            <param name="orderBy">Ordering options for pull requests returned from the connection.</param>
            <param name="states">A list of states to filter the pull requests by.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Label.Repository">
            <summary>
            The repository associated with this label.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Label.ResourcePath">
            <summary>
            The HTTP path for this label.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Label.UpdatedAt">
            <summary>
            Identifies the date and time when the label was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Label.Url">
            <summary>
            The HTTP URL for this label.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ILabelable">
            <summary>
            An object that can have labels assigned to it.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ILabelable.Labels(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.LabelOrder}})">
            <summary>
            A list of labels associated with the object.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for labels returned from the connection.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.LabelConnection">
            <summary>
            The connection type for Label.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LabelConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LabelConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LabelConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LabelConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.LabeledEvent">
            <summary>
            Represents a 'labeled' event on a given issue or pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LabeledEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LabeledEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LabeledEvent.Label">
            <summary>
            Identifies the label associated with the 'labeled' event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LabeledEvent.Labelable">
            <summary>
            Identifies the `Labelable` associated with the event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.LabelEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LabelEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LabelEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.LabelOrder">
            <summary>
            Ways in which lists of labels can be ordered upon return.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LabelOrder.Field">
            <summary>
            The field in which to order labels by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LabelOrder.Direction">
            <summary>
            The direction in which to order labels by the specified field.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.LabelOrderField">
            <summary>
            Properties by which label connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.LabelOrderField.Name">
            <summary>
            Order labels by name 
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.LabelOrderField.CreatedAt">
            <summary>
            Order labels by creation time
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Language">
            <summary>
            Represents a given language found in repositories.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Language.Color">
            <summary>
            The color defined for the current language.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Language.Name">
            <summary>
            The name of the current language.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.LanguageConnection">
            <summary>
            A list of languages associated with the parent.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LanguageConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LanguageConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LanguageConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LanguageConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LanguageConnection.TotalSize">
            <summary>
            The total size in bytes of files written in that language.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.LanguageEdge">
            <summary>
            Represents the language of a repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LanguageEdge.Size">
            <summary>
            The number of bytes of code written in the language.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.LanguageOrder">
            <summary>
            Ordering options for language connections.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LanguageOrder.Field">
            <summary>
            The field to order languages by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LanguageOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.LanguageOrderField">
            <summary>
            Properties by which language connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.LanguageOrderField.Size">
            <summary>
            Order languages by the size of all files containing the language
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.License">
            <summary>
            A repository's open source license
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.License.Body">
            <summary>
            The full text of the license
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.License.Conditions">
            <summary>
            The conditions set by the license
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.License.Description">
            <summary>
            A human-readable description of the license
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.License.Featured">
            <summary>
            Whether the license should be featured
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.License.Hidden">
            <summary>
            Whether the license should be displayed in license pickers
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.License.Implementation">
            <summary>
            Instructions on how to implement the license
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.License.Key">
            <summary>
            The lowercased SPDX ID of the license
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.License.Limitations">
            <summary>
            The limitations set by the license
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.License.Name">
            <summary>
            The license full name specified by &lt;https://spdx.org/licenses&gt;
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.License.Nickname">
            <summary>
            Customary short name if applicable (e.g, GPLv3)
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.License.Permissions">
            <summary>
            The permissions set by the license
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.License.PseudoLicense">
            <summary>
            Whether the license is a pseudo-license placeholder (e.g., other, no-license)
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.License.SpdxId">
            <summary>
            Short identifier specified by &lt;https://spdx.org/licenses&gt;
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.License.Url">
            <summary>
            URL to the license on &lt;https://choosealicense.com&gt;
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.LicenseRule">
            <summary>
            Describes a License's conditions, permissions, and limitations
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LicenseRule.Description">
            <summary>
            A description of the rule
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LicenseRule.Key">
            <summary>
            The machine-readable rule key
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LicenseRule.Label">
            <summary>
            The human-readable rule label
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.LinkedBranch">
            <summary>
            A branch linked to an issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LinkedBranch.Ref">
            <summary>
            The branch's ref.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.LinkedBranchConnection">
            <summary>
            The connection type for LinkedBranch.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LinkedBranchConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LinkedBranchConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LinkedBranchConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LinkedBranchConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.LinkedBranchEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LinkedBranchEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LinkedBranchEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.LinkProjectV2ToRepositoryInput">
            <summary>
            Autogenerated input type of LinkProjectV2ToRepository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LinkProjectV2ToRepositoryInput.ProjectId">
            <summary>
            The ID of the project to link to the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LinkProjectV2ToRepositoryInput.RepositoryId">
            <summary>
            The ID of the repository to link to the project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LinkProjectV2ToRepositoryInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.LinkProjectV2ToRepositoryPayload">
            <summary>
            Autogenerated return type of LinkProjectV2ToRepository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LinkProjectV2ToRepositoryPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LinkProjectV2ToRepositoryPayload.Repository">
            <summary>
            The repository the project is linked to.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.LinkProjectV2ToTeamInput">
            <summary>
            Autogenerated input type of LinkProjectV2ToTeam
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LinkProjectV2ToTeamInput.ProjectId">
            <summary>
            The ID of the project to link to the team.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LinkProjectV2ToTeamInput.TeamId">
            <summary>
            The ID of the team to link to the project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LinkProjectV2ToTeamInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.LinkProjectV2ToTeamPayload">
            <summary>
            Autogenerated return type of LinkProjectV2ToTeam
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LinkProjectV2ToTeamPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LinkProjectV2ToTeamPayload.Team">
            <summary>
            The team the project is linked to
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.LinkRepositoryToProjectInput">
            <summary>
            Autogenerated input type of LinkRepositoryToProject
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LinkRepositoryToProjectInput.ProjectId">
            <summary>
            The ID of the Project to link to a Repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LinkRepositoryToProjectInput.RepositoryId">
            <summary>
            The ID of the Repository to link to a Project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LinkRepositoryToProjectInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.LinkRepositoryToProjectPayload">
            <summary>
            Autogenerated return type of LinkRepositoryToProject
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LinkRepositoryToProjectPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LinkRepositoryToProjectPayload.Project">
            <summary>
            The linked Project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LinkRepositoryToProjectPayload.Repository">
            <summary>
            The linked Repository.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ILockable">
            <summary>
            An object that can be locked.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ILockable.ActiveLockReason">
            <summary>
            Reason that the conversation was locked.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ILockable.Locked">
            <summary>
            `true` if the object is locked
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.LockedEvent">
            <summary>
            Represents a 'locked' event on a given issue or pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LockedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LockedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LockedEvent.LockReason">
            <summary>
            Reason that the conversation was locked (optional).
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LockedEvent.Lockable">
            <summary>
            Object that was locked.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.LockLockableInput">
            <summary>
            Autogenerated input type of LockLockable
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LockLockableInput.LockableId">
            <summary>
            ID of the item to be locked.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LockLockableInput.LockReason">
            <summary>
            A reason for why the item will be locked.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LockLockableInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.LockLockablePayload">
            <summary>
            Autogenerated return type of LockLockable
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LockLockablePayload.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LockLockablePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.LockLockablePayload.LockedRecord">
            <summary>
            The item that was locked.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.LockReason">
            <summary>
            The possible reasons that an issue or pull request was locked.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.LockReason.OffTopic">
            <summary>
            The issue or pull request was locked because the conversation was off-topic.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.LockReason.TooHeated">
            <summary>
            The issue or pull request was locked because the conversation was too heated.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.LockReason.Resolved">
            <summary>
            The issue or pull request was locked because the conversation was resolved.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.LockReason.Spam">
            <summary>
            The issue or pull request was locked because the conversation was spam.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Mannequin">
            <summary>
            A placeholder user for attribution of imported data on GitHub.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Mannequin.AvatarUrl(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            A URL pointing to the GitHub App's public avatar.
            </summary>
            <param name="size">The size of the resulting square image.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Mannequin.Claimant">
            <summary>
            The user that has claimed the data attributed to this mannequin.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Mannequin.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Mannequin.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Mannequin.Email">
            <summary>
            The mannequin's email on the source instance.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Mannequin.Login">
            <summary>
            The username of the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Mannequin.ResourcePath">
            <summary>
            The HTML path to this resource.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Mannequin.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Mannequin.Url">
            <summary>
            The URL to this resource.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MannequinConnection">
            <summary>
            The connection type for Mannequin.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MannequinConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MannequinConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MannequinConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MannequinConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MannequinEdge">
            <summary>
            Represents a mannequin.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MannequinEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MannequinEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MannequinOrder">
            <summary>
            Ordering options for mannequins.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MannequinOrder.Field">
            <summary>
            The field to order mannequins by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MannequinOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MannequinOrderField">
            <summary>
            Properties by which mannequins can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MannequinOrderField.Login">
            <summary>
            Order mannequins alphabetically by their source login.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MannequinOrderField.CreatedAt">
            <summary>
            Order mannequins why when they were created.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MarkDiscussionCommentAsAnswerInput">
            <summary>
            Autogenerated input type of MarkDiscussionCommentAsAnswer
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarkDiscussionCommentAsAnswerInput.Id">
            <summary>
            The Node ID of the discussion comment to mark as an answer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarkDiscussionCommentAsAnswerInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MarkDiscussionCommentAsAnswerPayload">
            <summary>
            Autogenerated return type of MarkDiscussionCommentAsAnswer
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarkDiscussionCommentAsAnswerPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarkDiscussionCommentAsAnswerPayload.Discussion">
            <summary>
            The discussion that includes the chosen comment.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MarkedAsDuplicateEvent">
            <summary>
            Represents a 'marked_as_duplicate' event on a given issue or pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarkedAsDuplicateEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarkedAsDuplicateEvent.Canonical">
            <summary>
            The authoritative issue or pull request which has been duplicated by another.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarkedAsDuplicateEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarkedAsDuplicateEvent.Duplicate">
            <summary>
            The issue or pull request which has been marked as a duplicate of another.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarkedAsDuplicateEvent.IsCrossRepository">
            <summary>
            Canonical and duplicate belong to different repositories.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MarketplaceCategory">
            <summary>
            A public description of a Marketplace category.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceCategory.Description">
            <summary>
            The category's description.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceCategory.HowItWorks">
            <summary>
            The technical description of how apps listed in this category work with GitHub.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceCategory.Name">
            <summary>
            The category's name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceCategory.PrimaryListingCount">
            <summary>
            How many Marketplace listings have this as their primary category.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceCategory.ResourcePath">
            <summary>
            The HTTP path for this Marketplace category.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceCategory.SecondaryListingCount">
            <summary>
            How many Marketplace listings have this as their secondary category.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceCategory.Slug">
            <summary>
            The short name of the category used in its URL.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceCategory.Url">
            <summary>
            The HTTP URL for this Marketplace category.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MarketplaceListing">
            <summary>
            A listing in the GitHub integration marketplace.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.App">
            <summary>
            The GitHub App this listing represents.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.CompanyUrl">
            <summary>
            URL to the listing owner's company site.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.ConfigurationResourcePath">
            <summary>
            The HTTP path for configuring access to the listing's integration or OAuth app
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.ConfigurationUrl">
            <summary>
            The HTTP URL for configuring access to the listing's integration or OAuth app
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.DocumentationUrl">
            <summary>
            URL to the listing's documentation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.ExtendedDescription">
            <summary>
            The listing's detailed description.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.ExtendedDescriptionHTML">
            <summary>
            The listing's detailed description rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.FullDescription">
            <summary>
            The listing's introductory description.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.FullDescriptionHTML">
            <summary>
            The listing's introductory description rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.HasPublishedFreeTrialPlans">
            <summary>
            Does this listing have any plans with a free trial?
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.HasTermsOfService">
            <summary>
            Does this listing have a terms of service link?
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.HasVerifiedOwner">
            <summary>
            Whether the creator of the app is a verified org
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.HowItWorks">
            <summary>
            A technical description of how this app works with GitHub.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.HowItWorksHTML">
            <summary>
            The listing's technical description rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.InstallationUrl">
            <summary>
            URL to install the product to the viewer's account or organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.InstalledForViewer">
            <summary>
            Whether this listing's app has been installed for the current viewer
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.IsArchived">
            <summary>
            Whether this listing has been removed from the Marketplace.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.IsDraft">
            <summary>
            Whether this listing is still an editable draft that has not been submitted for review and is not publicly visible in the Marketplace.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.IsPaid">
            <summary>
            Whether the product this listing represents is available as part of a paid plan.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.IsPublic">
            <summary>
            Whether this listing has been approved for display in the Marketplace.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.IsRejected">
            <summary>
            Whether this listing has been rejected by GitHub for display in the Marketplace.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.IsUnverified">
            <summary>
            Whether this listing has been approved for unverified display in the Marketplace.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.IsUnverifiedPending">
            <summary>
            Whether this draft listing has been submitted for review for approval to be unverified in the Marketplace.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.IsVerificationPendingFromDraft">
            <summary>
            Whether this draft listing has been submitted for review from GitHub for approval to be verified in the Marketplace.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.IsVerificationPendingFromUnverified">
            <summary>
            Whether this unverified listing has been submitted for review from GitHub for approval to be verified in the Marketplace.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.IsVerified">
            <summary>
            Whether this listing has been approved for verified display in the Marketplace.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.LogoBackgroundColor">
            <summary>
            The hex color code, without the leading '#', for the logo background.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.MarketplaceListing.LogoUrl(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            URL for the listing's logo image.
            </summary>
            <param name="size">The size in pixels of the resulting square image.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.Name">
            <summary>
            The listing's full name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.NormalizedShortDescription">
            <summary>
            The listing's very short description without a trailing period or ampersands.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.PricingUrl">
            <summary>
            URL to the listing's detailed pricing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.PrimaryCategory">
            <summary>
            The category that best describes the listing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.PrivacyPolicyUrl">
            <summary>
            URL to the listing's privacy policy, may return an empty string for listings that do not require a privacy policy URL.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.ResourcePath">
            <summary>
            The HTTP path for the Marketplace listing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.ScreenshotUrls">
            <summary>
            The URLs for the listing's screenshots.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.SecondaryCategory">
            <summary>
            An alternate category that describes the listing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.ShortDescription">
            <summary>
            The listing's very short description.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.Slug">
            <summary>
            The short name of the listing used in its URL.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.StatusUrl">
            <summary>
            URL to the listing's status page.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.SupportEmail">
            <summary>
            An email address for support for this listing's app.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.SupportUrl">
            <summary>
            Either a URL or an email address for support for this listing's app, may return an empty string for listings that do not require a support URL.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.TermsOfServiceUrl">
            <summary>
            URL to the listing's terms of service.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.Url">
            <summary>
            The HTTP URL for the Marketplace listing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.ViewerCanAddPlans">
            <summary>
            Can the current viewer add plans for this Marketplace listing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.ViewerCanApprove">
            <summary>
            Can the current viewer approve this Marketplace listing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.ViewerCanDelist">
            <summary>
            Can the current viewer delist this Marketplace listing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.ViewerCanEdit">
            <summary>
            Can the current viewer edit this Marketplace listing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.ViewerCanEditCategories">
            <summary>
            Can the current viewer edit the primary and secondary category of this
            Marketplace listing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.ViewerCanEditPlans">
            <summary>
            Can the current viewer edit the plans for this Marketplace listing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.ViewerCanRedraft">
            <summary>
            Can the current viewer return this Marketplace listing to draft state
            so it becomes editable again.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.ViewerCanReject">
            <summary>
            Can the current viewer reject this Marketplace listing by returning it to
            an editable draft state or rejecting it entirely.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.ViewerCanRequestApproval">
            <summary>
            Can the current viewer request this listing be reviewed for display in
            the Marketplace as verified.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.ViewerHasPurchased">
            <summary>
            Indicates whether the current user has an active subscription to this Marketplace listing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.ViewerHasPurchasedForAllOrganizations">
            <summary>
            Indicates if the current user has purchased a subscription to this Marketplace listing
            for all of the organizations the user owns.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListing.ViewerIsListingAdmin">
            <summary>
            Does the current viewer role allow them to administer this Marketplace listing.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MarketplaceListingConnection">
            <summary>
            Look up Marketplace Listings
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListingConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListingConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListingConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListingConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MarketplaceListingEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListingEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarketplaceListingEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MarkFileAsViewedInput">
            <summary>
            Autogenerated input type of MarkFileAsViewed
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarkFileAsViewedInput.PullRequestId">
            <summary>
            The Node ID of the pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarkFileAsViewedInput.Path">
            <summary>
            The path of the file to mark as viewed
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarkFileAsViewedInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MarkFileAsViewedPayload">
            <summary>
            Autogenerated return type of MarkFileAsViewed
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarkFileAsViewedPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarkFileAsViewedPayload.PullRequest">
            <summary>
            The updated pull request.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MarkPullRequestReadyForReviewInput">
            <summary>
            Autogenerated input type of MarkPullRequestReadyForReview
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarkPullRequestReadyForReviewInput.PullRequestId">
            <summary>
            ID of the pull request to be marked as ready for review.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarkPullRequestReadyForReviewInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MarkPullRequestReadyForReviewPayload">
            <summary>
            Autogenerated return type of MarkPullRequestReadyForReview
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarkPullRequestReadyForReviewPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MarkPullRequestReadyForReviewPayload.PullRequest">
            <summary>
            The pull request that is ready for review.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MembersCanDeleteReposClearAuditEntry">
            <summary>
            Audit log entry for a members_can_delete_repos.clear event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposClearAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposClearAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposClearAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposClearAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposClearAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposClearAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposClearAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposClearAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposClearAuditEntry.EnterpriseResourcePath">
            <summary>
            The HTTP path for this enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposClearAuditEntry.EnterpriseSlug">
            <summary>
            The slug of the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposClearAuditEntry.EnterpriseUrl">
            <summary>
            The HTTP URL for this enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposClearAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposClearAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposClearAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposClearAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposClearAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposClearAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposClearAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposClearAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposClearAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MembersCanDeleteReposDisableAuditEntry">
            <summary>
            Audit log entry for a members_can_delete_repos.disable event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposDisableAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposDisableAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposDisableAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposDisableAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposDisableAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposDisableAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposDisableAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposDisableAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposDisableAuditEntry.EnterpriseResourcePath">
            <summary>
            The HTTP path for this enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposDisableAuditEntry.EnterpriseSlug">
            <summary>
            The slug of the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposDisableAuditEntry.EnterpriseUrl">
            <summary>
            The HTTP URL for this enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposDisableAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposDisableAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposDisableAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposDisableAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposDisableAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposDisableAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposDisableAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposDisableAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposDisableAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MembersCanDeleteReposEnableAuditEntry">
            <summary>
            Audit log entry for a members_can_delete_repos.enable event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposEnableAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposEnableAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposEnableAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposEnableAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposEnableAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposEnableAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposEnableAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposEnableAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposEnableAuditEntry.EnterpriseResourcePath">
            <summary>
            The HTTP path for this enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposEnableAuditEntry.EnterpriseSlug">
            <summary>
            The slug of the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposEnableAuditEntry.EnterpriseUrl">
            <summary>
            The HTTP URL for this enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposEnableAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposEnableAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposEnableAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposEnableAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposEnableAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposEnableAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposEnableAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposEnableAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MembersCanDeleteReposEnableAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IMemberStatusable">
            <summary>
            Entities that have members who can set status messages.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IMemberStatusable.MemberStatuses(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UserStatusOrder}})">
            <summary>
            Get the status messages members of this entity have set that are either public or visible only to the organization.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for user statuses returned from the connection.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.MentionedEvent">
            <summary>
            Represents a 'mentioned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MentionedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MentionedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MentionedEvent.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MergeableState">
            <summary>
            Whether or not a PullRequest can be merged.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MergeableState.Mergeable">
            <summary>
            The pull request can be merged.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MergeableState.Conflicting">
            <summary>
            The pull request cannot be merged due to merge conflicts.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MergeableState.Unknown">
            <summary>
            The mergeability of the pull request is still being calculated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MergeBranchInput">
            <summary>
            Autogenerated input type of MergeBranch
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeBranchInput.RepositoryId">
            <summary>
            The Node ID of the Repository containing the base branch that will be modified.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeBranchInput.Base">
            <summary>
            The name of the base branch that the provided head will be merged into.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeBranchInput.Head">
            <summary>
            The head to merge into the base branch. This can be a branch name or a commit GitObjectID.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeBranchInput.CommitMessage">
            <summary>
            Message to use for the merge commit. If omitted, a default will be used.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeBranchInput.AuthorEmail">
            <summary>
            The email address to associate with this commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeBranchInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MergeBranchPayload">
            <summary>
            Autogenerated return type of MergeBranch
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeBranchPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeBranchPayload.MergeCommit">
            <summary>
            The resulting merge Commit.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MergeCommitMessage">
            <summary>
            The possible default commit messages for merges.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MergeCommitMessage.PrTitle">
            <summary>
            Default to the pull request's title.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MergeCommitMessage.PrBody">
            <summary>
            Default to the pull request's body.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MergeCommitMessage.Blank">
            <summary>
            Default to a blank commit message.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MergeCommitTitle">
            <summary>
            The possible default commit titles for merges.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MergeCommitTitle.PrTitle">
            <summary>
            Default to the pull request's title.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MergeCommitTitle.MergeMessage">
            <summary>
            Default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MergedEvent">
            <summary>
            Represents a 'merged' event on a given pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergedEvent.Commit">
            <summary>
            Identifies the commit associated with the `merge` event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergedEvent.MergeRef">
            <summary>
            Identifies the Ref associated with the `merge` event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergedEvent.MergeRefName">
            <summary>
            Identifies the name of the Ref associated with the `merge` event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergedEvent.PullRequest">
            <summary>
            PullRequest referenced by event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergedEvent.ResourcePath">
            <summary>
            The HTTP path for this merged event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergedEvent.Url">
            <summary>
            The HTTP URL for this merged event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MergePullRequestInput">
            <summary>
            Autogenerated input type of MergePullRequest
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergePullRequestInput.PullRequestId">
            <summary>
            ID of the pull request to be merged.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergePullRequestInput.CommitHeadline">
            <summary>
            Commit headline to use for the merge commit; if omitted, a default message will be used.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergePullRequestInput.CommitBody">
            <summary>
            Commit body to use for the merge commit; if omitted, a default message will be used
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergePullRequestInput.ExpectedHeadOid">
            <summary>
            OID that the pull request head ref must match to allow merge; if omitted, no check is performed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergePullRequestInput.MergeMethod">
            <summary>
            The merge method to use. If omitted, defaults to 'MERGE'
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergePullRequestInput.AuthorEmail">
            <summary>
            The email address to associate with this merge.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergePullRequestInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MergePullRequestPayload">
            <summary>
            Autogenerated return type of MergePullRequest
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergePullRequestPayload.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergePullRequestPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergePullRequestPayload.PullRequest">
            <summary>
            The pull request that was merged.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MergeQueue">
            <summary>
            The queue of pull request entries to be merged into a protected branch in a repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueue.Configuration">
            <summary>
            The configuration for this merge queue
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.MergeQueue.Entries(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The entries in the queue
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueue.NextEntryEstimatedTimeToMerge">
            <summary>
            The estimated time in seconds until a newly added entry would be merged
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueue.Repository">
            <summary>
            The repository this merge queue belongs to
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueue.ResourcePath">
            <summary>
            The HTTP path for this merge queue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueue.Url">
            <summary>
            The HTTP URL for this merge queue
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MergeQueueConfiguration">
            <summary>
            Configuration for a MergeQueue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueConfiguration.CheckResponseTimeout">
            <summary>
            The amount of time in minutes to wait for a check response before considering it a failure.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueConfiguration.MaximumEntriesToBuild">
            <summary>
            The maximum number of entries to build at once.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueConfiguration.MaximumEntriesToMerge">
            <summary>
            The maximum number of entries to merge at once.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueConfiguration.MergeMethod">
            <summary>
            The merge method to use for this queue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueConfiguration.MergingStrategy">
            <summary>
            The strategy to use when merging entries.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueConfiguration.MinimumEntriesToMerge">
            <summary>
            The minimum number of entries required to merge at once.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueConfiguration.MinimumEntriesToMergeWaitTime">
            <summary>
            The amount of time in minutes to wait before ignoring the minumum number of entries in the queue requirement and merging a collection of entries
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MergeQueueEntry">
            <summary>
            Entries in a MergeQueue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueEntry.BaseCommit">
            <summary>
            The base commit for this entry
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueEntry.EnqueuedAt">
            <summary>
            The date and time this entry was added to the merge queue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueEntry.Enqueuer">
            <summary>
            The actor that enqueued this entry
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueEntry.EstimatedTimeToMerge">
            <summary>
            The estimated time in seconds until this entry will be merged
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueEntry.HeadCommit">
            <summary>
            The head commit for this entry
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueEntry.Jump">
            <summary>
            Whether this pull request should jump the queue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueEntry.MergeQueue">
            <summary>
            The merge queue that this entry belongs to
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueEntry.Position">
            <summary>
            The position of this entry in the queue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueEntry.PullRequest">
            <summary>
            The pull request that will be added to a merge group
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueEntry.Solo">
            <summary>
            Does this pull request need to be deployed on its own
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueEntry.State">
            <summary>
            The state of this entry in the queue
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MergeQueueEntryConnection">
            <summary>
            The connection type for MergeQueueEntry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueEntryConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueEntryConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueEntryConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueEntryConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MergeQueueEntryEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueEntryEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MergeQueueEntryEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MergeQueueEntryState">
            <summary>
            The possible states for a merge queue entry.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MergeQueueEntryState.Queued">
            <summary>
            The entry is currently queued.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MergeQueueEntryState.AwaitingChecks">
            <summary>
            The entry is currently waiting for checks to pass.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MergeQueueEntryState.Mergeable">
            <summary>
            The entry is currently mergeable.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MergeQueueEntryState.Unmergeable">
            <summary>
            The entry is currently unmergeable.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MergeQueueEntryState.Locked">
            <summary>
            The entry is currently locked.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MergeQueueMergingStrategy">
            <summary>
            The possible merging strategies for a merge queue.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MergeQueueMergingStrategy.Allgreen">
            <summary>
            Entries only allowed to merge if they are passing.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MergeQueueMergingStrategy.Headgreen">
            <summary>
            Failing Entires are allowed to merge if they are with a passing entry.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IMigration">
            <summary>
            Represents a GitHub Enterprise Importer (GEI) migration.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IMigration.ContinueOnError">
            <summary>
            The migration flag to continue on error.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IMigration.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IMigration.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IMigration.FailureReason">
            <summary>
            The reason the migration failed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IMigration.MigrationLogUrl">
            <summary>
            The URL for the migration log (expires 1 day after migration completes).
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IMigration.MigrationSource">
            <summary>
            The migration source.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IMigration.RepositoryName">
            <summary>
            The target repository name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IMigration.SourceUrl">
            <summary>
            The migration source URL, for example `https://github.com` or `https://monalisa.ghe.com`.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IMigration.State">
            <summary>
            The migration state.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IMigration.WarningsCount">
            <summary>
            The number of warnings encountered for this migration. To review the warnings, check the [Migration Log](https://docs.github.com/en/migrations/using-github-enterprise-importer/completing-your-migration-with-github-enterprise-importer/accessing-your-migration-logs-for-github-enterprise-importer).
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MigrationSource">
            <summary>
            A GitHub Enterprise Importer (GEI) migration source.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MigrationSource.Name">
            <summary>
            The migration source name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MigrationSource.Type">
            <summary>
            The migration source type.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MigrationSource.Url">
            <summary>
            The migration source URL, for example `https://github.com` or `https://monalisa.ghe.com`.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MigrationSourceType">
            <summary>
            Represents the different GitHub Enterprise Importer (GEI) migration sources.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MigrationSourceType.AzureDevops">
            <summary>
            An Azure DevOps migration source.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MigrationSourceType.BitbucketServer">
            <summary>
            A Bitbucket Server migration source.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MigrationSourceType.GithubArchive">
            <summary>
            A GitHub Migration API source.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MigrationState">
            <summary>
            The GitHub Enterprise Importer (GEI) migration state.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MigrationState.NotStarted">
            <summary>
            The migration has not started.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MigrationState.Queued">
            <summary>
            The migration has been queued.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MigrationState.InProgress">
            <summary>
            The migration is in progress.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MigrationState.Succeeded">
            <summary>
            The migration has succeeded.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MigrationState.Failed">
            <summary>
            The migration has failed.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MigrationState.PendingValidation">
            <summary>
            The migration needs to have its credentials validated.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MigrationState.FailedValidation">
            <summary>
            The migration has invalid credentials.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Milestone">
            <summary>
            Represents a Milestone object on a given repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Milestone.Closed">
            <summary>
            Indicates if the object is closed (definition of closed may depend on type)
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Milestone.ClosedAt">
            <summary>
            Identifies the date and time when the object was closed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Milestone.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Milestone.Creator">
            <summary>
            Identifies the actor who created the milestone.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Milestone.Description">
            <summary>
            Identifies the description of the milestone.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Milestone.DueOn">
            <summary>
            Identifies the due date of the milestone.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Milestone.Issues(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.IssueFilters}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.IssueOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.IssueState}}})">
            <summary>
            A list of issues associated with the milestone.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="filterBy">Filtering options for issues returned from the connection.</param>
            <param name="labels">A list of label names to filter the pull requests by.</param>
            <param name="orderBy">Ordering options for issues returned from the connection.</param>
            <param name="states">A list of states to filter the issues by.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Milestone.Number">
            <summary>
            Identifies the number of the milestone.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Milestone.ProgressPercentage">
            <summary>
            Identifies the percentage complete for the milestone
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Milestone.PullRequests(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.IssueOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.PullRequestState}}})">
            <summary>
            A list of pull requests associated with the milestone.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="baseRefName">The base ref name to filter the pull requests by.</param>
            <param name="headRefName">The head ref name to filter the pull requests by.</param>
            <param name="labels">A list of label names to filter the pull requests by.</param>
            <param name="orderBy">Ordering options for pull requests returned from the connection.</param>
            <param name="states">A list of states to filter the pull requests by.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Milestone.Repository">
            <summary>
            The repository associated with this milestone.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Milestone.ResourcePath">
            <summary>
            The HTTP path for this milestone
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Milestone.State">
            <summary>
            Identifies the state of the milestone.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Milestone.Title">
            <summary>
            Identifies the title of the milestone.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Milestone.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Milestone.Url">
            <summary>
            The HTTP URL for this milestone
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Milestone.ViewerCanClose">
            <summary>
            Indicates if the object can be closed by the viewer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Milestone.ViewerCanReopen">
            <summary>
            Indicates if the object can be reopened by the viewer.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MilestoneConnection">
            <summary>
            The connection type for Milestone.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MilestoneConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MilestoneConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MilestoneConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MilestoneConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MilestonedEvent">
            <summary>
            Represents a 'milestoned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MilestonedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MilestonedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MilestonedEvent.MilestoneTitle">
            <summary>
            Identifies the milestone title associated with the 'milestoned' event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MilestonedEvent.Subject">
            <summary>
            Object referenced by event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MilestoneEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MilestoneEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MilestoneEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MilestoneItem">
            <summary>
            Types that can be inside a Milestone.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.MilestoneItem.Selector`1.Issue(System.Func{Octokit.GraphQL.Model.Issue,`0})">
            <summary>
            An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.MilestoneItem.Selector`1.PullRequest(System.Func{Octokit.GraphQL.Model.PullRequest,`0})">
            <summary>
            A repository pull request.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MilestoneOrder">
            <summary>
            Ordering options for milestone connections.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MilestoneOrder.Field">
            <summary>
            The field to order milestones by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MilestoneOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MilestoneOrderField">
            <summary>
            Properties by which milestone connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MilestoneOrderField.DueDate">
            <summary>
            Order milestones by when they are due.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MilestoneOrderField.CreatedAt">
            <summary>
            Order milestones by when they were created.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MilestoneOrderField.UpdatedAt">
            <summary>
            Order milestones by when they were last updated.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MilestoneOrderField.Number">
            <summary>
            Order milestones by their number.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MilestoneState">
            <summary>
            The possible states of a milestone.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MilestoneState.Open">
            <summary>
            A milestone that is still open.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.MilestoneState.Closed">
            <summary>
            A milestone that has been closed.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IMinimizable">
            <summary>
            Entities that can be minimized.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IMinimizable.IsMinimized">
            <summary>
            Returns whether or not a comment has been minimized.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IMinimizable.MinimizedReason">
            <summary>
            Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IMinimizable.ViewerCanMinimize">
            <summary>
            Check if the current viewer can minimize this object.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MinimizeCommentInput">
            <summary>
            Autogenerated input type of MinimizeComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MinimizeCommentInput.SubjectId">
            <summary>
            The Node ID of the subject to modify.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MinimizeCommentInput.Classifier">
            <summary>
            The classification of comment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MinimizeCommentInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MinimizeCommentPayload">
            <summary>
            Autogenerated return type of MinimizeComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MinimizeCommentPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MinimizeCommentPayload.MinimizedComment">
            <summary>
            The comment that was minimized.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MovedColumnsInProjectEvent">
            <summary>
            Represents a 'moved_columns_in_project' event on a given issue or pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MovedColumnsInProjectEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MovedColumnsInProjectEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MovedColumnsInProjectEvent.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MoveProjectCardInput">
            <summary>
            Autogenerated input type of MoveProjectCard
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MoveProjectCardInput.CardId">
            <summary>
            The id of the card to move.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MoveProjectCardInput.ColumnId">
            <summary>
            The id of the column to move it into.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MoveProjectCardInput.AfterCardId">
            <summary>
            Place the new card after the card with this id. Pass null to place it at the top.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MoveProjectCardInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MoveProjectCardPayload">
            <summary>
            Autogenerated return type of MoveProjectCard
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MoveProjectCardPayload.CardEdge">
            <summary>
            The new edge of the moved card.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MoveProjectCardPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MoveProjectColumnInput">
            <summary>
            Autogenerated input type of MoveProjectColumn
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MoveProjectColumnInput.ColumnId">
            <summary>
            The id of the column to move.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MoveProjectColumnInput.AfterColumnId">
            <summary>
            Place the new column after the column with this id. Pass null to place it at the front.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MoveProjectColumnInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.MoveProjectColumnPayload">
            <summary>
            Autogenerated return type of MoveProjectColumn
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MoveProjectColumnPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.MoveProjectColumnPayload.ColumnEdge">
            <summary>
            The new edge of the moved column.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.INode">
            <summary>
            An object with an ID.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.INode.Id">
            <summary>
            ID of the object.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.NotificationRestrictionSettingValue">
            <summary>
            The possible values for the notification restriction setting.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.NotificationRestrictionSettingValue.Enabled">
            <summary>
            The setting is enabled for the owner.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.NotificationRestrictionSettingValue.Disabled">
            <summary>
            The setting is disabled for the owner.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IOauthApplicationAuditEntryData">
            <summary>
            Metadata for an audit entry with action oauth_application.*
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IOauthApplicationAuditEntryData.OauthApplicationName">
            <summary>
            The name of the OAuth Application.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IOauthApplicationAuditEntryData.OauthApplicationResourcePath">
            <summary>
            The HTTP path for the OAuth Application
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IOauthApplicationAuditEntryData.OauthApplicationUrl">
            <summary>
            The HTTP URL for the OAuth Application
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry">
            <summary>
            Audit log entry for a oauth_application.create event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.ApplicationUrl">
            <summary>
            The application URL of the OAuth Application.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.CallbackUrl">
            <summary>
            The callback URL of the OAuth Application.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.OauthApplicationName">
            <summary>
            The name of the OAuth Application.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.OauthApplicationResourcePath">
            <summary>
            The HTTP path for the OAuth Application
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.OauthApplicationUrl">
            <summary>
            The HTTP URL for the OAuth Application
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.RateLimit">
            <summary>
            The rate limit of the OAuth Application.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.State">
            <summary>
            The state of the OAuth Application.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntryState">
            <summary>
            The state of an OAuth Application when it was created.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntryState.Active">
            <summary>
            The OAuth Application was active and allowed to have OAuth Accesses.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntryState.Suspended">
            <summary>
            The OAuth Application was suspended from generating OAuth Accesses due to abuse or security concerns.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OauthApplicationCreateAuditEntryState.PendingDeletion">
            <summary>
            The OAuth Application was in the process of being deleted.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OIDCProvider">
            <summary>
            An OIDC identity provider configured to provision identities for an enterprise. Visible to enterprise owners or enterprise owners' personal access tokens (classic) with read:enterprise or admin:enterprise scope.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OIDCProvider.Enterprise">
            <summary>
            The enterprise this identity provider belongs to.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OIDCProvider.ExternalIdentities(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            ExternalIdentities provisioned by this identity provider.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="login">Filter to external identities with the users login</param>
            <param name="membersOnly">Filter to external identities with valid org membership only</param>
            <param name="userName">Filter to external identities with the users userName/NameID attribute</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.OIDCProvider.ProviderType">
            <summary>
            The OIDC identity provider type
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OIDCProvider.TenantId">
            <summary>
            The id of the tenant this provider is attached to
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OIDCProviderType">
            <summary>
            The OIDC identity provider type
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OIDCProviderType.Aad">
            <summary>
            Azure Active Directory
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OperationType.Access">
            <summary>
            An existing resource was accessed
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OperationType.Authentication">
            <summary>
            A resource performed an authentication event
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OperationType.Create">
            <summary>
            A new resource was created
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OperationType.Modify">
            <summary>
            An existing resource was modified
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OperationType.Remove">
            <summary>
            An existing resource was removed
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OperationType.Restore">
            <summary>
            An existing resource was restored
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OperationType.Transfer">
            <summary>
            An existing resource was transferred between multiple resources
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrderDirection">
            <summary>
            Possible directions in which to order a list of items when provided an `orderBy` argument.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrderDirection.Asc">
            <summary>
            Specifies an ascending order for a given `orderBy` argument.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrderDirection.Desc">
            <summary>
            Specifies a descending order for a given `orderBy` argument.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgAddBillingManagerAuditEntry">
            <summary>
            Audit log entry for a org.add_billing_manager
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddBillingManagerAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddBillingManagerAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddBillingManagerAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddBillingManagerAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddBillingManagerAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddBillingManagerAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddBillingManagerAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddBillingManagerAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddBillingManagerAuditEntry.InvitationEmail">
            <summary>
            The email address used to invite a billing manager for the organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddBillingManagerAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddBillingManagerAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddBillingManagerAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddBillingManagerAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddBillingManagerAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddBillingManagerAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddBillingManagerAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddBillingManagerAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddBillingManagerAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgAddMemberAuditEntry">
            <summary>
            Audit log entry for a org.add_member
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddMemberAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddMemberAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddMemberAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddMemberAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddMemberAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddMemberAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddMemberAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddMemberAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddMemberAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddMemberAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddMemberAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddMemberAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddMemberAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddMemberAuditEntry.Permission">
            <summary>
            The permission level of the member added to the organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddMemberAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddMemberAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddMemberAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgAddMemberAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgAddMemberAuditEntryPermission">
            <summary>
            The permissions available to members on an Organization.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgAddMemberAuditEntryPermission.Read">
            <summary>
            Can read and clone repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgAddMemberAuditEntryPermission.Admin">
            <summary>
            Can read, clone, push, and add collaborators to repositories.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Organization">
            <summary>
            An account on GitHub, with one or more owners, that has repositories, members and teams.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.Announcement">
            <summary>
            The text of the announcement
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.AnnouncementExpiresAt">
            <summary>
            The expiration date of the announcement, if any
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.AnnouncementUserDismissible">
            <summary>
            Whether the announcement can be dismissed by the user
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.AnyPinnableItems(System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.PinnableItemType}})">
            <summary>
            Determine if this repository owner has any items that can be pinned to their profile.
            </summary>
            <param name="type">Filter to only a particular kind of pinnable item.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.AuditLog(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.AuditLogOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            Audit log entries of the organization
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for the returned audit log entries.</param>
            <param name="query">The query string to filter audit entries</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.AvatarUrl(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            A URL pointing to the organization's public avatar.
            </summary>
            <param name="size">The size of the resulting square image.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.Description">
            <summary>
            The organization's public profile description.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.DescriptionHTML">
            <summary>
            The organization's public profile description rendered to HTML.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.Domains(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.VerifiableDomainOrder}})">
            <summary>
            A list of domains owned by the organization.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="isApproved">Filter by if the domain is approved.</param>
            <param name="isVerified">Filter by if the domain is verified.</param>
            <param name="orderBy">Ordering options for verifiable domains returned.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.Email">
            <summary>
            The organization's public email.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.EnterpriseOwners(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.OrgEnterpriseOwnerOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RoleInOrganization}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of owners of the organization's enterprise account.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for enterprise owners returned from the connection.</param>
            <param name="organizationRole">The organization role to filter by.</param>
            <param name="query">The search string to look for.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.EstimatedNextSponsorsPayoutInCents">
            <summary>
            The estimated next GitHub Sponsors payout for this user/organization in cents (USD).
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.HasSponsorsListing">
            <summary>
            True if this user/organization has a GitHub Sponsors listing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.InteractionAbility">
            <summary>
            The interaction ability settings for this organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.IpAllowListEnabledSetting">
            <summary>
            The setting value for whether the organization has an IP allow list enabled.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.IpAllowListEntries(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.IpAllowListEntryOrder}})">
            <summary>
            The IP addresses that are allowed to access resources owned by the organization.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for IP allow list entries returned.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.IpAllowListForInstalledAppsEnabledSetting">
            <summary>
            The setting value for whether the organization has IP allow list configuration for installed GitHub Apps enabled.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.IsSponsoredBy(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Whether the given account is sponsoring this user/organization.
            </summary>
            <param name="accountLogin">The target account's login.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.IsSponsoringViewer">
            <summary>
            True if the viewer is sponsored by this user/organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.IsVerified">
            <summary>
            Whether the organization has verified its profile email and website.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.ItemShowcase">
            <summary>
            Showcases a selection of repositories and gists that the profile owner has either curated or that have been selected automatically based on popularity.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.Location">
            <summary>
            The organization's public profile location.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.Login">
            <summary>
            The organization's login name.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.Mannequins(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.MannequinOrder}})">
            <summary>
            A list of all mannequins for this organization.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for mannequins returned from the connection.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.MemberStatuses(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UserStatusOrder}})">
            <summary>
            Get the status messages members of this entity have set that are either public or visible only to the organization.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for user statuses returned from the connection.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.MembersCanForkPrivateRepositories">
            <summary>
            Members can fork private repositories in this organization
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.MembersWithRole(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of users who are members of this organization.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.MonthlyEstimatedSponsorsIncomeInCents">
            <summary>
            The estimated monthly GitHub Sponsors income for this user/organization in cents (USD).
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.Name">
            <summary>
            The organization's public profile name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.NewTeamResourcePath">
            <summary>
            The HTTP path creating a new team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.NewTeamUrl">
            <summary>
            The HTTP URL creating a new team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.NotificationDeliveryRestrictionEnabledSetting">
            <summary>
            Indicates if email notification delivery for this organization is restricted to verified or approved domains.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.OrganizationBillingEmail">
            <summary>
            The billing email for the organization.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.Packages(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.PackageOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.PackageType}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.ID}})">
            <summary>
            A list of packages under the owner.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="names">Find packages by their names.</param>
            <param name="orderBy">Ordering of the returned packages.</param>
            <param name="packageType">Filter registry package by type.</param>
            <param name="repositoryId">Find packages in a repository by ID.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.PendingMembers(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of users who have been invited to join this organization.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.PinnableItems(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.PinnableItemType}}})">
            <summary>
            A list of repositories and gists this profile owner can pin to their profile.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="types">Filter the types of pinnable items that are returned.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.PinnedItems(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.PinnableItemType}}})">
            <summary>
            A list of repositories and gists this profile owner has pinned to their profile
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="types">Filter the types of pinned items that are returned.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.PinnedItemsRemaining">
            <summary>
            Returns how many more items this profile owner can pin to their profile.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.Project(Octokit.GraphQL.Core.Arg{System.Int32})">
            <summary>
            Find project by number.
            </summary>
            <param name="number">The project number to find.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.ProjectV2(Octokit.GraphQL.Core.Arg{System.Int32})">
            <summary>
            Find a project by number.
            </summary>
            <param name="number">The project number.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.Projects(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ProjectOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.ProjectState}}})">
            <summary>
            A list of projects under the owner.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for projects returned from the connection</param>
            <param name="search">Query to search projects by, currently only searching by name.</param>
            <param name="states">A list of states to filter the projects by.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.ProjectsResourcePath">
            <summary>
            The HTTP path listing organization's projects
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.ProjectsUrl">
            <summary>
            The HTTP URL listing organization's projects
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.ProjectsV2(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ProjectV2Order}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of projects under the owner.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">How to order the returned projects.</param>
            <param name="query">A project to search for under the the owner.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.RecentProjects(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            Recent projects that this user has modified in the context of the owner.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.Repositories(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.Nullable{Octokit.GraphQL.Model.RepositoryAffiliation}}}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RepositoryOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.Nullable{Octokit.GraphQL.Model.RepositoryAffiliation}}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RepositoryPrivacy}})">
            <summary>
            A list of repositories that the user owns.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="affiliations">Array of viewer's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the current viewer owns.</param>
            <param name="isFork">If non-null, filters repositories according to whether they are forks of another repository</param>
            <param name="isLocked">If non-null, filters repositories according to whether they have been locked</param>
            <param name="orderBy">Ordering options for repositories returned from the connection</param>
            <param name="ownerAffiliations">Array of owner's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the organization or user being viewed owns.</param>
            <param name="privacy">If non-null, filters repositories according to privacy</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.Repository(Octokit.GraphQL.Core.Arg{System.String},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            Find Repository.
            </summary>
            <param name="name">Name of Repository to find.</param>
            <param name="followRenames">Follow repository renames. If disabled, a repository referenced by its old name will return an error.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.RepositoryDiscussionComments(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.ID}})">
            <summary>
            Discussion comments this user has authored.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="onlyAnswers">Filter discussion comments to only those that were marked as the answer</param>
            <param name="repositoryId">Filter discussion comments to only those in a specific repository.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.RepositoryDiscussions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DiscussionOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.ID}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.DiscussionState}}})">
            <summary>
            Discussions this user has started.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="answered">Filter discussions to only those that have been answered or not. Defaults to including both answered and unanswered discussions.</param>
            <param name="orderBy">Ordering options for discussions returned from the connection.</param>
            <param name="repositoryId">Filter discussions to only those in a specific repository.</param>
            <param name="states">A list of states to filter the discussions by.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.RepositoryMigrations(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RepositoryMigrationOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.MigrationState}})">
            <summary>
            A list of all repository migrations for this organization.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for repository migrations returned.</param>
            <param name="repositoryName">Filter repository migrations by repository name.</param>
            <param name="state">Filter repository migrations by state.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.RequiresTwoFactorAuthentication">
            <summary>
            When true the organization requires all members, billing managers, and outside collaborators to enable two-factor authentication.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.ResourcePath">
            <summary>
            The HTTP path for this organization.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.Ruleset(Octokit.GraphQL.Core.Arg{System.Int32})">
            <summary>
            Returns a single ruleset from the current organization by ID.
            </summary>
            <param name="databaseId">The ID of the ruleset to be returned.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.Rulesets(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            A list of rulesets for this organization.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="includeParents">Return rulesets configured at higher levels that apply to this organization</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.SamlIdentityProvider">
            <summary>
            The Organization's SAML identity provider. Visible to (1) organization owners, (2) organization owners' personal access tokens (classic) with read:org or admin:org scope, (3) GitHub App with an installation token with read or write access to members.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.Sponsoring(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorOrder}})">
            <summary>
            List of users and organizations this entity is sponsoring.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for the users and organizations returned from the connection.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.Sponsors(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.ID}})">
            <summary>
            List of sponsors for this user or organization.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for sponsors returned from the connection.</param>
            <param name="tierId">If given, will filter for sponsors at the given tier. Will only return sponsors whose tier the viewer is permitted to see.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.SponsorsActivities(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.SponsorsActivityAction}}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorsActivityOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorsActivityPeriod}},System.Nullable{Octokit.GraphQL.Core.Arg{System.DateTimeOffset}},System.Nullable{Octokit.GraphQL.Core.Arg{System.DateTimeOffset}})">
            <summary>
            Events involving this sponsorable, such as new sponsorships.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="actions">Filter activities to only the specified actions.</param>
            <param name="includeAsSponsor">Whether to include those events where this sponsorable acted as the sponsor. Defaults to only including events where this sponsorable was the recipient of a sponsorship.</param>
            <param name="orderBy">Ordering options for activity returned from the connection.</param>
            <param name="period">Filter activities returned to only those that occurred in the most recent specified time period. Set to ALL to avoid filtering by when the activity occurred. Will be ignored if `since` or `until` is given.</param>
            <param name="since">Filter activities to those that occurred on or after this time.</param>
            <param name="until">Filter activities to those that occurred before this time.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.SponsorsListing">
            <summary>
            The GitHub Sponsors listing for this user or organization.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.SponsorshipForViewerAsSponsor(System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            The sponsorship from the viewer to this user/organization; that is, the sponsorship where you're the sponsor.
            </summary>
            <param name="activeOnly">Whether to return the sponsorship only if it's still active. Pass false to get the viewer's sponsorship back even if it has been cancelled.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.SponsorshipForViewerAsSponsorable(System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            The sponsorship from this user/organization to the viewer; that is, the sponsorship you're receiving.
            </summary>
            <param name="activeOnly">Whether to return the sponsorship only if it's still active. Pass false to get the sponsorship back even if it has been cancelled.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.SponsorshipNewsletters(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorshipNewsletterOrder}})">
            <summary>
            List of sponsorship updates sent from this sponsorable to sponsors.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for sponsorship updates returned from the connection.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.SponsorshipsAsMaintainer(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorshipOrder}})">
            <summary>
            The sponsorships where this user or organization is the maintainer receiving the funds.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="activeOnly">Whether to include only sponsorships that are active right now, versus all sponsorships this maintainer has ever received.</param>
            <param name="includePrivate">Whether or not to include private sponsorships in the result set</param>
            <param name="orderBy">Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.SponsorshipsAsSponsor(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorshipOrder}})">
            <summary>
            The sponsorships where this user or organization is the funder.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="activeOnly">Whether to include only sponsorships that are active right now, versus all sponsorships this sponsor has ever made.</param>
            <param name="maintainerLogins">Filter sponsorships returned to those for the specified maintainers. That is, the recipient of the sponsorship is a user or organization with one of the given logins.</param>
            <param name="orderBy">Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.Team(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Find an organization's team by its slug.
            </summary>
            <param name="slug">The name or slug of the team to find.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.Teams(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.TeamNotificationSetting}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.TeamOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.TeamPrivacy}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.TeamRole}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            A list of teams in this organization.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="ldapMapped">If true, filters teams that are mapped to an LDAP Group (Enterprise only)</param>
            <param name="notificationSetting">If non-null, filters teams according to notification setting</param>
            <param name="orderBy">Ordering options for teams returned from the connection</param>
            <param name="privacy">If non-null, filters teams according to privacy</param>
            <param name="query">If non-null, filters teams with query on team name and team slug</param>
            <param name="role">If non-null, filters teams according to whether the viewer is an admin or member on team</param>
            <param name="rootTeamsOnly">If true, restrict to only root teams</param>
            <param name="userLogins">User logins to filter by</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.TeamsResourcePath">
            <summary>
            The HTTP path listing organization's teams
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.TeamsUrl">
            <summary>
            The HTTP URL listing organization's teams
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Organization.TotalSponsorshipAmountAsSponsorInCents(System.Nullable{Octokit.GraphQL.Core.Arg{System.DateTimeOffset}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{System.DateTimeOffset}})">
            <summary>
            The amount in United States cents (e.g., 500 = $5.00 USD) that this entity has spent on GitHub to fund sponsorships. Only returns a value when viewed by the user themselves or by a user who can manage sponsorships for the requested organization.
            </summary>
            <param name="since">Filter payments to those that occurred on or after this time.</param>
            <param name="sponsorableLogins">Filter payments to those made to the users or organizations with the specified usernames.</param>
            <param name="until">Filter payments to those that occurred before this time.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.TwitterUsername">
            <summary>
            The organization's Twitter username.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.Url">
            <summary>
            The HTTP URL for this organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.ViewerCanAdminister">
            <summary>
            Organization is adminable by the viewer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.ViewerCanChangePinnedItems">
            <summary>
            Can the viewer pin repositories and gists to the profile?
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.ViewerCanCreateProjects">
            <summary>
            Can the current viewer create new projects on this owner.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.ViewerCanCreateRepositories">
            <summary>
            Viewer can create repositories on this organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.ViewerCanCreateTeams">
            <summary>
            Viewer can create teams on this organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.ViewerCanSponsor">
            <summary>
            Whether or not the viewer is able to sponsor this user/organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.ViewerIsAMember">
            <summary>
            Viewer is an active member of this organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.ViewerIsFollowing">
            <summary>
            Whether or not this Organization is followed by the viewer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.ViewerIsSponsoring">
            <summary>
            True if the viewer is sponsoring this user/organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.WebCommitSignoffRequired">
            <summary>
            Whether contributors are required to sign off on web-based commits for repositories in this organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Organization.WebsiteUrl">
            <summary>
            The organization's public profile URL.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationAuditEntry">
            <summary>
            An audit entry in an organization audit log.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.MembersCanDeleteReposClearAuditEntry(System.Func{Octokit.GraphQL.Model.MembersCanDeleteReposClearAuditEntry,`0})">
            <summary>
            Audit log entry for a members_can_delete_repos.clear event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.MembersCanDeleteReposDisableAuditEntry(System.Func{Octokit.GraphQL.Model.MembersCanDeleteReposDisableAuditEntry,`0})">
            <summary>
            Audit log entry for a members_can_delete_repos.disable event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.MembersCanDeleteReposEnableAuditEntry(System.Func{Octokit.GraphQL.Model.MembersCanDeleteReposEnableAuditEntry,`0})">
            <summary>
            Audit log entry for a members_can_delete_repos.enable event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OauthApplicationCreateAuditEntry(System.Func{Octokit.GraphQL.Model.OauthApplicationCreateAuditEntry,`0})">
            <summary>
            Audit log entry for a oauth_application.create event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgAddBillingManagerAuditEntry(System.Func{Octokit.GraphQL.Model.OrgAddBillingManagerAuditEntry,`0})">
            <summary>
            Audit log entry for a org.add_billing_manager
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgAddMemberAuditEntry(System.Func{Octokit.GraphQL.Model.OrgAddMemberAuditEntry,`0})">
            <summary>
            Audit log entry for a org.add_member
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgBlockUserAuditEntry(System.Func{Octokit.GraphQL.Model.OrgBlockUserAuditEntry,`0})">
            <summary>
            Audit log entry for a org.block_user
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgConfigDisableCollaboratorsOnlyAuditEntry(System.Func{Octokit.GraphQL.Model.OrgConfigDisableCollaboratorsOnlyAuditEntry,`0})">
            <summary>
            Audit log entry for a org.config.disable_collaborators_only event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgConfigEnableCollaboratorsOnlyAuditEntry(System.Func{Octokit.GraphQL.Model.OrgConfigEnableCollaboratorsOnlyAuditEntry,`0})">
            <summary>
            Audit log entry for a org.config.enable_collaborators_only event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgCreateAuditEntry(System.Func{Octokit.GraphQL.Model.OrgCreateAuditEntry,`0})">
            <summary>
            Audit log entry for a org.create event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgDisableOauthAppRestrictionsAuditEntry(System.Func{Octokit.GraphQL.Model.OrgDisableOauthAppRestrictionsAuditEntry,`0})">
            <summary>
            Audit log entry for a org.disable_oauth_app_restrictions event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgDisableSamlAuditEntry(System.Func{Octokit.GraphQL.Model.OrgDisableSamlAuditEntry,`0})">
            <summary>
            Audit log entry for a org.disable_saml event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgDisableTwoFactorRequirementAuditEntry(System.Func{Octokit.GraphQL.Model.OrgDisableTwoFactorRequirementAuditEntry,`0})">
            <summary>
            Audit log entry for a org.disable_two_factor_requirement event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgEnableOauthAppRestrictionsAuditEntry(System.Func{Octokit.GraphQL.Model.OrgEnableOauthAppRestrictionsAuditEntry,`0})">
            <summary>
            Audit log entry for a org.enable_oauth_app_restrictions event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgEnableSamlAuditEntry(System.Func{Octokit.GraphQL.Model.OrgEnableSamlAuditEntry,`0})">
            <summary>
            Audit log entry for a org.enable_saml event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgEnableTwoFactorRequirementAuditEntry(System.Func{Octokit.GraphQL.Model.OrgEnableTwoFactorRequirementAuditEntry,`0})">
            <summary>
            Audit log entry for a org.enable_two_factor_requirement event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgInviteMemberAuditEntry(System.Func{Octokit.GraphQL.Model.OrgInviteMemberAuditEntry,`0})">
            <summary>
            Audit log entry for a org.invite_member event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgInviteToBusinessAuditEntry(System.Func{Octokit.GraphQL.Model.OrgInviteToBusinessAuditEntry,`0})">
            <summary>
            Audit log entry for a org.invite_to_business event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgOauthAppAccessApprovedAuditEntry(System.Func{Octokit.GraphQL.Model.OrgOauthAppAccessApprovedAuditEntry,`0})">
            <summary>
            Audit log entry for a org.oauth_app_access_approved event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgOauthAppAccessDeniedAuditEntry(System.Func{Octokit.GraphQL.Model.OrgOauthAppAccessDeniedAuditEntry,`0})">
            <summary>
            Audit log entry for a org.oauth_app_access_denied event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgOauthAppAccessRequestedAuditEntry(System.Func{Octokit.GraphQL.Model.OrgOauthAppAccessRequestedAuditEntry,`0})">
            <summary>
            Audit log entry for a org.oauth_app_access_requested event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgRemoveBillingManagerAuditEntry(System.Func{Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntry,`0})">
            <summary>
            Audit log entry for a org.remove_billing_manager event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgRemoveMemberAuditEntry(System.Func{Octokit.GraphQL.Model.OrgRemoveMemberAuditEntry,`0})">
            <summary>
            Audit log entry for a org.remove_member event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgRemoveOutsideCollaboratorAuditEntry(System.Func{Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntry,`0})">
            <summary>
            Audit log entry for a org.remove_outside_collaborator event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgRestoreMemberAuditEntry(System.Func{Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry,`0})">
            <summary>
            Audit log entry for a org.restore_member event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgUnblockUserAuditEntry(System.Func{Octokit.GraphQL.Model.OrgUnblockUserAuditEntry,`0})">
            <summary>
            Audit log entry for a org.unblock_user
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgUpdateDefaultRepositoryPermissionAuditEntry(System.Func{Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntry,`0})">
            <summary>
            Audit log entry for a org.update_default_repository_permission
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgUpdateMemberAuditEntry(System.Func{Octokit.GraphQL.Model.OrgUpdateMemberAuditEntry,`0})">
            <summary>
            Audit log entry for a org.update_member event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgUpdateMemberRepositoryCreationPermissionAuditEntry(System.Func{Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntry,`0})">
            <summary>
            Audit log entry for a org.update_member_repository_creation_permission event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.OrgUpdateMemberRepositoryInvitationPermissionAuditEntry(System.Func{Octokit.GraphQL.Model.OrgUpdateMemberRepositoryInvitationPermissionAuditEntry,`0})">
            <summary>
            Audit log entry for a org.update_member_repository_invitation_permission event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.PrivateRepositoryForkingDisableAuditEntry(System.Func{Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry,`0})">
            <summary>
            Audit log entry for a private_repository_forking.disable event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.PrivateRepositoryForkingEnableAuditEntry(System.Func{Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry,`0})">
            <summary>
            Audit log entry for a private_repository_forking.enable event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.RepoAccessAuditEntry(System.Func{Octokit.GraphQL.Model.RepoAccessAuditEntry,`0})">
            <summary>
            Audit log entry for a repo.access event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.RepoAddMemberAuditEntry(System.Func{Octokit.GraphQL.Model.RepoAddMemberAuditEntry,`0})">
            <summary>
            Audit log entry for a repo.add_member event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.RepoAddTopicAuditEntry(System.Func{Octokit.GraphQL.Model.RepoAddTopicAuditEntry,`0})">
            <summary>
            Audit log entry for a repo.add_topic event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.RepoArchivedAuditEntry(System.Func{Octokit.GraphQL.Model.RepoArchivedAuditEntry,`0})">
            <summary>
            Audit log entry for a repo.archived event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.RepoChangeMergeSettingAuditEntry(System.Func{Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry,`0})">
            <summary>
            Audit log entry for a repo.change_merge_setting event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.RepoConfigDisableAnonymousGitAccessAuditEntry(System.Func{Octokit.GraphQL.Model.RepoConfigDisableAnonymousGitAccessAuditEntry,`0})">
            <summary>
            Audit log entry for a repo.config.disable_anonymous_git_access event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.RepoConfigDisableCollaboratorsOnlyAuditEntry(System.Func{Octokit.GraphQL.Model.RepoConfigDisableCollaboratorsOnlyAuditEntry,`0})">
            <summary>
            Audit log entry for a repo.config.disable_collaborators_only event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.RepoConfigDisableContributorsOnlyAuditEntry(System.Func{Octokit.GraphQL.Model.RepoConfigDisableContributorsOnlyAuditEntry,`0})">
            <summary>
            Audit log entry for a repo.config.disable_contributors_only event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.RepoConfigDisableSockpuppetDisallowedAuditEntry(System.Func{Octokit.GraphQL.Model.RepoConfigDisableSockpuppetDisallowedAuditEntry,`0})">
            <summary>
            Audit log entry for a repo.config.disable_sockpuppet_disallowed event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.RepoConfigEnableAnonymousGitAccessAuditEntry(System.Func{Octokit.GraphQL.Model.RepoConfigEnableAnonymousGitAccessAuditEntry,`0})">
            <summary>
            Audit log entry for a repo.config.enable_anonymous_git_access event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.RepoConfigEnableCollaboratorsOnlyAuditEntry(System.Func{Octokit.GraphQL.Model.RepoConfigEnableCollaboratorsOnlyAuditEntry,`0})">
            <summary>
            Audit log entry for a repo.config.enable_collaborators_only event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.RepoConfigEnableContributorsOnlyAuditEntry(System.Func{Octokit.GraphQL.Model.RepoConfigEnableContributorsOnlyAuditEntry,`0})">
            <summary>
            Audit log entry for a repo.config.enable_contributors_only event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.RepoConfigEnableSockpuppetDisallowedAuditEntry(System.Func{Octokit.GraphQL.Model.RepoConfigEnableSockpuppetDisallowedAuditEntry,`0})">
            <summary>
            Audit log entry for a repo.config.enable_sockpuppet_disallowed event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.RepoConfigLockAnonymousGitAccessAuditEntry(System.Func{Octokit.GraphQL.Model.RepoConfigLockAnonymousGitAccessAuditEntry,`0})">
            <summary>
            Audit log entry for a repo.config.lock_anonymous_git_access event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.RepoConfigUnlockAnonymousGitAccessAuditEntry(System.Func{Octokit.GraphQL.Model.RepoConfigUnlockAnonymousGitAccessAuditEntry,`0})">
            <summary>
            Audit log entry for a repo.config.unlock_anonymous_git_access event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.RepoCreateAuditEntry(System.Func{Octokit.GraphQL.Model.RepoCreateAuditEntry,`0})">
            <summary>
            Audit log entry for a repo.create event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.RepoDestroyAuditEntry(System.Func{Octokit.GraphQL.Model.RepoDestroyAuditEntry,`0})">
            <summary>
            Audit log entry for a repo.destroy event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.RepoRemoveMemberAuditEntry(System.Func{Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry,`0})">
            <summary>
            Audit log entry for a repo.remove_member event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.RepoRemoveTopicAuditEntry(System.Func{Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry,`0})">
            <summary>
            Audit log entry for a repo.remove_topic event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.RepositoryVisibilityChangeDisableAuditEntry(System.Func{Octokit.GraphQL.Model.RepositoryVisibilityChangeDisableAuditEntry,`0})">
            <summary>
            Audit log entry for a repository_visibility_change.disable event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.RepositoryVisibilityChangeEnableAuditEntry(System.Func{Octokit.GraphQL.Model.RepositoryVisibilityChangeEnableAuditEntry,`0})">
            <summary>
            Audit log entry for a repository_visibility_change.enable event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.TeamAddMemberAuditEntry(System.Func{Octokit.GraphQL.Model.TeamAddMemberAuditEntry,`0})">
            <summary>
            Audit log entry for a team.add_member event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.TeamAddRepositoryAuditEntry(System.Func{Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry,`0})">
            <summary>
            Audit log entry for a team.add_repository event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.TeamChangeParentTeamAuditEntry(System.Func{Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry,`0})">
            <summary>
            Audit log entry for a team.change_parent_team event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.TeamRemoveMemberAuditEntry(System.Func{Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry,`0})">
            <summary>
            Audit log entry for a team.remove_member event.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationAuditEntry.Selector`1.TeamRemoveRepositoryAuditEntry(System.Func{Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry,`0})">
            <summary>
            Audit log entry for a team.remove_repository event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationAuditEntryConnection">
            <summary>
            The connection type for OrganizationAuditEntry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationAuditEntryConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationAuditEntryConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationAuditEntryConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationAuditEntryConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IOrganizationAuditEntryData">
            <summary>
            Metadata for an audit entry with action org.*
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IOrganizationAuditEntryData.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IOrganizationAuditEntryData.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IOrganizationAuditEntryData.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IOrganizationAuditEntryData.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationAuditEntryEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationAuditEntryEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationAuditEntryEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationConnection">
            <summary>
            A list of organizations managed by an enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationEnterpriseOwnerConnection">
            <summary>
            The connection type for User.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationEnterpriseOwnerConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationEnterpriseOwnerConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationEnterpriseOwnerConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationEnterpriseOwnerConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationEnterpriseOwnerEdge">
            <summary>
            An enterprise owner in the context of an organization that is part of the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationEnterpriseOwnerEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationEnterpriseOwnerEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationEnterpriseOwnerEdge.OrganizationRole">
            <summary>
            The role of the owner with respect to the organization.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationIdentityProvider">
            <summary>
            An Identity Provider configured to provision SAML and SCIM identities for Organizations. Visible to (1) organization owners, (2) organization owners' personal access tokens (classic) with read:org or admin:org scope, (3) GitHub App with an installation token with read or write access to members.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationIdentityProvider.DigestMethod">
            <summary>
            The digest algorithm used to sign SAML requests for the Identity Provider.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationIdentityProvider.ExternalIdentities(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            External Identities provisioned by this Identity Provider
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="login">Filter to external identities with the users login</param>
            <param name="membersOnly">Filter to external identities with valid org membership only</param>
            <param name="userName">Filter to external identities with the users userName/NameID attribute</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationIdentityProvider.IdpCertificate">
            <summary>
            The x509 certificate used by the Identity Provider to sign assertions and responses.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationIdentityProvider.Issuer">
            <summary>
            The Issuer Entity ID for the SAML Identity Provider
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationIdentityProvider.Organization">
            <summary>
            Organization this Identity Provider belongs to
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationIdentityProvider.SignatureMethod">
            <summary>
            The signature algorithm used to sign SAML requests for the Identity Provider.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationIdentityProvider.SsoUrl">
            <summary>
            The URL endpoint for the Identity Provider's SAML SSO.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationInvitation">
            <summary>
            An Invitation for a user to an organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationInvitation.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationInvitation.Email">
            <summary>
            The email address of the user invited to the organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationInvitation.InvitationSource">
            <summary>
            The source of the invitation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationInvitation.InvitationType">
            <summary>
            The type of invitation that was sent (e.g. email, user).
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationInvitation.Invitee">
            <summary>
            The user who was invited to the organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationInvitation.Inviter">
            <summary>
            The user who created the invitation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationInvitation.Organization">
            <summary>
            The organization the invite is for
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationInvitation.Role">
            <summary>
            The user's pending role in the organization (e.g. member, owner).
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationInvitationConnection">
            <summary>
            The connection type for OrganizationInvitation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationInvitationConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationInvitationConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationInvitationConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationInvitationConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationInvitationEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationInvitationEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationInvitationEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationInvitationRole">
            <summary>
            The possible organization invitation roles.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationInvitationRole.DirectMember">
            <summary>
            The user is invited to be a direct member of the organization.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationInvitationRole.Admin">
            <summary>
            The user is invited to be an admin of the organization.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationInvitationRole.BillingManager">
            <summary>
            The user is invited to be a billing manager of the organization.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationInvitationRole.Reinstate">
            <summary>
            The user's previous role will be reinstated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationInvitationSource">
            <summary>
            The possible organization invitation sources.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationInvitationSource.Unknown">
            <summary>
            The invitation was sent before this feature was added
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationInvitationSource.Member">
            <summary>
            The invitation was created from the web interface or from API
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationInvitationSource.Scim">
            <summary>
            The invitation was created from SCIM
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationInvitationType">
            <summary>
            The possible organization invitation types.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationInvitationType.User">
            <summary>
            The invitation was to an existing user.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationInvitationType.Email">
            <summary>
            The invitation was to an email address.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationMemberConnection">
            <summary>
            The connection type for User.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationMemberConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationMemberConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationMemberConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationMemberConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationMemberEdge">
            <summary>
            Represents a user within an organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationMemberEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationMemberEdge.HasTwoFactorEnabled">
            <summary>
            Whether the organization member has two factor enabled or not. Returns null if information is not available to viewer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationMemberEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationMemberEdge.Role">
            <summary>
            The role this user has in the organization.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationMemberRole">
            <summary>
            The possible roles within an organization for its members.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationMemberRole.Member">
            <summary>
            The user is a member of the organization.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationMemberRole.Admin">
            <summary>
            The user is an administrator of the organization.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationMembersCanCreateRepositoriesSettingValue">
            <summary>
            The possible values for the members can create repositories setting on an organization.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationMembersCanCreateRepositoriesSettingValue.All">
            <summary>
            Members will be able to create public and private repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationMembersCanCreateRepositoriesSettingValue.Private">
            <summary>
            Members will be able to create only private repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationMembersCanCreateRepositoriesSettingValue.Internal">
            <summary>
            Members will be able to create only internal repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationMembersCanCreateRepositoriesSettingValue.Disabled">
            <summary>
            Members will not be able to create public or private repositories.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationMigration">
            <summary>
            A GitHub Enterprise Importer (GEI) organization migration.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationMigration.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationMigration.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationMigration.FailureReason">
            <summary>
            The reason the organization migration failed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationMigration.RemainingRepositoriesCount">
            <summary>
            The remaining amount of repos to be migrated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationMigration.SourceOrgName">
            <summary>
            The name of the source organization to be migrated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationMigration.SourceOrgUrl">
            <summary>
            The URL of the source organization to migrate.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationMigration.State">
            <summary>
            The migration state.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationMigration.TargetOrgName">
            <summary>
            The name of the target organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationMigration.TotalRepositoriesCount">
            <summary>
            The total amount of repositories to be migrated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationMigrationState">
            <summary>
            The Octoshift Organization migration state.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationMigrationState.NotStarted">
            <summary>
            The Octoshift migration has not started.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationMigrationState.Queued">
            <summary>
            The Octoshift migration has been queued.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationMigrationState.InProgress">
            <summary>
            The Octoshift migration is in progress.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationMigrationState.PreRepoMigration">
            <summary>
            The Octoshift migration is performing pre repository migrations.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationMigrationState.RepoMigration">
            <summary>
            The Octoshift org migration is performing repository migrations.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationMigrationState.PostRepoMigration">
            <summary>
            The Octoshift migration is performing post repository migrations.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationMigrationState.Succeeded">
            <summary>
            The Octoshift migration has succeeded.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationMigrationState.Failed">
            <summary>
            The Octoshift migration has failed.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationMigrationState.PendingValidation">
            <summary>
            The Octoshift migration needs to have its credentials validated.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationMigrationState.FailedValidation">
            <summary>
            The Octoshift migration has invalid credentials.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationOrder">
            <summary>
            Ordering options for organization connections.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationOrder.Field">
            <summary>
            The field to order organizations by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationOrderField">
            <summary>
            Properties by which organization connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationOrderField.CreatedAt">
            <summary>
            Order organizations by creation time
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrganizationOrderField.Login">
            <summary>
            Order organizations by login
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationOrUser">
            <summary>
            Used for argument of CreateProjectV2 mutation.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationOrUser.Selector`1.Organization(System.Func{Octokit.GraphQL.Model.Organization,`0})">
            <summary>
            An account on GitHub, with one or more owners, that has repositories, members and teams.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationOrUser.Selector`1.User(System.Func{Octokit.GraphQL.Model.User,`0})">
            <summary>
            A user is an individual's account on GitHub that owns repositories and can make new content.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationsHovercardContext">
            <summary>
            An organization list hovercard context
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationsHovercardContext.Message">
            <summary>
            A string describing this context
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationsHovercardContext.Octicon">
            <summary>
            An octicon to accompany this context
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationsHovercardContext.RelevantOrganizations(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.OrganizationOrder}})">
            <summary>
            Organizations this user is a member of that are relevant
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for the User's organizations.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationsHovercardContext.TotalOrganizationCount">
            <summary>
            The total number of organizations this user is in
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrganizationTeamsHovercardContext">
            <summary>
            An organization teams hovercard context
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationTeamsHovercardContext.Message">
            <summary>
            A string describing this context
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationTeamsHovercardContext.Octicon">
            <summary>
            An octicon to accompany this context
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrganizationTeamsHovercardContext.RelevantTeams(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            Teams in this organization the user is a member of that are relevant
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationTeamsHovercardContext.TeamsResourcePath">
            <summary>
            The path for the full team list for this user
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationTeamsHovercardContext.TeamsUrl">
            <summary>
            The URL for the full team list for this user
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrganizationTeamsHovercardContext.TotalTeamCount">
            <summary>
            The total number of teams the user is on in the organization
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgBlockUserAuditEntry">
            <summary>
            Audit log entry for a org.block_user
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgBlockUserAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgBlockUserAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgBlockUserAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgBlockUserAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgBlockUserAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgBlockUserAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgBlockUserAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgBlockUserAuditEntry.BlockedUser">
            <summary>
            The blocked user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgBlockUserAuditEntry.BlockedUserName">
            <summary>
            The username of the blocked user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgBlockUserAuditEntry.BlockedUserResourcePath">
            <summary>
            The HTTP path for the blocked user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgBlockUserAuditEntry.BlockedUserUrl">
            <summary>
            The HTTP URL for the blocked user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgBlockUserAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgBlockUserAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgBlockUserAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgBlockUserAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgBlockUserAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgBlockUserAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgBlockUserAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgBlockUserAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgBlockUserAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgBlockUserAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgConfigDisableCollaboratorsOnlyAuditEntry">
            <summary>
            Audit log entry for a org.config.disable_collaborators_only event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigDisableCollaboratorsOnlyAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigDisableCollaboratorsOnlyAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigDisableCollaboratorsOnlyAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigDisableCollaboratorsOnlyAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigDisableCollaboratorsOnlyAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigDisableCollaboratorsOnlyAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigDisableCollaboratorsOnlyAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigDisableCollaboratorsOnlyAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigDisableCollaboratorsOnlyAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigDisableCollaboratorsOnlyAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigDisableCollaboratorsOnlyAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigDisableCollaboratorsOnlyAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigDisableCollaboratorsOnlyAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigDisableCollaboratorsOnlyAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigDisableCollaboratorsOnlyAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigDisableCollaboratorsOnlyAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigDisableCollaboratorsOnlyAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgConfigEnableCollaboratorsOnlyAuditEntry">
            <summary>
            Audit log entry for a org.config.enable_collaborators_only event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigEnableCollaboratorsOnlyAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigEnableCollaboratorsOnlyAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigEnableCollaboratorsOnlyAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigEnableCollaboratorsOnlyAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigEnableCollaboratorsOnlyAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigEnableCollaboratorsOnlyAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigEnableCollaboratorsOnlyAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigEnableCollaboratorsOnlyAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigEnableCollaboratorsOnlyAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigEnableCollaboratorsOnlyAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigEnableCollaboratorsOnlyAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigEnableCollaboratorsOnlyAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigEnableCollaboratorsOnlyAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigEnableCollaboratorsOnlyAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigEnableCollaboratorsOnlyAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigEnableCollaboratorsOnlyAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgConfigEnableCollaboratorsOnlyAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgCreateAuditEntry">
            <summary>
            Audit log entry for a org.create event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgCreateAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgCreateAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgCreateAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgCreateAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgCreateAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgCreateAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgCreateAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgCreateAuditEntry.BillingPlan">
            <summary>
            The billing plan for the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgCreateAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgCreateAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgCreateAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgCreateAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgCreateAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgCreateAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgCreateAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgCreateAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgCreateAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgCreateAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgCreateAuditEntryBillingPlan">
            <summary>
            The billing plans available for organizations.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgCreateAuditEntryBillingPlan.Free">
            <summary>
            Free Plan
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgCreateAuditEntryBillingPlan.Business">
            <summary>
            Team Plan
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgCreateAuditEntryBillingPlan.BusinessPlus">
            <summary>
            Enterprise Cloud Plan
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgCreateAuditEntryBillingPlan.Unlimited">
            <summary>
            Legacy Unlimited Plan
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgCreateAuditEntryBillingPlan.TieredPerSeat">
            <summary>
            Tiered Per Seat Plan
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgDisableOauthAppRestrictionsAuditEntry">
            <summary>
            Audit log entry for a org.disable_oauth_app_restrictions event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableOauthAppRestrictionsAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableOauthAppRestrictionsAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableOauthAppRestrictionsAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableOauthAppRestrictionsAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableOauthAppRestrictionsAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableOauthAppRestrictionsAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableOauthAppRestrictionsAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableOauthAppRestrictionsAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableOauthAppRestrictionsAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableOauthAppRestrictionsAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableOauthAppRestrictionsAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableOauthAppRestrictionsAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableOauthAppRestrictionsAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableOauthAppRestrictionsAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableOauthAppRestrictionsAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableOauthAppRestrictionsAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableOauthAppRestrictionsAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgDisableSamlAuditEntry">
            <summary>
            Audit log entry for a org.disable_saml event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableSamlAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableSamlAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableSamlAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableSamlAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableSamlAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableSamlAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableSamlAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableSamlAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableSamlAuditEntry.DigestMethodUrl">
            <summary>
            The SAML provider's digest algorithm URL.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableSamlAuditEntry.IssuerUrl">
            <summary>
            The SAML provider's issuer URL.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableSamlAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableSamlAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableSamlAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableSamlAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableSamlAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableSamlAuditEntry.SignatureMethodUrl">
            <summary>
            The SAML provider's signature algorithm URL.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableSamlAuditEntry.SingleSignOnUrl">
            <summary>
            The SAML provider's single sign-on URL.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableSamlAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableSamlAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableSamlAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableSamlAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgDisableTwoFactorRequirementAuditEntry">
            <summary>
            Audit log entry for a org.disable_two_factor_requirement event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableTwoFactorRequirementAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableTwoFactorRequirementAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableTwoFactorRequirementAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableTwoFactorRequirementAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableTwoFactorRequirementAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableTwoFactorRequirementAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableTwoFactorRequirementAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableTwoFactorRequirementAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableTwoFactorRequirementAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableTwoFactorRequirementAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableTwoFactorRequirementAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableTwoFactorRequirementAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableTwoFactorRequirementAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableTwoFactorRequirementAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableTwoFactorRequirementAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableTwoFactorRequirementAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgDisableTwoFactorRequirementAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgEnableOauthAppRestrictionsAuditEntry">
            <summary>
            Audit log entry for a org.enable_oauth_app_restrictions event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableOauthAppRestrictionsAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableOauthAppRestrictionsAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableOauthAppRestrictionsAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableOauthAppRestrictionsAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableOauthAppRestrictionsAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableOauthAppRestrictionsAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableOauthAppRestrictionsAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableOauthAppRestrictionsAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableOauthAppRestrictionsAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableOauthAppRestrictionsAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableOauthAppRestrictionsAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableOauthAppRestrictionsAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableOauthAppRestrictionsAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableOauthAppRestrictionsAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableOauthAppRestrictionsAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableOauthAppRestrictionsAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableOauthAppRestrictionsAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgEnableSamlAuditEntry">
            <summary>
            Audit log entry for a org.enable_saml event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableSamlAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableSamlAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableSamlAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableSamlAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableSamlAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableSamlAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableSamlAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableSamlAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableSamlAuditEntry.DigestMethodUrl">
            <summary>
            The SAML provider's digest algorithm URL.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableSamlAuditEntry.IssuerUrl">
            <summary>
            The SAML provider's issuer URL.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableSamlAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableSamlAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableSamlAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableSamlAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableSamlAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableSamlAuditEntry.SignatureMethodUrl">
            <summary>
            The SAML provider's signature algorithm URL.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableSamlAuditEntry.SingleSignOnUrl">
            <summary>
            The SAML provider's single sign-on URL.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableSamlAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableSamlAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableSamlAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableSamlAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgEnableTwoFactorRequirementAuditEntry">
            <summary>
            Audit log entry for a org.enable_two_factor_requirement event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableTwoFactorRequirementAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableTwoFactorRequirementAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableTwoFactorRequirementAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableTwoFactorRequirementAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableTwoFactorRequirementAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableTwoFactorRequirementAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableTwoFactorRequirementAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableTwoFactorRequirementAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableTwoFactorRequirementAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableTwoFactorRequirementAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableTwoFactorRequirementAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableTwoFactorRequirementAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableTwoFactorRequirementAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableTwoFactorRequirementAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableTwoFactorRequirementAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableTwoFactorRequirementAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnableTwoFactorRequirementAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgEnterpriseOwnerOrder">
            <summary>
            Ordering options for an organization's enterprise owner connections.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnterpriseOwnerOrder.Field">
            <summary>
            The field to order enterprise owners by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgEnterpriseOwnerOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgEnterpriseOwnerOrderField">
            <summary>
            Properties by which enterprise owners can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgEnterpriseOwnerOrderField.Login">
            <summary>
            Order enterprise owners by login.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgInviteMemberAuditEntry">
            <summary>
            Audit log entry for a org.invite_member event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteMemberAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteMemberAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteMemberAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteMemberAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteMemberAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteMemberAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteMemberAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteMemberAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteMemberAuditEntry.Email">
            <summary>
            The email address of the organization invitation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteMemberAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteMemberAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteMemberAuditEntry.OrganizationInvitation">
            <summary>
            The organization invitation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteMemberAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteMemberAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteMemberAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteMemberAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteMemberAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteMemberAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteMemberAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgInviteToBusinessAuditEntry">
            <summary>
            Audit log entry for a org.invite_to_business event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteToBusinessAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteToBusinessAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteToBusinessAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteToBusinessAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteToBusinessAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteToBusinessAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteToBusinessAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteToBusinessAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteToBusinessAuditEntry.EnterpriseResourcePath">
            <summary>
            The HTTP path for this enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteToBusinessAuditEntry.EnterpriseSlug">
            <summary>
            The slug of the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteToBusinessAuditEntry.EnterpriseUrl">
            <summary>
            The HTTP URL for this enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteToBusinessAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteToBusinessAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteToBusinessAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteToBusinessAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteToBusinessAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteToBusinessAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteToBusinessAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteToBusinessAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgInviteToBusinessAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgOauthAppAccessApprovedAuditEntry">
            <summary>
            Audit log entry for a org.oauth_app_access_approved event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessApprovedAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessApprovedAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessApprovedAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessApprovedAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessApprovedAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessApprovedAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessApprovedAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessApprovedAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessApprovedAuditEntry.OauthApplicationName">
            <summary>
            The name of the OAuth Application.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessApprovedAuditEntry.OauthApplicationResourcePath">
            <summary>
            The HTTP path for the OAuth Application
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessApprovedAuditEntry.OauthApplicationUrl">
            <summary>
            The HTTP URL for the OAuth Application
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessApprovedAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessApprovedAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessApprovedAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessApprovedAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessApprovedAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessApprovedAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessApprovedAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessApprovedAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessApprovedAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgOauthAppAccessDeniedAuditEntry">
            <summary>
            Audit log entry for a org.oauth_app_access_denied event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessDeniedAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessDeniedAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessDeniedAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessDeniedAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessDeniedAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessDeniedAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessDeniedAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessDeniedAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessDeniedAuditEntry.OauthApplicationName">
            <summary>
            The name of the OAuth Application.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessDeniedAuditEntry.OauthApplicationResourcePath">
            <summary>
            The HTTP path for the OAuth Application
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessDeniedAuditEntry.OauthApplicationUrl">
            <summary>
            The HTTP URL for the OAuth Application
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessDeniedAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessDeniedAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessDeniedAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessDeniedAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessDeniedAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessDeniedAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessDeniedAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessDeniedAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessDeniedAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgOauthAppAccessRequestedAuditEntry">
            <summary>
            Audit log entry for a org.oauth_app_access_requested event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessRequestedAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessRequestedAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessRequestedAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessRequestedAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessRequestedAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessRequestedAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessRequestedAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessRequestedAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessRequestedAuditEntry.OauthApplicationName">
            <summary>
            The name of the OAuth Application.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessRequestedAuditEntry.OauthApplicationResourcePath">
            <summary>
            The HTTP path for the OAuth Application
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessRequestedAuditEntry.OauthApplicationUrl">
            <summary>
            The HTTP URL for the OAuth Application
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessRequestedAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessRequestedAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessRequestedAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessRequestedAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessRequestedAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessRequestedAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessRequestedAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessRequestedAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgOauthAppAccessRequestedAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntry">
            <summary>
            Audit log entry for a org.remove_billing_manager event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntry.Reason">
            <summary>
            The reason for the billing manager being removed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntryReason">
            <summary>
            The reason a billing manager was removed from an Organization.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntryReason.TwoFactorRequirementNonCompliance">
            <summary>
            The organization required 2FA of its billing managers and this user did not have 2FA enabled.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntryReason.SamlExternalIdentityMissing">
            <summary>
            SAML external identity missing
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgRemoveBillingManagerAuditEntryReason.SamlSsoEnforcementRequiresExternalIdentity">
            <summary>
            SAML SSO enforcement requires an external identity
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntry">
            <summary>
            Audit log entry for a org.remove_member event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntry.MembershipTypes">
            <summary>
            The types of membership the member has with the organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntry.Reason">
            <summary>
            The reason for the member being removed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntryMembershipType">
            <summary>
            The type of membership a user has with an Organization.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntryMembershipType.Suspended">
            <summary>
            A suspended member.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntryMembershipType.DirectMember">
            <summary>
            A direct member is a user that is a member of the Organization.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntryMembershipType.Admin">
            <summary>
            Organization administrators have full access and can change several settings, including the names of repositories that belong to the Organization and Owners team membership. In addition, organization admins can delete the organization and all of its repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntryMembershipType.BillingManager">
            <summary>
            A billing manager is a user who manages the billing settings for the Organization, such as updating payment information.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntryMembershipType.Unaffiliated">
            <summary>
            An unaffiliated collaborator is a person who is not a member of the Organization and does not have access to any repositories in the Organization.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntryMembershipType.OutsideCollaborator">
            <summary>
            An outside collaborator is a person who isn't explicitly a member of the Organization, but who has Read, Write, or Admin permissions to one or more repositories in the organization.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntryReason">
            <summary>
            The reason a member was removed from an Organization.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntryReason.TwoFactorRequirementNonCompliance">
            <summary>
            The organization required 2FA of its billing managers and this user did not have 2FA enabled.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntryReason.SamlExternalIdentityMissing">
            <summary>
            SAML external identity missing
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntryReason.SamlSsoEnforcementRequiresExternalIdentity">
            <summary>
            SAML SSO enforcement requires an external identity
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntryReason.UserAccountDeleted">
            <summary>
            User account has been deleted
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgRemoveMemberAuditEntryReason.TwoFactorAccountRecovery">
            <summary>
            User was removed from organization during account recovery
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntry">
            <summary>
            Audit log entry for a org.remove_outside_collaborator event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntry.MembershipTypes">
            <summary>
            The types of membership the outside collaborator has with the organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntry.Reason">
            <summary>
            The reason for the outside collaborator being removed from the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntryMembershipType">
            <summary>
            The type of membership a user has with an Organization.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntryMembershipType.OutsideCollaborator">
            <summary>
            An outside collaborator is a person who isn't explicitly a member of the Organization, but who has Read, Write, or Admin permissions to one or more repositories in the organization.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntryMembershipType.Unaffiliated">
            <summary>
            An unaffiliated collaborator is a person who is not a member of the Organization and does not have access to any repositories in the organization.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntryMembershipType.BillingManager">
            <summary>
            A billing manager is a user who manages the billing settings for the Organization, such as updating payment information.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntryReason">
            <summary>
            The reason an outside collaborator was removed from an Organization.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntryReason.TwoFactorRequirementNonCompliance">
            <summary>
            The organization required 2FA of its billing managers and this user did not have 2FA enabled.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgRemoveOutsideCollaboratorAuditEntryReason.SamlExternalIdentityMissing">
            <summary>
            SAML external identity missing
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry">
            <summary>
            Audit log entry for a org.restore_member event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.RestoredCustomEmailRoutingsCount">
            <summary>
            The number of custom email routings for the restored member.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.RestoredIssueAssignmentsCount">
            <summary>
            The number of issue assignments for the restored member.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.RestoredMemberships">
            <summary>
            Restored organization membership objects.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.RestoredMembershipsCount">
            <summary>
            The number of restored memberships.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.RestoredRepositoriesCount">
            <summary>
            The number of repositories of the restored member.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.RestoredRepositoryStarsCount">
            <summary>
            The number of starred repositories for the restored member.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.RestoredRepositoryWatchesCount">
            <summary>
            The number of watched repositories for the restored member.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntryMembership">
            <summary>
            Types of memberships that can be restored for an Organization member.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntryMembership.Selector`1.OrgRestoreMemberMembershipOrganizationAuditEntryData(System.Func{Octokit.GraphQL.Model.OrgRestoreMemberMembershipOrganizationAuditEntryData,`0})">
            <summary>
            Metadata for an organization membership for org.restore_member actions
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntryMembership.Selector`1.OrgRestoreMemberMembershipRepositoryAuditEntryData(System.Func{Octokit.GraphQL.Model.OrgRestoreMemberMembershipRepositoryAuditEntryData,`0})">
            <summary>
            Metadata for a repository membership for org.restore_member actions
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.OrgRestoreMemberAuditEntryMembership.Selector`1.OrgRestoreMemberMembershipTeamAuditEntryData(System.Func{Octokit.GraphQL.Model.OrgRestoreMemberMembershipTeamAuditEntryData,`0})">
            <summary>
            Metadata for a team membership for org.restore_member actions
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgRestoreMemberMembershipOrganizationAuditEntryData">
            <summary>
            Metadata for an organization membership for org.restore_member actions
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberMembershipOrganizationAuditEntryData.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberMembershipOrganizationAuditEntryData.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberMembershipOrganizationAuditEntryData.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberMembershipOrganizationAuditEntryData.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgRestoreMemberMembershipRepositoryAuditEntryData">
            <summary>
            Metadata for a repository membership for org.restore_member actions
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberMembershipRepositoryAuditEntryData.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberMembershipRepositoryAuditEntryData.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberMembershipRepositoryAuditEntryData.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberMembershipRepositoryAuditEntryData.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgRestoreMemberMembershipTeamAuditEntryData">
            <summary>
            Metadata for a team membership for org.restore_member actions
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberMembershipTeamAuditEntryData.Team">
            <summary>
            The team associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberMembershipTeamAuditEntryData.TeamName">
            <summary>
            The name of the team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberMembershipTeamAuditEntryData.TeamResourcePath">
            <summary>
            The HTTP path for this team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgRestoreMemberMembershipTeamAuditEntryData.TeamUrl">
            <summary>
            The HTTP URL for this team
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgUnblockUserAuditEntry">
            <summary>
            Audit log entry for a org.unblock_user
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUnblockUserAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUnblockUserAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUnblockUserAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUnblockUserAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUnblockUserAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUnblockUserAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUnblockUserAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUnblockUserAuditEntry.BlockedUser">
            <summary>
            The user being unblocked by the organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUnblockUserAuditEntry.BlockedUserName">
            <summary>
            The username of the blocked user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUnblockUserAuditEntry.BlockedUserResourcePath">
            <summary>
            The HTTP path for the blocked user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUnblockUserAuditEntry.BlockedUserUrl">
            <summary>
            The HTTP URL for the blocked user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUnblockUserAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUnblockUserAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUnblockUserAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUnblockUserAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUnblockUserAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUnblockUserAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUnblockUserAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUnblockUserAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUnblockUserAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUnblockUserAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntry">
            <summary>
            Audit log entry for a org.update_default_repository_permission
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntry.Permission">
            <summary>
            The new base repository permission level for the organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntry.PermissionWas">
            <summary>
            The former base repository permission level for the organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntryPermission">
            <summary>
            The default permission a repository can have in an Organization.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntryPermission.Read">
            <summary>
            Can read and clone repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntryPermission.Write">
            <summary>
            Can read, clone and push to repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntryPermission.Admin">
            <summary>
            Can read, clone, push, and add collaborators to repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgUpdateDefaultRepositoryPermissionAuditEntryPermission.None">
            <summary>
            No default permission value.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgUpdateMemberAuditEntry">
            <summary>
            Audit log entry for a org.update_member event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberAuditEntry.Permission">
            <summary>
            The new member permission level for the organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberAuditEntry.PermissionWas">
            <summary>
            The former member permission level for the organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgUpdateMemberAuditEntryPermission">
            <summary>
            The permissions available to members on an Organization.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgUpdateMemberAuditEntryPermission.Read">
            <summary>
            Can read and clone repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgUpdateMemberAuditEntryPermission.Admin">
            <summary>
            Can read, clone, push, and add collaborators to repositories.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntry">
            <summary>
            Audit log entry for a org.update_member_repository_creation_permission event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntry.CanCreateRepositories">
            <summary>
            Can members create repositories in the organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntry.Visibility">
            <summary>
            The permission for visibility level of repositories for this organization.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility">
            <summary>
            The permissions available for repository creation on an Organization.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility.All">
            <summary>
            All organization members are restricted from creating any repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility.Public">
            <summary>
            All organization members are restricted from creating public repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility.None">
            <summary>
            All organization members are allowed to create any repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility.Private">
            <summary>
            All organization members are restricted from creating private repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility.Internal">
            <summary>
            All organization members are restricted from creating internal repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility.PublicInternal">
            <summary>
            All organization members are restricted from creating public or internal repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility.PrivateInternal">
            <summary>
            All organization members are restricted from creating private or internal repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility.PublicPrivate">
            <summary>
            All organization members are restricted from creating public or private repositories.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryInvitationPermissionAuditEntry">
            <summary>
            Audit log entry for a org.update_member_repository_invitation_permission event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.CanInviteOutsideCollaboratorsToRepositories">
            <summary>
            Can outside collaborators be invited to repositories in the organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Package">
            <summary>
            Information for an uploaded package.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Package.LatestVersion">
            <summary>
            Find the latest version for the package.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Package.Name">
            <summary>
            Identifies the name of the package.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Package.PackageType">
            <summary>
            Identifies the type of the package.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Package.Repository">
            <summary>
            The repository this package belongs to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Package.Statistics">
            <summary>
            Statistics about package activity.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Package.Version(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Find package version by version string.
            </summary>
            <param name="version">The package version.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Package.Versions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.PackageVersionOrder}})">
            <summary>
            list of versions for this package
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering of the returned packages.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.PackageConnection">
            <summary>
            The connection type for Package.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PackageEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PackageFile">
            <summary>
            A file in a package version.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageFile.Md5">
            <summary>
            MD5 hash of the file.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageFile.Name">
            <summary>
            Name of the file.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageFile.PackageVersion">
            <summary>
            The package version this file belongs to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageFile.Sha1">
            <summary>
            SHA1 hash of the file.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageFile.Sha256">
            <summary>
            SHA256 hash of the file.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageFile.Size">
            <summary>
            Size of the file in bytes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageFile.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageFile.Url">
            <summary>
            URL to download the asset.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PackageFileConnection">
            <summary>
            The connection type for PackageFile.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageFileConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageFileConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageFileConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageFileConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PackageFileEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageFileEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageFileEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PackageFileOrder">
            <summary>
            Ways in which lists of package files can be ordered upon return.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageFileOrder.Field">
            <summary>
            The field in which to order package files by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageFileOrder.Direction">
            <summary>
            The direction in which to order package files by the specified field.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PackageFileOrderField">
            <summary>
            Properties by which package file connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PackageFileOrderField.CreatedAt">
            <summary>
            Order package files by creation time
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PackageOrder">
            <summary>
            Ways in which lists of packages can be ordered upon return.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageOrder.Field">
            <summary>
            The field in which to order packages by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageOrder.Direction">
            <summary>
            The direction in which to order packages by the specified field.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PackageOrderField">
            <summary>
            Properties by which package connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PackageOrderField.CreatedAt">
            <summary>
            Order packages by creation time
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IPackageOwner">
            <summary>
            Represents an owner of a package.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IPackageOwner.Packages(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.PackageOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.PackageType}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.ID}})">
            <summary>
            A list of packages under the owner.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="names">Find packages by their names.</param>
            <param name="orderBy">Ordering of the returned packages.</param>
            <param name="packageType">Filter registry package by type.</param>
            <param name="repositoryId">Find packages in a repository by ID.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.PackageStatistics">
            <summary>
            Represents a object that contains package activity statistics such as downloads.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageStatistics.DownloadsTotalCount">
            <summary>
            Number of times the package was downloaded since it was created.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PackageTag">
            <summary>
            A version tag contains the mapping between a tag name and a version.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageTag.Name">
            <summary>
            Identifies the tag name of the version.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageTag.Version">
            <summary>
            Version that the tag is associated with.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PackageType">
            <summary>
            The possible types of a package.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PackageType.Npm">
            <summary>
            An npm package.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PackageType.Rubygems">
            <summary>
            A rubygems package.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PackageType.Maven">
            <summary>
            A maven package.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PackageType.Docker">
            <summary>
            A docker image.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PackageType.Debian">
            <summary>
            A debian package.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PackageType.Nuget">
            <summary>
            A nuget package.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PackageType.Pypi">
            <summary>
            A python package.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PackageVersion">
            <summary>
            Information about a specific package version.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PackageVersion.Files(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.PackageFileOrder}})">
            <summary>
            List of files associated with this package version
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering of the returned package files.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageVersion.Package">
            <summary>
            The package associated with this version.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageVersion.Platform">
            <summary>
            The platform this version was built for.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageVersion.PreRelease">
            <summary>
            Whether or not this version is a pre-release.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageVersion.Readme">
            <summary>
            The README of this package version.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageVersion.Release">
            <summary>
            The release associated with this package version.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageVersion.Statistics">
            <summary>
            Statistics about package activity.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageVersion.Summary">
            <summary>
            The package version summary.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageVersion.Version">
            <summary>
            The version string.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PackageVersionConnection">
            <summary>
            The connection type for PackageVersion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageVersionConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageVersionConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageVersionConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageVersionConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PackageVersionEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageVersionEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageVersionEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PackageVersionOrder">
            <summary>
            Ways in which lists of package versions can be ordered upon return.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageVersionOrder.Field">
            <summary>
            The field in which to order package versions by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageVersionOrder.Direction">
            <summary>
            The direction in which to order package versions by the specified field.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PackageVersionOrderField">
            <summary>
            Properties by which package version connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PackageVersionOrderField.CreatedAt">
            <summary>
            Order package versions by creation time
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PackageVersionStatistics">
            <summary>
            Represents a object that contains package version activity statistics such as downloads.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PackageVersionStatistics.DownloadsTotalCount">
            <summary>
            Number of times the package was downloaded since it was created.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PageInfo">
            <summary>
            Information about pagination in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PageInfo.EndCursor">
            <summary>
            When paginating forwards, the cursor to continue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PageInfo.HasNextPage">
            <summary>
            When paginating forwards, are there more items?
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PageInfo.HasPreviousPage">
            <summary>
            When paginating backwards, are there more items?
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PageInfo.StartCursor">
            <summary>
            When paginating backwards, the cursor to continue.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PatchStatus">
            <summary>
            The possible types of patch statuses.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PatchStatus.Added">
            <summary>
            The file was added. Git status 'A'.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PatchStatus.Deleted">
            <summary>
            The file was deleted. Git status 'D'.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PatchStatus.Renamed">
            <summary>
            The file was renamed. Git status 'R'.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PatchStatus.Copied">
            <summary>
            The file was copied. Git status 'C'.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PatchStatus.Modified">
            <summary>
            The file's contents were changed. Git status 'M'.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PatchStatus.Changed">
            <summary>
            The file's type was changed. Git status 'T'.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PermissionGranter">
            <summary>
            Types that can grant permissions on a repository to a user
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PermissionGranter.Selector`1.Organization(System.Func{Octokit.GraphQL.Model.Organization,`0})">
            <summary>
            An account on GitHub, with one or more owners, that has repositories, members and teams.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PermissionGranter.Selector`1.Repository(System.Func{Octokit.GraphQL.Model.Repository,`0})">
            <summary>
            A repository contains the content for a project.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PermissionGranter.Selector`1.Team(System.Func{Octokit.GraphQL.Model.Team,`0})">
            <summary>
            A team of users in an organization.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PermissionSource">
            <summary>
            A level of permission and source for a user's access to a repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PermissionSource.Organization">
            <summary>
            The organization the repository belongs to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PermissionSource.Permission">
            <summary>
            The level of access this source has granted to the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PermissionSource.Source">
            <summary>
            The source of this permission.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PinIssueInput">
            <summary>
            Autogenerated input type of PinIssue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinIssueInput.IssueId">
            <summary>
            The ID of the issue to be pinned
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinIssueInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PinIssuePayload">
            <summary>
            Autogenerated return type of PinIssue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinIssuePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinIssuePayload.Issue">
            <summary>
            The issue that was pinned
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PinnableItem">
            <summary>
            Types that can be pinned to a profile page.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PinnableItem.Selector`1.Gist(System.Func{Octokit.GraphQL.Model.Gist,`0})">
            <summary>
            A Gist.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PinnableItem.Selector`1.Repository(System.Func{Octokit.GraphQL.Model.Repository,`0})">
            <summary>
            A repository contains the content for a project.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PinnableItemConnection">
            <summary>
            The connection type for PinnableItem.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnableItemConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnableItemConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnableItemConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnableItemConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PinnableItemEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnableItemEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnableItemEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PinnableItemType">
            <summary>
            Represents items that can be pinned to a profile page or dashboard.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PinnableItemType.Repository">
            <summary>
            A repository.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PinnableItemType.Gist">
            <summary>
            A gist.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PinnableItemType.Issue">
            <summary>
            An issue.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PinnableItemType.Project">
            <summary>
            A project.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PinnableItemType.PullRequest">
            <summary>
            A pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PinnableItemType.User">
            <summary>
            A user.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PinnableItemType.Organization">
            <summary>
            An organization.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PinnableItemType.Team">
            <summary>
            A team.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PinnedDiscussion">
            <summary>
            A Pinned Discussion is a discussion pinned to a repository's index page.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedDiscussion.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedDiscussion.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedDiscussion.Discussion">
            <summary>
            The discussion that was pinned.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedDiscussion.GradientStopColors">
            <summary>
            Color stops of the chosen gradient
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedDiscussion.Pattern">
            <summary>
            Background texture pattern
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedDiscussion.PinnedBy">
            <summary>
            The actor that pinned this discussion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedDiscussion.PreconfiguredGradient">
            <summary>
            Preconfigured background gradient option
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedDiscussion.Repository">
            <summary>
            The repository associated with this node.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedDiscussion.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PinnedDiscussionConnection">
            <summary>
            The connection type for PinnedDiscussion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedDiscussionConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedDiscussionConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedDiscussionConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedDiscussionConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PinnedDiscussionEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedDiscussionEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedDiscussionEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PinnedDiscussionGradient">
            <summary>
            Preconfigured gradients that may be used to style discussions pinned within a repository.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PinnedDiscussionGradient.RedOrange">
            <summary>
            A gradient of red to orange
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PinnedDiscussionGradient.BlueMint">
            <summary>
            A gradient of blue to mint
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PinnedDiscussionGradient.BluePurple">
            <summary>
            A gradient of blue to purple
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PinnedDiscussionGradient.PinkBlue">
            <summary>
            A gradient of pink to blue
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PinnedDiscussionGradient.PurpleCoral">
            <summary>
            A gradient of purple to coral
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PinnedDiscussionPattern">
            <summary>
            Preconfigured background patterns that may be used to style discussions pinned within a repository.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PinnedDiscussionPattern.DotFill">
            <summary>
            A solid dot pattern
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PinnedDiscussionPattern.Plus">
            <summary>
            A plus sign pattern
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PinnedDiscussionPattern.Zap">
            <summary>
            A lightning bolt pattern
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PinnedDiscussionPattern.ChevronUp">
            <summary>
            An upward-facing chevron pattern
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PinnedDiscussionPattern.Dot">
            <summary>
            A hollow dot pattern
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PinnedDiscussionPattern.HeartFill">
            <summary>
            A heart pattern
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PinnedEvent">
            <summary>
            Represents a 'pinned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedEvent.Issue">
            <summary>
            Identifies the issue associated with the event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PinnedIssue">
            <summary>
            A Pinned Issue is a issue pinned to a repository's index page.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedIssue.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedIssue.FullDatabaseId">
            <summary>
            Identifies the primary key from the database as a BigInt.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedIssue.Issue">
            <summary>
            The issue that was pinned.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedIssue.PinnedBy">
            <summary>
            The actor that pinned this issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedIssue.Repository">
            <summary>
            The repository that this issue was pinned to.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PinnedIssueConnection">
            <summary>
            The connection type for PinnedIssue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedIssueConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedIssueConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedIssueConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedIssueConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PinnedIssueEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedIssueEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PinnedIssueEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry">
            <summary>
            Audit log entry for a private_repository_forking.disable event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.EnterpriseResourcePath">
            <summary>
            The HTTP path for this enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.EnterpriseSlug">
            <summary>
            The slug of the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.EnterpriseUrl">
            <summary>
            The HTTP URL for this enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingDisableAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry">
            <summary>
            Audit log entry for a private_repository_forking.enable event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.EnterpriseResourcePath">
            <summary>
            The HTTP path for this enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.EnterpriseSlug">
            <summary>
            The slug of the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.EnterpriseUrl">
            <summary>
            The HTTP URL for this enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PrivateRepositoryForkingEnableAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProfileItemShowcase">
            <summary>
            A curatable list of repositories relating to a repository owner, which defaults to showing the most popular repositories they own.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProfileItemShowcase.HasPinnedItems">
            <summary>
            Whether or not the owner has pinned any repositories or gists.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProfileItemShowcase.Items(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The repositories and gists in the showcase. If the profile owner has any pinned items, those will be returned. Otherwise, the profile owner's popular repositories will be returned.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.IProfileOwner">
            <summary>
            Represents any entity on GitHub that has a profile page.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IProfileOwner.AnyPinnableItems(System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.PinnableItemType}})">
            <summary>
            Determine if this repository owner has any items that can be pinned to their profile.
            </summary>
            <param name="type">Filter to only a particular kind of pinnable item.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.IProfileOwner.Email">
            <summary>
            The public profile email.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IProfileOwner.ItemShowcase">
            <summary>
            Showcases a selection of repositories and gists that the profile owner has either curated or that have been selected automatically based on popularity.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IProfileOwner.Location">
            <summary>
            The public profile location.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IProfileOwner.Login">
            <summary>
            The username used to login.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IProfileOwner.Name">
            <summary>
            The public profile name.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IProfileOwner.PinnableItems(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.PinnableItemType}}})">
            <summary>
            A list of repositories and gists this profile owner can pin to their profile.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="types">Filter the types of pinnable items that are returned.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.IProfileOwner.PinnedItems(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.PinnableItemType}}})">
            <summary>
            A list of repositories and gists this profile owner has pinned to their profile
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="types">Filter the types of pinned items that are returned.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.IProfileOwner.PinnedItemsRemaining">
            <summary>
            Returns how many more items this profile owner can pin to their profile.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IProfileOwner.ViewerCanChangePinnedItems">
            <summary>
            Can the viewer pin repositories and gists to the profile?
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IProfileOwner.WebsiteUrl">
            <summary>
            The public profile website URL.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Project">
            <summary>
            Projects manage issues, pull requests and notes within a project owner.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Project.Body">
            <summary>
            The project's description body.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Project.BodyHTML">
            <summary>
            The projects description body rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Project.Closed">
            <summary>
            Indicates if the object is closed (definition of closed may depend on type)
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Project.ClosedAt">
            <summary>
            Identifies the date and time when the object was closed.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Project.Columns(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            List of columns in the project
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Project.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Project.Creator">
            <summary>
            The actor who originally created the project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Project.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Project.Name">
            <summary>
            The project's name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Project.Number">
            <summary>
            The project's number.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Project.Owner">
            <summary>
            The project's owner. Currently limited to repositories, organizations, and users.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Project.PendingCards(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.Nullable{Octokit.GraphQL.Model.ProjectCardArchivedState}}}})">
            <summary>
            List of pending cards in this project
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="archivedStates">A list of archived states to filter the cards by</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Project.Progress">
            <summary>
            Project progress details.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Project.ResourcePath">
            <summary>
            The HTTP path for this project
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Project.State">
            <summary>
            Whether the project is open or closed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Project.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Project.Url">
            <summary>
            The HTTP URL for this project
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Project.ViewerCanClose">
            <summary>
            Indicates if the object can be closed by the viewer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Project.ViewerCanReopen">
            <summary>
            Indicates if the object can be reopened by the viewer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Project.ViewerCanUpdate">
            <summary>
            Check if the current viewer can update this object.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectCard">
            <summary>
            A card in a project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectCard.Column">
            <summary>
            The project column this card is associated under. A card may only belong to one
            project column at a time. The column field will be null if the card is created
            in a pending state and has yet to be associated with a column. Once cards are
            associated with a column, they will not become pending in the future.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectCard.Content">
            <summary>
            The card content item
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectCard.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectCard.Creator">
            <summary>
            The actor who created this card
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectCard.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectCard.IsArchived">
            <summary>
            Whether the card is archived
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectCard.Note">
            <summary>
            The card note
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectCard.Project">
            <summary>
            The project that contains this card.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectCard.ResourcePath">
            <summary>
            The HTTP path for this card
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectCard.State">
            <summary>
            The state of ProjectCard
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectCard.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectCard.Url">
            <summary>
            The HTTP URL for this card
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectCardArchivedState">
            <summary>
            The possible archived states of a project card.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectCardArchivedState.Archived">
            <summary>
            A project card that is archived
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectCardArchivedState.NotArchived">
            <summary>
            A project card that is not archived
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectCardConnection">
            <summary>
            The connection type for ProjectCard.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectCardConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectCardConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectCardConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectCardConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectCardEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectCardEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectCardEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectCardItem">
            <summary>
            Types that can be inside Project Cards.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectCardItem.Selector`1.Issue(System.Func{Octokit.GraphQL.Model.Issue,`0})">
            <summary>
            An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectCardItem.Selector`1.PullRequest(System.Func{Octokit.GraphQL.Model.PullRequest,`0})">
            <summary>
            A repository pull request.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectCardState">
            <summary>
            Various content states of a ProjectCard
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectCardState.ContentOnly">
            <summary>
            The card has content only.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectCardState.NoteOnly">
            <summary>
            The card has a note only.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectCardState.Redacted">
            <summary>
            The card is redacted.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectColumn">
            <summary>
            A column inside a project.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectColumn.Cards(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.Nullable{Octokit.GraphQL.Model.ProjectCardArchivedState}}}})">
            <summary>
            List of cards in the column
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="archivedStates">A list of archived states to filter the cards by</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectColumn.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectColumn.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectColumn.Name">
            <summary>
            The project column's name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectColumn.Project">
            <summary>
            The project that contains this column.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectColumn.Purpose">
            <summary>
            The semantic purpose of the column
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectColumn.ResourcePath">
            <summary>
            The HTTP path for this project column
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectColumn.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectColumn.Url">
            <summary>
            The HTTP URL for this project column
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectColumnConnection">
            <summary>
            The connection type for ProjectColumn.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectColumnConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectColumnConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectColumnConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectColumnConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectColumnEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectColumnEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectColumnEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectColumnPurpose">
            <summary>
            The semantic purpose of the column - todo, in progress, or done.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectColumnPurpose.Todo">
            <summary>
            The column contains cards still to be worked on
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectColumnPurpose.InProgress">
            <summary>
            The column contains cards which are currently being worked on
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectColumnPurpose.Done">
            <summary>
            The column contains cards which are complete
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectConnection">
            <summary>
            A list of projects associated with the owner.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectOrder">
            <summary>
            Ways in which lists of projects can be ordered upon return.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectOrder.Field">
            <summary>
            The field in which to order projects by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectOrder.Direction">
            <summary>
            The direction in which to order projects by the specified field.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectOrderField">
            <summary>
            Properties by which project connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectOrderField.CreatedAt">
            <summary>
            Order projects by creation time
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectOrderField.UpdatedAt">
            <summary>
            Order projects by update time
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectOrderField.Name">
            <summary>
            Order projects by name
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IProjectOwner">
            <summary>
            Represents an owner of a Project.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IProjectOwner.Project(Octokit.GraphQL.Core.Arg{System.Int32})">
            <summary>
            Find project by number.
            </summary>
            <param name="number">The project number to find.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.IProjectOwner.Projects(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ProjectOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.ProjectState}}})">
            <summary>
            A list of projects under the owner.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for projects returned from the connection</param>
            <param name="search">Query to search projects by, currently only searching by name.</param>
            <param name="states">A list of states to filter the projects by.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.IProjectOwner.ProjectsResourcePath">
            <summary>
            The HTTP path listing owners projects
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IProjectOwner.ProjectsUrl">
            <summary>
            The HTTP URL listing owners projects
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IProjectOwner.ViewerCanCreateProjects">
            <summary>
            Can the current viewer create new projects on this owner.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectProgress">
            <summary>
            Project progress stats.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectProgress.DoneCount">
            <summary>
            The number of done cards.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectProgress.DonePercentage">
            <summary>
            The percentage of done cards.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectProgress.Enabled">
            <summary>
            Whether progress tracking is enabled and cards with purpose exist for this project
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectProgress.InProgressCount">
            <summary>
            The number of in-progress cards.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectProgress.InProgressPercentage">
            <summary>
            The percentage of in-progress cards.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectProgress.TodoCount">
            <summary>
            The number of to do cards.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectProgress.TodoPercentage">
            <summary>
            The percentage of to do cards.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectState">
            <summary>
            State of the project; either 'open' or 'closed'
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectState.Open">
            <summary>
            The project is open.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectState.Closed">
            <summary>
            The project is closed.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectTemplate">
            <summary>
            GitHub-provided templates for Projects
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectTemplate.BasicKanban">
            <summary>
            Create a board with columns for To do, In progress and Done.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectTemplate.AutomatedKanbanV2">
            <summary>
            Create a board with v2 triggers to automatically move cards across To do, In progress and Done columns.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectTemplate.AutomatedReviewsKanban">
            <summary>
            Create a board with triggers to automatically move cards across columns with review automation.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectTemplate.BugTriage">
            <summary>
            Create a board to triage and prioritize bugs with To do, priority, and Done columns.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2">
            <summary>
            New projects that manage issues, pull requests and drafts using tables and boards.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2.Closed">
            <summary>
            Returns true if the project is closed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2.ClosedAt">
            <summary>
            Identifies the date and time when the object was closed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2.Creator">
            <summary>
            The actor who originally created the project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2.Field(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            A field of the project
            </summary>
            <param name="name">The name of the field</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2.Fields(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ProjectV2FieldOrder}})">
            <summary>
            List of fields and their constraints in the project
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for project v2 fields returned from the connection</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2.Items(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ProjectV2ItemOrder}})">
            <summary>
            List of items in the project
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for project v2 items returned from the connection</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2.Number">
            <summary>
            The project's number.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2.Owner">
            <summary>
            The project's owner. Currently limited to organizations and users.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2.Public">
            <summary>
            Returns true if the project is public.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2.Readme">
            <summary>
            The project's readme.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2.Repositories(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RepositoryOrder}})">
            <summary>
            The repositories the project is linked to.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for repositories returned from the connection</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2.ResourcePath">
            <summary>
            The HTTP path for this project
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2.ShortDescription">
            <summary>
            The project's short description.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2.Teams(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.TeamOrder}})">
            <summary>
            The teams the project is linked to.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for teams returned from this connection.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2.Template">
            <summary>
            Returns true if this project is a template.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2.Title">
            <summary>
            The project's name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2.Url">
            <summary>
            The HTTP URL for this project
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2.View(Octokit.GraphQL.Core.Arg{System.Int32})">
            <summary>
            A view of the project
            </summary>
            <param name="number">The number of a view belonging to the project</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2.ViewerCanClose">
            <summary>
            Indicates if the object can be closed by the viewer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2.ViewerCanReopen">
            <summary>
            Indicates if the object can be reopened by the viewer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2.ViewerCanUpdate">
            <summary>
            Check if the current viewer can update this object.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2.Views(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ProjectV2ViewOrder}})">
            <summary>
            List of views in the project
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for project v2 views returned from the connection</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2.Workflow(Octokit.GraphQL.Core.Arg{System.Int32})">
            <summary>
            A workflow of the project
            </summary>
            <param name="number">The number of a workflow belonging to the project</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2.Workflows(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ProjectV2WorkflowOrder}})">
            <summary>
            List of the workflows in the project
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for project v2 workflows returned from the connection</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2Connection">
            <summary>
            The connection type for ProjectV2.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Connection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Connection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Connection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Connection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2CustomFieldType">
            <summary>
            The type of a project field.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2CustomFieldType.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2CustomFieldType.SingleSelect">
            <summary>
            Single Select
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2CustomFieldType.Number">
            <summary>
            Number
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2CustomFieldType.Date">
            <summary>
            Date
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2Edge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Edge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Edge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2Field">
            <summary>
            A field inside a project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Field.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Field.DataType">
            <summary>
            The field's type.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Field.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Field.Name">
            <summary>
            The project field's name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Field.Project">
            <summary>
            The project that contains this field.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Field.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IProjectV2FieldCommon">
            <summary>
            Common fields across different project field types
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IProjectV2FieldCommon.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IProjectV2FieldCommon.DataType">
            <summary>
            The field's type.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IProjectV2FieldCommon.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IProjectV2FieldCommon.Name">
            <summary>
            The project field's name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IProjectV2FieldCommon.Project">
            <summary>
            The project that contains this field.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IProjectV2FieldCommon.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2FieldConfiguration">
            <summary>
            Configurations for project fields.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2FieldConfiguration.Selector`1.ProjectV2Field(System.Func{Octokit.GraphQL.Model.ProjectV2Field,`0})">
            <summary>
            A field inside a project.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2FieldConfiguration.Selector`1.ProjectV2IterationField(System.Func{Octokit.GraphQL.Model.ProjectV2IterationField,`0})">
            <summary>
            An iteration field inside a project.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2FieldConfiguration.Selector`1.ProjectV2SingleSelectField(System.Func{Octokit.GraphQL.Model.ProjectV2SingleSelectField,`0})">
            <summary>
            A single select field inside a project.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2FieldConfigurationConnection">
            <summary>
            The connection type for ProjectV2FieldConfiguration.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2FieldConfigurationConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2FieldConfigurationConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2FieldConfigurationConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2FieldConfigurationConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2FieldConfigurationEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2FieldConfigurationEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2FieldConfigurationEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2FieldConnection">
            <summary>
            The connection type for ProjectV2Field.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2FieldConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2FieldConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2FieldConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2FieldConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2FieldEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2FieldEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2FieldEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2FieldOrder">
            <summary>
            Ordering options for project v2 field connections
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2FieldOrder.Field">
            <summary>
            The field to order the project v2 fields by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2FieldOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2FieldOrderField">
            <summary>
            Properties by which project v2 field connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2FieldOrderField.Position">
            <summary>
            Order project v2 fields by position
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2FieldOrderField.CreatedAt">
            <summary>
            Order project v2 fields by creation time
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2FieldOrderField.Name">
            <summary>
            Order project v2 fields by name
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2FieldType">
            <summary>
            The type of a project field.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2FieldType.Assignees">
            <summary>
            Assignees
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2FieldType.LinkedPullRequests">
            <summary>
            Linked Pull Requests
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2FieldType.Reviewers">
            <summary>
            Reviewers
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2FieldType.Labels">
            <summary>
            Labels
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2FieldType.Milestone">
            <summary>
            Milestone
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2FieldType.Repository">
            <summary>
            Repository
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2FieldType.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2FieldType.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2FieldType.SingleSelect">
            <summary>
            Single Select
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2FieldType.Number">
            <summary>
            Number
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2FieldType.Date">
            <summary>
            Date
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2FieldType.Iteration">
            <summary>
            Iteration
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2FieldType.Tracks">
            <summary>
            Tracks
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2FieldType.TrackedBy">
            <summary>
            Tracked by
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2FieldValue">
            <summary>
            The values that can be used to update a field of an item inside a Project. Only 1 value can be updated at a time.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2FieldValue.Text">
            <summary>
            The text to set on the field.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2FieldValue.Number">
            <summary>
            The number to set on the field.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2FieldValue.Date">
            <summary>
            The ISO 8601 date to set on the field.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2FieldValue.SingleSelectOptionId">
            <summary>
            The id of the single select option to set on the field.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2FieldValue.IterationId">
            <summary>
            The id of the iteration to set on the field.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2Filters">
            <summary>
            Ways in which to filter lists of projects.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Filters.State">
            <summary>
            List project v2 filtered by the state given.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2Item">
            <summary>
            An item within a Project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Item.Content">
            <summary>
            The content of the referenced draft issue, issue, or pull request
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Item.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Item.Creator">
            <summary>
            The actor who created the item.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Item.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2Item.FieldValueByName(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            The field value of the first project field which matches the 'name' argument that is set on the item.
            </summary>
            <param name="name">The name of the field to return the field value of</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2Item.FieldValues(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ProjectV2ItemFieldValueOrder}})">
            <summary>
            The field values that are set on the item.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for project v2 item field values returned from the connection</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Item.IsArchived">
            <summary>
            Whether the item is archived.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Item.Project">
            <summary>
            The project that contains this item.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Item.Type">
            <summary>
            The type of the item.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Item.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ItemConnection">
            <summary>
            The connection type for ProjectV2Item.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ItemContent">
            <summary>
            Types that can be inside Project Items.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2ItemContent.Selector`1.DraftIssue(System.Func{Octokit.GraphQL.Model.DraftIssue,`0})">
            <summary>
            A draft issue within a project.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2ItemContent.Selector`1.Issue(System.Func{Octokit.GraphQL.Model.Issue,`0})">
            <summary>
            An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2ItemContent.Selector`1.PullRequest(System.Func{Octokit.GraphQL.Model.PullRequest,`0})">
            <summary>
            A repository pull request.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ItemEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ItemFieldDateValue">
            <summary>
            The value of a date field in a Project item.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldDateValue.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldDateValue.Creator">
            <summary>
            The actor who created the item.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldDateValue.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldDateValue.Date">
            <summary>
            Date value for the field
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldDateValue.Field">
            <summary>
            The project field that contains this value.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldDateValue.Item">
            <summary>
            The project item that contains this value.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldDateValue.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ItemFieldIterationValue">
            <summary>
            The value of an iteration field in a Project item.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldIterationValue.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldIterationValue.Creator">
            <summary>
            The actor who created the item.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldIterationValue.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldIterationValue.Duration">
            <summary>
            The duration of the iteration in days.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldIterationValue.Field">
            <summary>
            The project field that contains this value.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldIterationValue.Item">
            <summary>
            The project item that contains this value.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldIterationValue.IterationId">
            <summary>
            The ID of the iteration.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldIterationValue.StartDate">
            <summary>
            The start date of the iteration.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldIterationValue.Title">
            <summary>
            The title of the iteration.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldIterationValue.TitleHTML">
            <summary>
            The title of the iteration, with HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldIterationValue.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ItemFieldLabelValue">
            <summary>
            The value of the labels field in a Project item.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldLabelValue.Field">
            <summary>
            The field that contains this value.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2ItemFieldLabelValue.Labels(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            Labels value of a field
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ItemFieldMilestoneValue">
            <summary>
            The value of a milestone field in a Project item.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldMilestoneValue.Field">
            <summary>
            The field that contains this value.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldMilestoneValue.Milestone">
            <summary>
            Milestone value of a field
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ItemFieldNumberValue">
            <summary>
            The value of a number field in a Project item.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldNumberValue.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldNumberValue.Creator">
            <summary>
            The actor who created the item.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldNumberValue.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldNumberValue.Field">
            <summary>
            The project field that contains this value.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldNumberValue.Item">
            <summary>
            The project item that contains this value.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldNumberValue.Number">
            <summary>
            Number as a float(8)
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldNumberValue.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ItemFieldPullRequestValue">
            <summary>
            The value of a pull request field in a Project item.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldPullRequestValue.Field">
            <summary>
            The field that contains this value.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2ItemFieldPullRequestValue.PullRequests(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.PullRequestOrder}})">
            <summary>
            The pull requests for this field
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for pull requests.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ItemFieldRepositoryValue">
            <summary>
            The value of a repository field in a Project item.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldRepositoryValue.Field">
            <summary>
            The field that contains this value.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldRepositoryValue.Repository">
            <summary>
            The repository for this field.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ItemFieldReviewerValue">
            <summary>
            The value of a reviewers field in a Project item.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldReviewerValue.Field">
            <summary>
            The field that contains this value.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2ItemFieldReviewerValue.Reviewers(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The reviewers for this field.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ItemFieldSingleSelectValue">
            <summary>
            The value of a single select field in a Project item.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldSingleSelectValue.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldSingleSelectValue.Creator">
            <summary>
            The actor who created the item.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldSingleSelectValue.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldSingleSelectValue.Field">
            <summary>
            The project field that contains this value.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldSingleSelectValue.Item">
            <summary>
            The project item that contains this value.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldSingleSelectValue.Name">
            <summary>
            The name of the selected single select option.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldSingleSelectValue.NameHTML">
            <summary>
            The html name of the selected single select option.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldSingleSelectValue.OptionId">
            <summary>
            The id of the selected single select option.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldSingleSelectValue.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ItemFieldTextValue">
            <summary>
            The value of a text field in a Project item.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldTextValue.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldTextValue.Creator">
            <summary>
            The actor who created the item.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldTextValue.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldTextValue.Field">
            <summary>
            The project field that contains this value.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldTextValue.Item">
            <summary>
            The project item that contains this value.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldTextValue.Text">
            <summary>
            Text value of a field
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldTextValue.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ItemFieldUserValue">
            <summary>
            The value of a user field in a Project item.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldUserValue.Field">
            <summary>
            The field that contains this value.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2ItemFieldUserValue.Users(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The users for this field
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ItemFieldValue">
            <summary>
            Project field values
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2ItemFieldValue.Selector`1.ProjectV2ItemFieldDateValue(System.Func{Octokit.GraphQL.Model.ProjectV2ItemFieldDateValue,`0})">
            <summary>
            The value of a date field in a Project item.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2ItemFieldValue.Selector`1.ProjectV2ItemFieldIterationValue(System.Func{Octokit.GraphQL.Model.ProjectV2ItemFieldIterationValue,`0})">
            <summary>
            The value of an iteration field in a Project item.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2ItemFieldValue.Selector`1.ProjectV2ItemFieldLabelValue(System.Func{Octokit.GraphQL.Model.ProjectV2ItemFieldLabelValue,`0})">
            <summary>
            The value of the labels field in a Project item.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2ItemFieldValue.Selector`1.ProjectV2ItemFieldMilestoneValue(System.Func{Octokit.GraphQL.Model.ProjectV2ItemFieldMilestoneValue,`0})">
            <summary>
            The value of a milestone field in a Project item.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2ItemFieldValue.Selector`1.ProjectV2ItemFieldNumberValue(System.Func{Octokit.GraphQL.Model.ProjectV2ItemFieldNumberValue,`0})">
            <summary>
            The value of a number field in a Project item.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2ItemFieldValue.Selector`1.ProjectV2ItemFieldPullRequestValue(System.Func{Octokit.GraphQL.Model.ProjectV2ItemFieldPullRequestValue,`0})">
            <summary>
            The value of a pull request field in a Project item.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2ItemFieldValue.Selector`1.ProjectV2ItemFieldRepositoryValue(System.Func{Octokit.GraphQL.Model.ProjectV2ItemFieldRepositoryValue,`0})">
            <summary>
            The value of a repository field in a Project item.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2ItemFieldValue.Selector`1.ProjectV2ItemFieldReviewerValue(System.Func{Octokit.GraphQL.Model.ProjectV2ItemFieldReviewerValue,`0})">
            <summary>
            The value of a reviewers field in a Project item.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2ItemFieldValue.Selector`1.ProjectV2ItemFieldSingleSelectValue(System.Func{Octokit.GraphQL.Model.ProjectV2ItemFieldSingleSelectValue,`0})">
            <summary>
            The value of a single select field in a Project item.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2ItemFieldValue.Selector`1.ProjectV2ItemFieldTextValue(System.Func{Octokit.GraphQL.Model.ProjectV2ItemFieldTextValue,`0})">
            <summary>
            The value of a text field in a Project item.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2ItemFieldValue.Selector`1.ProjectV2ItemFieldUserValue(System.Func{Octokit.GraphQL.Model.ProjectV2ItemFieldUserValue,`0})">
            <summary>
            The value of a user field in a Project item.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IProjectV2ItemFieldValueCommon">
            <summary>
            Common fields across different project field value types
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IProjectV2ItemFieldValueCommon.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IProjectV2ItemFieldValueCommon.Creator">
            <summary>
            The actor who created the item.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IProjectV2ItemFieldValueCommon.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IProjectV2ItemFieldValueCommon.Field">
            <summary>
            The project field that contains this value.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IProjectV2ItemFieldValueCommon.Item">
            <summary>
            The project item that contains this value.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IProjectV2ItemFieldValueCommon.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ItemFieldValueConnection">
            <summary>
            The connection type for ProjectV2ItemFieldValue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldValueConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldValueConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldValueConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldValueConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ItemFieldValueEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldValueEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldValueEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ItemFieldValueOrder">
            <summary>
            Ordering options for project v2 item field value connections
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldValueOrder.Field">
            <summary>
            The field to order the project v2 item field values by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemFieldValueOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ItemFieldValueOrderField">
            <summary>
            Properties by which project v2 item field value connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2ItemFieldValueOrderField.Position">
            <summary>
            Order project v2 item field values by the their position in the project
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ItemOrder">
            <summary>
            Ordering options for project v2 item connections
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemOrder.Field">
            <summary>
            The field to order the project v2 items by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ItemOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ItemOrderField">
            <summary>
            Properties by which project v2 item connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2ItemOrderField.Position">
            <summary>
            Order project v2 items by the their position in the project
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ItemType">
            <summary>
            The type of a project item.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2ItemType.Issue">
            <summary>
            Issue
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2ItemType.PullRequest">
            <summary>
            Pull Request
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2ItemType.DraftIssue">
            <summary>
            Draft Issue
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2ItemType.Redacted">
            <summary>
            Redacted Item
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2IterationField">
            <summary>
            An iteration field inside a project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2IterationField.Configuration">
            <summary>
            Iteration configuration settings
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2IterationField.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2IterationField.DataType">
            <summary>
            The field's type.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2IterationField.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2IterationField.Name">
            <summary>
            The project field's name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2IterationField.Project">
            <summary>
            The project that contains this field.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2IterationField.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2IterationFieldConfiguration">
            <summary>
            Iteration field configuration for a project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2IterationFieldConfiguration.CompletedIterations">
            <summary>
            The iteration's completed iterations
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2IterationFieldConfiguration.Duration">
            <summary>
            The iteration's duration in days
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2IterationFieldConfiguration.Iterations">
            <summary>
            The iteration's iterations
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2IterationFieldConfiguration.StartDay">
            <summary>
            The iteration's start day of the week
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2IterationFieldIteration">
            <summary>
            Iteration field iteration settings for a project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2IterationFieldIteration.Duration">
            <summary>
            The iteration's duration in days
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2IterationFieldIteration.Id">
            <summary>
            The iteration's ID.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2IterationFieldIteration.StartDate">
            <summary>
            The iteration's start date
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2IterationFieldIteration.Title">
            <summary>
            The iteration's title.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2IterationFieldIteration.TitleHTML">
            <summary>
            The iteration's html title.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2Order">
            <summary>
            Ways in which lists of projects can be ordered upon return.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Order.Field">
            <summary>
            The field in which to order projects by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Order.Direction">
            <summary>
            The direction in which to order projects by the specified field.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2OrderField">
            <summary>
            Properties by which projects can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2OrderField.Title">
            <summary>
            The project's title
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2OrderField.Number">
            <summary>
            The project's number
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2OrderField.UpdatedAt">
            <summary>
            The project's date and time of update
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2OrderField.CreatedAt">
            <summary>
            The project's date and time of creation
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IProjectV2Owner">
            <summary>
            Represents an owner of a project (beta).
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IProjectV2Owner.ProjectV2(Octokit.GraphQL.Core.Arg{System.Int32})">
            <summary>
            Find a project by number.
            </summary>
            <param name="number">The project number.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.IProjectV2Owner.ProjectsV2(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ProjectV2Order}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of projects under the owner.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">How to order the returned projects.</param>
            <param name="query">A project to search for under the the owner.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.IProjectV2Recent">
            <summary>
            Recent projects for the owner.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IProjectV2Recent.RecentProjects(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            Recent projects that this user has modified in the context of the owner.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2SingleSelectField">
            <summary>
            A single select field inside a project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SingleSelectField.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SingleSelectField.DataType">
            <summary>
            The field's type.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SingleSelectField.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SingleSelectField.Name">
            <summary>
            The project field's name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SingleSelectField.Options">
            <summary>
            Options for the single select field
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SingleSelectField.Project">
            <summary>
            The project that contains this field.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SingleSelectField.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2SingleSelectFieldOption">
            <summary>
            Single select field option for a configuration for a project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SingleSelectFieldOption.Id">
            <summary>
            The option's ID.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SingleSelectFieldOption.Name">
            <summary>
            The option's name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SingleSelectFieldOption.NameHTML">
            <summary>
            The option's html name.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2SingleSelectFieldOptionColor">
            <summary>
            The display color of a single-select field option.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2SingleSelectFieldOptionColor.Gray">
            <summary>
            GRAY
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2SingleSelectFieldOptionColor.Blue">
            <summary>
            BLUE
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2SingleSelectFieldOptionColor.Green">
            <summary>
            GREEN
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2SingleSelectFieldOptionColor.Yellow">
            <summary>
            YELLOW
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2SingleSelectFieldOptionColor.Orange">
            <summary>
            ORANGE
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2SingleSelectFieldOptionColor.Red">
            <summary>
            RED
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2SingleSelectFieldOptionColor.Pink">
            <summary>
            PINK
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2SingleSelectFieldOptionColor.Purple">
            <summary>
            PURPLE
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2SingleSelectFieldOptionInput">
            <summary>
            Represents a single select field option
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SingleSelectFieldOptionInput.Name">
            <summary>
            The name of the option
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SingleSelectFieldOptionInput.Color">
            <summary>
            The display color of the option
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SingleSelectFieldOptionInput.Description">
            <summary>
            The description text of the option
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2SortBy">
            <summary>
            Represents a sort by field and direction.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SortBy.Direction">
            <summary>
            The direction of the sorting. Possible values are ASC and DESC.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SortBy.Field">
            <summary>
            The field by which items are sorted.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2SortByConnection">
            <summary>
            The connection type for ProjectV2SortBy.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SortByConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SortByConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SortByConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SortByConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2SortByEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SortByEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SortByEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2SortByField">
            <summary>
            Represents a sort by field and direction.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SortByField.Direction">
            <summary>
            The direction of the sorting. Possible values are ASC and DESC.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SortByField.Field">
            <summary>
            The field by which items are sorted.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2SortByFieldConnection">
            <summary>
            The connection type for ProjectV2SortByField.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SortByFieldConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SortByFieldConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SortByFieldConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SortByFieldConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2SortByFieldEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SortByFieldEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2SortByFieldEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2State">
            <summary>
            The possible states of a project v2.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2State.Open">
            <summary>
            A project v2 that is still open
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2State.Closed">
            <summary>
            A project v2 that has been closed
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2View">
            <summary>
            A view within a ProjectV2.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2View.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2View.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2View.Fields(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ProjectV2FieldOrder}})">
            <summary>
            The view's visible fields.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for the project v2 fields returned from the connection.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2View.Filter">
            <summary>
            The project view's filter.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2View.GroupBy(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ProjectV2FieldOrder}})">
            <summary>
            The view's group-by field.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for the project v2 fields returned from the connection.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2View.GroupByFields(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ProjectV2FieldOrder}})">
            <summary>
            The view's group-by field.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for the project v2 fields returned from the connection.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2View.Layout">
            <summary>
            The project view's layout.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2View.Name">
            <summary>
            The project view's name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2View.Number">
            <summary>
            The project view's number.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2View.Project">
            <summary>
            The project that contains this view.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2View.SortBy(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The view's sort-by config.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2View.SortByFields(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The view's sort-by config.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2View.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2View.VerticalGroupBy(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ProjectV2FieldOrder}})">
            <summary>
            The view's vertical-group-by field.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for the project v2 fields returned from the connection.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2View.VerticalGroupByFields(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ProjectV2FieldOrder}})">
            <summary>
            The view's vertical-group-by field.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for the project v2 fields returned from the connection.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.ProjectV2View.VisibleFields(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ProjectV2FieldOrder}})">
            <summary>
            The view's visible fields.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for the project v2 fields returned from the connection.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ViewConnection">
            <summary>
            The connection type for ProjectV2View.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ViewConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ViewConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ViewConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ViewConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ViewEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ViewEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ViewEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ViewLayout">
            <summary>
            The layout of a project v2 view.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2ViewLayout.BoardLayout">
            <summary>
            Board layout
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2ViewLayout.TableLayout">
            <summary>
            Table layout
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2ViewLayout.RoadmapLayout">
            <summary>
            Roadmap layout
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ViewOrder">
            <summary>
            Ordering options for project v2 view connections
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ViewOrder.Field">
            <summary>
            The field to order the project v2 views by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2ViewOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2ViewOrderField">
            <summary>
            Properties by which project v2 view connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2ViewOrderField.Position">
            <summary>
            Order project v2 views by position
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2ViewOrderField.CreatedAt">
            <summary>
            Order project v2 views by creation time
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2ViewOrderField.Name">
            <summary>
            Order project v2 views by name
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2Workflow">
            <summary>
            A workflow inside a project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Workflow.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Workflow.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Workflow.Enabled">
            <summary>
            The workflows' enabled state.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Workflow.Name">
            <summary>
            The workflows' name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Workflow.Number">
            <summary>
            The workflows' number.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Workflow.Project">
            <summary>
            The project that contains this workflow.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2Workflow.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2WorkflowConnection">
            <summary>
            The connection type for ProjectV2Workflow.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2WorkflowConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2WorkflowConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2WorkflowConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2WorkflowConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2WorkflowEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2WorkflowEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2WorkflowEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2WorkflowOrder">
            <summary>
            Ordering options for project v2 workflows connections
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2WorkflowOrder.Field">
            <summary>
            The field to order the project v2 workflows by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ProjectV2WorkflowOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ProjectV2WorkflowsOrderField">
            <summary>
            Properties by which project workflows can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2WorkflowsOrderField.Name">
            <summary>
            The workflows' name
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2WorkflowsOrderField.Number">
            <summary>
            The workflows' number
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2WorkflowsOrderField.UpdatedAt">
            <summary>
            The workflows' date and time of update
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ProjectV2WorkflowsOrderField.CreatedAt">
            <summary>
            The workflows' date and time of creation
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PublicKey">
            <summary>
            A user's public key.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PublicKey.AccessedAt">
            <summary>
            The last time this authorization was used to perform an action. Values will be null for keys not owned by the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PublicKey.CreatedAt">
            <summary>
            Identifies the date and time when the key was created. Keys created before March 5th, 2014 have inaccurate values. Values will be null for keys not owned by the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PublicKey.Fingerprint">
            <summary>
            The fingerprint for this PublicKey.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PublicKey.IsReadOnly">
            <summary>
            Whether this PublicKey is read-only or not. Values will be null for keys not owned by the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PublicKey.Key">
            <summary>
            The public key string.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PublicKey.UpdatedAt">
            <summary>
            Identifies the date and time when the key was updated. Keys created before March 5th, 2014 may have inaccurate values. Values will be null for keys not owned by the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PublicKeyConnection">
            <summary>
            The connection type for PublicKey.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PublicKeyConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PublicKeyConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PublicKeyConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PublicKeyConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PublicKeyEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PublicKeyEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PublicKeyEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PublishSponsorsTierInput">
            <summary>
            Autogenerated input type of PublishSponsorsTier
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PublishSponsorsTierInput.TierId">
            <summary>
            The ID of the draft tier to publish.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PublishSponsorsTierInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PublishSponsorsTierPayload">
            <summary>
            Autogenerated return type of PublishSponsorsTier
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PublishSponsorsTierPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PublishSponsorsTierPayload.SponsorsTier">
            <summary>
            The tier that was published.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequest">
            <summary>
            A repository pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ActiveLockReason">
            <summary>
            Reason that the conversation was locked.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.Additions">
            <summary>
            The number of additions in this pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequest.Assignees(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of Users assigned to this object.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.Author">
            <summary>
            The actor who authored the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.AuthorAssociation">
            <summary>
            Author's association with the subject of the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.AutoMergeRequest">
            <summary>
            Returns the auto-merge request object if one exists for this pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.BaseRef">
            <summary>
            Identifies the base Ref associated with the pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.BaseRefName">
            <summary>
            Identifies the name of the base Ref associated with the pull request, even if the ref has been deleted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.BaseRefOid">
            <summary>
            Identifies the oid of the base ref associated with the pull request, even if the ref has been deleted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.BaseRepository">
            <summary>
            The repository associated with this pull request's base Ref.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.Body">
            <summary>
            The body as Markdown.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.BodyHTML">
            <summary>
            The body rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.BodyText">
            <summary>
            The body rendered to text.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ChangedFiles">
            <summary>
            The number of changed files in this pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ChecksResourcePath">
            <summary>
            The HTTP path for the checks of this pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ChecksUrl">
            <summary>
            The HTTP URL for the checks of this pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.Closed">
            <summary>
            `true` if the pull request is closed
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ClosedAt">
            <summary>
            Identifies the date and time when the object was closed.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequest.ClosingIssuesReferences(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.IssueOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            List of issues that were may be closed by this pull request
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for issues returned from the connection</param>
            <param name="userLinkedOnly">Return only manually linked Issues</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequest.Comments(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.IssueCommentOrder}})">
            <summary>
            A list of comments associated with the pull request.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for issue comments returned from the connection.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequest.Commits(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of commits present in this pull request's head branch not present in the base branch.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.CreatedViaEmail">
            <summary>
            Check if this comment was created via an email reply.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.Deletions">
            <summary>
            The number of deletions in this pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.Editor">
            <summary>
            The actor who edited this pull request's body.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequest.Files(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            Lists the files changed within this pull request.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.HeadRef">
            <summary>
            Identifies the head Ref associated with the pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.HeadRefName">
            <summary>
            Identifies the name of the head Ref associated with the pull request, even if the ref has been deleted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.HeadRefOid">
            <summary>
            Identifies the oid of the head ref associated with the pull request, even if the ref has been deleted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.HeadRepository">
            <summary>
            The repository associated with this pull request's head Ref.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.HeadRepositoryOwner">
            <summary>
            The owner of the repository associated with this pull request's head Ref.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequest.Hovercard(System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            The hovercard information for this issue
            </summary>
            <param name="includeNotificationContexts">Whether or not to include notification contexts</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.IncludesCreatedEdit">
            <summary>
            Check if this comment was edited and includes an edit with the creation data
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.IsCrossRepository">
            <summary>
            The head and base repositories are different.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.IsDraft">
            <summary>
            Identifies if the pull request is a draft.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.IsReadByViewer">
            <summary>
            Is this pull request read by the viewer
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequest.Labels(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.LabelOrder}})">
            <summary>
            A list of labels associated with the object.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for labels returned from the connection.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.LastEditedAt">
            <summary>
            The moment the editor made the last edit
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequest.LatestOpinionatedReviews(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            A list of latest reviews per user associated with the pull request.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="writersOnly">Only return reviews from user who have write access to the repository</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequest.LatestReviews(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of latest reviews per user associated with the pull request that are not also pending review.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.Locked">
            <summary>
            `true` if the pull request is locked
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.MaintainerCanModify">
            <summary>
            Indicates whether maintainers can modify the pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.MergeCommit">
            <summary>
            The commit that was created when this pull request was merged.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.MergeQueueEntry">
            <summary>
            The merge queue entry of the pull request in the base branch's merge queue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.Mergeable">
            <summary>
            Whether or not the pull request can be merged based on the existence of merge conflicts.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.Merged">
            <summary>
            Whether or not the pull request was merged.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.MergedAt">
            <summary>
            The date and time that the pull request was merged.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.MergedBy">
            <summary>
            The actor who merged the pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.Milestone">
            <summary>
            Identifies the milestone associated with the pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.Number">
            <summary>
            Identifies the pull request number.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequest.Participants(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of Users that are participating in the Pull Request conversation.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.Permalink">
            <summary>
            The permalink to the pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.PotentialMergeCommit">
            <summary>
            The commit that GitHub automatically generated to test if this pull request could be merged. This field will not return a value if the pull request is merged, or if the test merge commit is still being generated. See the `mergeable` field for more details on the mergeability of the pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequest.ProjectCards(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.Nullable{Octokit.GraphQL.Model.ProjectCardArchivedState}}}})">
            <summary>
            List of project cards associated with this pull request.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="archivedStates">A list of archived states to filter the cards by</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequest.ProjectItems(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            List of project items associated with this pull request.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="includeArchived">Include archived items.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequest.ProjectV2(Octokit.GraphQL.Core.Arg{System.Int32})">
            <summary>
            Find a project by number.
            </summary>
            <param name="number">The project number.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequest.ProjectsV2(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ProjectV2Order}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of projects under the owner.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">How to order the returned projects.</param>
            <param name="query">A project to search for under the the owner.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.PublishedAt">
            <summary>
            Identifies when the comment was published at.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ReactionGroups">
            <summary>
            A list of reactions grouped by content left on the subject.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequest.Reactions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionContent}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionOrder}})">
            <summary>
            A list of Reactions left on the Issue.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="content">Allows filtering Reactions by emoji.</param>
            <param name="orderBy">Allows specifying the order in which reactions are returned.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.Repository">
            <summary>
            The repository associated with this node.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ResourcePath">
            <summary>
            The HTTP path for this pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.RevertResourcePath">
            <summary>
            The HTTP path for reverting this pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.RevertUrl">
            <summary>
            The HTTP URL for reverting this pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ReviewDecision">
            <summary>
            The current status of this pull request with respect to code review.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequest.ReviewRequests(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of review requests associated with the pull request.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequest.ReviewThreads(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The list of all review threads for this pull request.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequest.Reviews(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.PullRequestReviewState}}})">
            <summary>
            A list of reviews associated with the pull request.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="author">Filter by author of the review.</param>
            <param name="states">A list of states to filter the reviews.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.State">
            <summary>
            Identifies the state of the pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.SuggestedReviewers">
            <summary>
            A list of reviewer suggestions based on commit history and past review comments.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequest.Timeline(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.DateTimeOffset}})">
            <summary>
            A list of events, comments, commits, etc. associated with the pull request.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="since">Allows filtering timeline events by a `since` timestamp.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequest.TimelineItems(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.PullRequestTimelineItemsItemType}}},System.Nullable{Octokit.GraphQL.Core.Arg{System.DateTimeOffset}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            A list of events, comments, commits, etc. associated with the pull request.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="itemTypes">Filter timeline items by type.</param>
            <param name="since">Filter timeline items by a `since` timestamp.</param>
            <param name="skip">Skips the first _n_ elements in the list.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.Title">
            <summary>
            Identifies the pull request title.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.TitleHTML">
            <summary>
            Identifies the pull request title rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.TotalCommentsCount">
            <summary>
            Returns a count of how many comments this pull request has received.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.Url">
            <summary>
            The HTTP URL for this pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequest.UserContentEdits(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of edits to this content.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ViewerCanApplySuggestion">
            <summary>
            Whether or not the viewer can apply suggestion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ViewerCanClose">
            <summary>
            Indicates if the object can be closed by the viewer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ViewerCanDeleteHeadRef">
            <summary>
            Check if the viewer can restore the deleted head ref.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ViewerCanDisableAutoMerge">
            <summary>
            Whether or not the viewer can disable auto-merge
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ViewerCanEditFiles">
            <summary>
            Can the viewer edit files within this pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ViewerCanEnableAutoMerge">
            <summary>
            Whether or not the viewer can enable auto-merge
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ViewerCanMergeAsAdmin">
            <summary>
            Indicates whether the viewer can bypass branch protections and merge the pull request immediately
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ViewerCanReact">
            <summary>
            Can user react to this subject
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ViewerCanReopen">
            <summary>
            Indicates if the object can be reopened by the viewer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ViewerCanSubscribe">
            <summary>
            Check if the viewer is able to change their subscription status for the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ViewerCanUpdate">
            <summary>
            Check if the current viewer can update this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ViewerCanUpdateBranch">
            <summary>
            Whether or not the viewer can update the head ref of this PR, by merging or rebasing the base ref.
            If the head ref is up to date or unable to be updated by this user, this will return false.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ViewerCannotUpdateReasons">
            <summary>
            Reasons why the current viewer can not update this comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ViewerDidAuthor">
            <summary>
            Did the viewer author this comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ViewerLatestReview">
            <summary>
            The latest review given from the viewer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ViewerLatestReviewRequest">
            <summary>
            The person who has requested the viewer for review on this pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequest.ViewerMergeBodyText(System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.PullRequestMergeMethod}})">
            <summary>
            The merge body text for the viewer and method.
            </summary>
            <param name="mergeType">The merge method for the message.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequest.ViewerMergeHeadlineText(System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.PullRequestMergeMethod}})">
            <summary>
            The merge headline text for the viewer and method.
            </summary>
            <param name="mergeType">The merge method for the message.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequest.ViewerSubscription">
            <summary>
            Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestChangedFile">
            <summary>
            A file changed in a pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestChangedFile.Additions">
            <summary>
            The number of additions to the file.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestChangedFile.ChangeType">
            <summary>
            How the file was changed in this PullRequest
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestChangedFile.Deletions">
            <summary>
            The number of deletions to the file.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestChangedFile.Path">
            <summary>
            The path of the file.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestChangedFile.ViewerViewedState">
            <summary>
            The state of the file for the viewer.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestChangedFileConnection">
            <summary>
            The connection type for PullRequestChangedFile.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestChangedFileConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestChangedFileConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestChangedFileConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestChangedFileConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestChangedFileEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestChangedFileEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestChangedFileEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestCommit">
            <summary>
            Represents a Git commit part of a pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestCommit.Commit">
            <summary>
            The Git commit object
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestCommit.PullRequest">
            <summary>
            The pull request this commit belongs to
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestCommit.ResourcePath">
            <summary>
            The HTTP path for this pull request commit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestCommit.Url">
            <summary>
            The HTTP URL for this pull request commit
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestCommitCommentThread">
            <summary>
            Represents a commit comment thread part of a pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestCommitCommentThread.Comments(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The comments that exist in this thread.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestCommitCommentThread.Commit">
            <summary>
            The commit the comments were made on.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestCommitCommentThread.Path">
            <summary>
            The file the comments were made on.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestCommitCommentThread.Position">
            <summary>
            The position in the diff for the commit that the comment was made on.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestCommitCommentThread.PullRequest">
            <summary>
            The pull request this commit comment thread belongs to
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestCommitCommentThread.Repository">
            <summary>
            The repository associated with this node.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestCommitConnection">
            <summary>
            The connection type for PullRequestCommit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestCommitConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestCommitConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestCommitConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestCommitConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestCommitEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestCommitEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestCommitEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestConnection">
            <summary>
            The connection type for PullRequest.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestContributionsByRepository">
            <summary>
            This aggregates pull requests opened by a user within one repository.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestContributionsByRepository.Contributions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ContributionOrder}})">
            <summary>
            The pull request contributions.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for contributions returned from the connection.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestContributionsByRepository.Repository">
            <summary>
            The repository in which the pull requests were opened.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestMergeMethod">
            <summary>
            Represents available types of methods to use when merging a pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestMergeMethod.Merge">
            <summary>
            Add all commits from the head branch to the base branch with a merge commit.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestMergeMethod.Squash">
            <summary>
            Combine all commits from the head branch into a single commit in the base branch.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestMergeMethod.Rebase">
            <summary>
            Add all commits from the head branch onto the base branch individually.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestOrder">
            <summary>
            Ways in which lists of issues can be ordered upon return.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestOrder.Field">
            <summary>
            The field in which to order pull requests by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestOrder.Direction">
            <summary>
            The direction in which to order pull requests by the specified field.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestOrderField">
            <summary>
            Properties by which pull_requests connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestOrderField.CreatedAt">
            <summary>
            Order pull_requests by creation time
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestOrderField.UpdatedAt">
            <summary>
            Order pull_requests by update time
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestParameters">
            <summary>
            Require all commits be made to a non-target branch and submitted via a pull request before they can be merged.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestParameters.DismissStaleReviewsOnPush">
            <summary>
            New, reviewable commits pushed will dismiss previous pull request review approvals.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestParameters.RequireCodeOwnerReview">
            <summary>
            Require an approving review in pull requests that modify files that have a designated code owner.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestParameters.RequireLastPushApproval">
            <summary>
            Whether the most recent reviewable push must be approved by someone other than the person who pushed it.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestParameters.RequiredApprovingReviewCount">
            <summary>
            The number of approving reviews that are required before a pull request can be merged.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestParameters.RequiredReviewThreadResolution">
            <summary>
            All conversations on code must be resolved before a pull request can be merged.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestParametersInput">
            <summary>
            Require all commits be made to a non-target branch and submitted via a pull request before they can be merged.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestParametersInput.DismissStaleReviewsOnPush">
            <summary>
            New, reviewable commits pushed will dismiss previous pull request review approvals.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestParametersInput.RequireCodeOwnerReview">
            <summary>
            Require an approving review in pull requests that modify files that have a designated code owner.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestParametersInput.RequireLastPushApproval">
            <summary>
            Whether the most recent reviewable push must be approved by someone other than the person who pushed it.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestParametersInput.RequiredApprovingReviewCount">
            <summary>
            The number of approving reviews that are required before a pull request can be merged.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestParametersInput.RequiredReviewThreadResolution">
            <summary>
            All conversations on code must be resolved before a pull request can be merged.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestReview">
            <summary>
            A review object for a given pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.Author">
            <summary>
            The actor who authored the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.AuthorAssociation">
            <summary>
            Author's association with the subject of the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.AuthorCanPushToRepository">
            <summary>
            Indicates whether the author of this review has push access to the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.Body">
            <summary>
            Identifies the pull request review body.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.BodyHTML">
            <summary>
            The body rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.BodyText">
            <summary>
            The body of this review rendered as plain text.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestReview.Comments(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of review comments for the current pull request review.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.Commit">
            <summary>
            Identifies the commit associated with this pull request review.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.CreatedViaEmail">
            <summary>
            Check if this comment was created via an email reply.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.Editor">
            <summary>
            The actor who edited the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.IncludesCreatedEdit">
            <summary>
            Check if this comment was edited and includes an edit with the creation data
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.LastEditedAt">
            <summary>
            The moment the editor made the last edit
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestReview.OnBehalfOf(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of teams that this review was made on behalf of.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.PublishedAt">
            <summary>
            Identifies when the comment was published at.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.PullRequest">
            <summary>
            Identifies the pull request associated with this pull request review.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.ReactionGroups">
            <summary>
            A list of reactions grouped by content left on the subject.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestReview.Reactions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionContent}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionOrder}})">
            <summary>
            A list of Reactions left on the Issue.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="content">Allows filtering Reactions by emoji.</param>
            <param name="orderBy">Allows specifying the order in which reactions are returned.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.Repository">
            <summary>
            The repository associated with this node.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.ResourcePath">
            <summary>
            The HTTP path permalink for this PullRequestReview.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.State">
            <summary>
            Identifies the current state of the pull request review.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.SubmittedAt">
            <summary>
            Identifies when the Pull Request Review was submitted
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.Url">
            <summary>
            The HTTP URL permalink for this PullRequestReview.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestReview.UserContentEdits(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of edits to this content.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.ViewerCanDelete">
            <summary>
            Check if the current viewer can delete this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.ViewerCanReact">
            <summary>
            Can user react to this subject
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.ViewerCanUpdate">
            <summary>
            Check if the current viewer can update this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.ViewerCannotUpdateReasons">
            <summary>
            Reasons why the current viewer can not update this comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReview.ViewerDidAuthor">
            <summary>
            Did the viewer author this comment.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestReviewComment">
            <summary>
            A review comment associated with a given repository pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.Author">
            <summary>
            The actor who authored the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.AuthorAssociation">
            <summary>
            Author's association with the subject of the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.Body">
            <summary>
            The comment body of this review comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.BodyHTML">
            <summary>
            The body rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.BodyText">
            <summary>
            The comment body of this review comment rendered as plain text.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.Commit">
            <summary>
            Identifies the commit associated with the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.CreatedAt">
            <summary>
            Identifies when the comment was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.CreatedViaEmail">
            <summary>
            Check if this comment was created via an email reply.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.DiffHunk">
            <summary>
            The diff hunk to which the comment applies.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.DraftedAt">
            <summary>
            Identifies when the comment was created in a draft state.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.Editor">
            <summary>
            The actor who edited the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.IncludesCreatedEdit">
            <summary>
            Check if this comment was edited and includes an edit with the creation data
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.IsMinimized">
            <summary>
            Returns whether or not a comment has been minimized.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.LastEditedAt">
            <summary>
            The moment the editor made the last edit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.Line">
            <summary>
            The end line number on the file to which the comment applies
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.MinimizedReason">
            <summary>
            Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.OriginalCommit">
            <summary>
            Identifies the original commit associated with the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.OriginalLine">
            <summary>
            The end line number on the file to which the comment applied when it was first created
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.OriginalPosition">
            <summary>
            The original line index in the diff to which the comment applies.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.OriginalStartLine">
            <summary>
            The start line number on the file to which the comment applied when it was first created
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.Outdated">
            <summary>
            Identifies when the comment body is outdated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.Path">
            <summary>
            The path to which the comment applies.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.Position">
            <summary>
            The line index in the diff to which the comment applies.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.PublishedAt">
            <summary>
            Identifies when the comment was published at.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.PullRequest">
            <summary>
            The pull request associated with this review comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.PullRequestReview">
            <summary>
            The pull request review associated with this review comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.ReactionGroups">
            <summary>
            A list of reactions grouped by content left on the subject.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestReviewComment.Reactions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionContent}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionOrder}})">
            <summary>
            A list of Reactions left on the Issue.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="content">Allows filtering Reactions by emoji.</param>
            <param name="orderBy">Allows specifying the order in which reactions are returned.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.ReplyTo">
            <summary>
            The comment this is a reply to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.Repository">
            <summary>
            The repository associated with this node.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.ResourcePath">
            <summary>
            The HTTP path permalink for this review comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.StartLine">
            <summary>
            The start line number on the file to which the comment applies
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.State">
            <summary>
            Identifies the state of the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.SubjectType">
            <summary>
            The level at which the comments in the corresponding thread are targeted, can be a diff line or a file
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.UpdatedAt">
            <summary>
            Identifies when the comment was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.Url">
            <summary>
            The HTTP URL permalink for this review comment.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestReviewComment.UserContentEdits(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of edits to this content.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.ViewerCanDelete">
            <summary>
            Check if the current viewer can delete this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.ViewerCanMinimize">
            <summary>
            Check if the current viewer can minimize this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.ViewerCanReact">
            <summary>
            Can user react to this subject
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.ViewerCanUpdate">
            <summary>
            Check if the current viewer can update this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.ViewerCannotUpdateReasons">
            <summary>
            Reasons why the current viewer can not update this comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewComment.ViewerDidAuthor">
            <summary>
            Did the viewer author this comment.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestReviewCommentConnection">
            <summary>
            The connection type for PullRequestReviewComment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewCommentConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewCommentConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewCommentConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewCommentConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestReviewCommentEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewCommentEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewCommentEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestReviewCommentState">
            <summary>
            The possible states of a pull request review comment.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestReviewCommentState.Pending">
            <summary>
            A comment that is part of a pending review
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestReviewCommentState.Submitted">
            <summary>
            A comment that is part of a submitted review
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestReviewConnection">
            <summary>
            The connection type for PullRequestReview.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestReviewContributionsByRepository">
            <summary>
            This aggregates pull request reviews made by a user within one repository.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestReviewContributionsByRepository.Contributions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ContributionOrder}})">
            <summary>
            The pull request review contributions.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for contributions returned from the connection.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewContributionsByRepository.Repository">
            <summary>
            The repository in which the pull request reviews were made.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestReviewDecision">
            <summary>
            The review status of a pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestReviewDecision.ChangesRequested">
            <summary>
            Changes have been requested on the pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestReviewDecision.Approved">
            <summary>
            The pull request has received an approving review.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestReviewDecision.ReviewRequired">
            <summary>
            A review is required before the pull request can be merged.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestReviewEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestReviewEvent">
            <summary>
            The possible events to perform on a pull request review.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestReviewEvent.Comment">
            <summary>
            Submit general feedback without explicit approval.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestReviewEvent.Approve">
            <summary>
            Submit feedback and approve merging these changes.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestReviewEvent.RequestChanges">
            <summary>
            Submit feedback that must be addressed before merging.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestReviewEvent.Dismiss">
            <summary>
            Dismiss review so it now longer effects merging.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestReviewState">
            <summary>
            The possible states of a pull request review.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestReviewState.Pending">
            <summary>
            A review that has not yet been submitted.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestReviewState.Commented">
            <summary>
            An informational review.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestReviewState.Approved">
            <summary>
            A review allowing the pull request to merge.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestReviewState.ChangesRequested">
            <summary>
            A review blocking the pull request from merging.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestReviewState.Dismissed">
            <summary>
            A review that has been dismissed.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestReviewThread">
            <summary>
            A threaded list of comments for a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestReviewThread.Comments(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            A list of pull request comments associated with the thread.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="skip">Skips the first _n_ elements in the list.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewThread.DiffSide">
            <summary>
            The side of the diff on which this thread was placed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewThread.IsCollapsed">
            <summary>
            Whether or not the thread has been collapsed (resolved)
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewThread.IsOutdated">
            <summary>
            Indicates whether this thread was outdated by newer changes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewThread.IsResolved">
            <summary>
            Whether this thread has been resolved
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewThread.Line">
            <summary>
            The line in the file to which this thread refers
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewThread.OriginalLine">
            <summary>
            The original line in the file to which this thread refers.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewThread.OriginalStartLine">
            <summary>
            The original start line in the file to which this thread refers (multi-line only).
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewThread.Path">
            <summary>
            Identifies the file path of this thread.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewThread.PullRequest">
            <summary>
            Identifies the pull request associated with this thread.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewThread.Repository">
            <summary>
            Identifies the repository associated with this thread.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewThread.ResolvedBy">
            <summary>
            The user who resolved this thread
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewThread.StartDiffSide">
            <summary>
            The side of the diff that the first line of the thread starts on (multi-line only)
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewThread.StartLine">
            <summary>
            The start line in the file to which this thread refers (multi-line only)
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewThread.SubjectType">
            <summary>
            The level at which the comments in the corresponding thread are targeted, can be a diff line or a file
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewThread.ViewerCanReply">
            <summary>
            Indicates whether the current viewer can reply to this thread.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewThread.ViewerCanResolve">
            <summary>
            Whether or not the viewer can resolve this thread
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewThread.ViewerCanUnresolve">
            <summary>
            Whether or not the viewer can unresolve this thread
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestReviewThreadConnection">
            <summary>
            Review comment threads for a pull request review.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewThreadConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewThreadConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewThreadConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewThreadConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestReviewThreadEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewThreadEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestReviewThreadEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestReviewThreadSubjectType">
            <summary>
            The possible subject types of a pull request review comment.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestReviewThreadSubjectType.Line">
            <summary>
            A comment that has been made against the line of a pull request
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestReviewThreadSubjectType.File">
            <summary>
            A comment that has been made against the file of a pull request
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestRevisionMarker">
            <summary>
            Represents the latest point in the pull request timeline for which the viewer has seen the pull request's commits.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestRevisionMarker.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestRevisionMarker.LastSeenCommit">
            <summary>
            The last commit the viewer has seen.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestRevisionMarker.PullRequest">
            <summary>
            The pull request to which the marker belongs.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestState">
            <summary>
            The possible states of a pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestState.Open">
            <summary>
            A pull request that is still open.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestState.Closed">
            <summary>
            A pull request that has been closed without being merged.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestState.Merged">
            <summary>
            A pull request that has been closed by being merged.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestTemplate">
            <summary>
            A repository pull request template.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestTemplate.Body">
            <summary>
            The body of the template
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestTemplate.Filename">
            <summary>
            The filename of the template
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestTemplate.Repository">
            <summary>
            The repository the template belongs to
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestThread">
            <summary>
            A threaded list of comments for a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestThread.Comments(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            A list of pull request comments associated with the thread.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="skip">Skips the first _n_ elements in the list.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestThread.DiffSide">
            <summary>
            The side of the diff on which this thread was placed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestThread.IsCollapsed">
            <summary>
            Whether or not the thread has been collapsed (resolved)
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestThread.IsOutdated">
            <summary>
            Indicates whether this thread was outdated by newer changes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestThread.IsResolved">
            <summary>
            Whether this thread has been resolved
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestThread.Line">
            <summary>
            The line in the file to which this thread refers
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestThread.PullRequest">
            <summary>
            Identifies the pull request associated with this thread.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestThread.Repository">
            <summary>
            Identifies the repository associated with this thread.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestThread.ResolvedBy">
            <summary>
            The user who resolved this thread
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestThread.StartDiffSide">
            <summary>
            The side of the diff that the first line of the thread starts on (multi-line only)
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestThread.StartLine">
            <summary>
            The line of the first file diff in the thread.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestThread.ViewerCanReply">
            <summary>
            Indicates whether the current viewer can reply to this thread.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestThread.ViewerCanResolve">
            <summary>
            Whether or not the viewer can resolve this thread
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestThread.ViewerCanUnresolve">
            <summary>
            Whether or not the viewer can unresolve this thread
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestTimelineConnection">
            <summary>
            The connection type for PullRequestTimelineItem.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestTimelineConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestTimelineConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestTimelineConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestTimelineConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestTimelineItem">
            <summary>
            An item in a pull request timeline
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.AssignedEvent(System.Func{Octokit.GraphQL.Model.AssignedEvent,`0})">
            <summary>
            Represents an 'assigned' event on any assignable object.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.BaseRefDeletedEvent(System.Func{Octokit.GraphQL.Model.BaseRefDeletedEvent,`0})">
            <summary>
            Represents a 'base_ref_deleted' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.BaseRefForcePushedEvent(System.Func{Octokit.GraphQL.Model.BaseRefForcePushedEvent,`0})">
            <summary>
            Represents a 'base_ref_force_pushed' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.ClosedEvent(System.Func{Octokit.GraphQL.Model.ClosedEvent,`0})">
            <summary>
            Represents a 'closed' event on any `Closable`.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.Commit(System.Func{Octokit.GraphQL.Model.Commit,`0})">
            <summary>
            Represents a Git commit.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.CommitCommentThread(System.Func{Octokit.GraphQL.Model.CommitCommentThread,`0})">
            <summary>
            A thread of comments on a commit.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.CrossReferencedEvent(System.Func{Octokit.GraphQL.Model.CrossReferencedEvent,`0})">
            <summary>
            Represents a mention made by one issue or pull request to another.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.DemilestonedEvent(System.Func{Octokit.GraphQL.Model.DemilestonedEvent,`0})">
            <summary>
            Represents a 'demilestoned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.DeployedEvent(System.Func{Octokit.GraphQL.Model.DeployedEvent,`0})">
            <summary>
            Represents a 'deployed' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.DeploymentEnvironmentChangedEvent(System.Func{Octokit.GraphQL.Model.DeploymentEnvironmentChangedEvent,`0})">
            <summary>
            Represents a 'deployment_environment_changed' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.HeadRefDeletedEvent(System.Func{Octokit.GraphQL.Model.HeadRefDeletedEvent,`0})">
            <summary>
            Represents a 'head_ref_deleted' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.HeadRefForcePushedEvent(System.Func{Octokit.GraphQL.Model.HeadRefForcePushedEvent,`0})">
            <summary>
            Represents a 'head_ref_force_pushed' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.HeadRefRestoredEvent(System.Func{Octokit.GraphQL.Model.HeadRefRestoredEvent,`0})">
            <summary>
            Represents a 'head_ref_restored' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.IssueComment(System.Func{Octokit.GraphQL.Model.IssueComment,`0})">
            <summary>
            Represents a comment on an Issue.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.LabeledEvent(System.Func{Octokit.GraphQL.Model.LabeledEvent,`0})">
            <summary>
            Represents a 'labeled' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.LockedEvent(System.Func{Octokit.GraphQL.Model.LockedEvent,`0})">
            <summary>
            Represents a 'locked' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.MergedEvent(System.Func{Octokit.GraphQL.Model.MergedEvent,`0})">
            <summary>
            Represents a 'merged' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.MilestonedEvent(System.Func{Octokit.GraphQL.Model.MilestonedEvent,`0})">
            <summary>
            Represents a 'milestoned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.PullRequestReview(System.Func{Octokit.GraphQL.Model.PullRequestReview,`0})">
            <summary>
            A review object for a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.PullRequestReviewComment(System.Func{Octokit.GraphQL.Model.PullRequestReviewComment,`0})">
            <summary>
            A review comment associated with a given repository pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.PullRequestReviewThread(System.Func{Octokit.GraphQL.Model.PullRequestReviewThread,`0})">
            <summary>
            A threaded list of comments for a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.ReferencedEvent(System.Func{Octokit.GraphQL.Model.ReferencedEvent,`0})">
            <summary>
            Represents a 'referenced' event on a given `ReferencedSubject`.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.RenamedTitleEvent(System.Func{Octokit.GraphQL.Model.RenamedTitleEvent,`0})">
            <summary>
            Represents a 'renamed' event on a given issue or pull request
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.ReopenedEvent(System.Func{Octokit.GraphQL.Model.ReopenedEvent,`0})">
            <summary>
            Represents a 'reopened' event on any `Closable`.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.ReviewDismissedEvent(System.Func{Octokit.GraphQL.Model.ReviewDismissedEvent,`0})">
            <summary>
            Represents a 'review_dismissed' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.ReviewRequestRemovedEvent(System.Func{Octokit.GraphQL.Model.ReviewRequestRemovedEvent,`0})">
            <summary>
            Represents an 'review_request_removed' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.ReviewRequestedEvent(System.Func{Octokit.GraphQL.Model.ReviewRequestedEvent,`0})">
            <summary>
            Represents an 'review_requested' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.SubscribedEvent(System.Func{Octokit.GraphQL.Model.SubscribedEvent,`0})">
            <summary>
            Represents a 'subscribed' event on a given `Subscribable`.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.UnassignedEvent(System.Func{Octokit.GraphQL.Model.UnassignedEvent,`0})">
            <summary>
            Represents an 'unassigned' event on any assignable object.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.UnlabeledEvent(System.Func{Octokit.GraphQL.Model.UnlabeledEvent,`0})">
            <summary>
            Represents an 'unlabeled' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.UnlockedEvent(System.Func{Octokit.GraphQL.Model.UnlockedEvent,`0})">
            <summary>
            Represents an 'unlocked' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.UnsubscribedEvent(System.Func{Octokit.GraphQL.Model.UnsubscribedEvent,`0})">
            <summary>
            Represents an 'unsubscribed' event on a given `Subscribable`.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItem.Selector`1.UserBlockedEvent(System.Func{Octokit.GraphQL.Model.UserBlockedEvent,`0})">
            <summary>
            Represents a 'user_blocked' event on a given user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestTimelineItemEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestTimelineItemEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestTimelineItemEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestTimelineItems">
            <summary>
            An item in a pull request timeline
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.AddedToMergeQueueEvent(System.Func{Octokit.GraphQL.Model.AddedToMergeQueueEvent,`0})">
            <summary>
            Represents an 'added_to_merge_queue' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.AddedToProjectEvent(System.Func{Octokit.GraphQL.Model.AddedToProjectEvent,`0})">
            <summary>
            Represents a 'added_to_project' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.AssignedEvent(System.Func{Octokit.GraphQL.Model.AssignedEvent,`0})">
            <summary>
            Represents an 'assigned' event on any assignable object.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.AutoMergeDisabledEvent(System.Func{Octokit.GraphQL.Model.AutoMergeDisabledEvent,`0})">
            <summary>
            Represents a 'auto_merge_disabled' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.AutoMergeEnabledEvent(System.Func{Octokit.GraphQL.Model.AutoMergeEnabledEvent,`0})">
            <summary>
            Represents a 'auto_merge_enabled' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.AutoRebaseEnabledEvent(System.Func{Octokit.GraphQL.Model.AutoRebaseEnabledEvent,`0})">
            <summary>
            Represents a 'auto_rebase_enabled' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.AutoSquashEnabledEvent(System.Func{Octokit.GraphQL.Model.AutoSquashEnabledEvent,`0})">
            <summary>
            Represents a 'auto_squash_enabled' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.AutomaticBaseChangeFailedEvent(System.Func{Octokit.GraphQL.Model.AutomaticBaseChangeFailedEvent,`0})">
            <summary>
            Represents a 'automatic_base_change_failed' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.AutomaticBaseChangeSucceededEvent(System.Func{Octokit.GraphQL.Model.AutomaticBaseChangeSucceededEvent,`0})">
            <summary>
            Represents a 'automatic_base_change_succeeded' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.BaseRefChangedEvent(System.Func{Octokit.GraphQL.Model.BaseRefChangedEvent,`0})">
            <summary>
            Represents a 'base_ref_changed' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.BaseRefDeletedEvent(System.Func{Octokit.GraphQL.Model.BaseRefDeletedEvent,`0})">
            <summary>
            Represents a 'base_ref_deleted' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.BaseRefForcePushedEvent(System.Func{Octokit.GraphQL.Model.BaseRefForcePushedEvent,`0})">
            <summary>
            Represents a 'base_ref_force_pushed' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.ClosedEvent(System.Func{Octokit.GraphQL.Model.ClosedEvent,`0})">
            <summary>
            Represents a 'closed' event on any `Closable`.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.CommentDeletedEvent(System.Func{Octokit.GraphQL.Model.CommentDeletedEvent,`0})">
            <summary>
            Represents a 'comment_deleted' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.ConnectedEvent(System.Func{Octokit.GraphQL.Model.ConnectedEvent,`0})">
            <summary>
            Represents a 'connected' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.ConvertToDraftEvent(System.Func{Octokit.GraphQL.Model.ConvertToDraftEvent,`0})">
            <summary>
            Represents a 'convert_to_draft' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.ConvertedNoteToIssueEvent(System.Func{Octokit.GraphQL.Model.ConvertedNoteToIssueEvent,`0})">
            <summary>
            Represents a 'converted_note_to_issue' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.ConvertedToDiscussionEvent(System.Func{Octokit.GraphQL.Model.ConvertedToDiscussionEvent,`0})">
            <summary>
            Represents a 'converted_to_discussion' event on a given issue.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.CrossReferencedEvent(System.Func{Octokit.GraphQL.Model.CrossReferencedEvent,`0})">
            <summary>
            Represents a mention made by one issue or pull request to another.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.DemilestonedEvent(System.Func{Octokit.GraphQL.Model.DemilestonedEvent,`0})">
            <summary>
            Represents a 'demilestoned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.DeployedEvent(System.Func{Octokit.GraphQL.Model.DeployedEvent,`0})">
            <summary>
            Represents a 'deployed' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.DeploymentEnvironmentChangedEvent(System.Func{Octokit.GraphQL.Model.DeploymentEnvironmentChangedEvent,`0})">
            <summary>
            Represents a 'deployment_environment_changed' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.DisconnectedEvent(System.Func{Octokit.GraphQL.Model.DisconnectedEvent,`0})">
            <summary>
            Represents a 'disconnected' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.HeadRefDeletedEvent(System.Func{Octokit.GraphQL.Model.HeadRefDeletedEvent,`0})">
            <summary>
            Represents a 'head_ref_deleted' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.HeadRefForcePushedEvent(System.Func{Octokit.GraphQL.Model.HeadRefForcePushedEvent,`0})">
            <summary>
            Represents a 'head_ref_force_pushed' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.HeadRefRestoredEvent(System.Func{Octokit.GraphQL.Model.HeadRefRestoredEvent,`0})">
            <summary>
            Represents a 'head_ref_restored' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.IssueComment(System.Func{Octokit.GraphQL.Model.IssueComment,`0})">
            <summary>
            Represents a comment on an Issue.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.LabeledEvent(System.Func{Octokit.GraphQL.Model.LabeledEvent,`0})">
            <summary>
            Represents a 'labeled' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.LockedEvent(System.Func{Octokit.GraphQL.Model.LockedEvent,`0})">
            <summary>
            Represents a 'locked' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.MarkedAsDuplicateEvent(System.Func{Octokit.GraphQL.Model.MarkedAsDuplicateEvent,`0})">
            <summary>
            Represents a 'marked_as_duplicate' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.MentionedEvent(System.Func{Octokit.GraphQL.Model.MentionedEvent,`0})">
            <summary>
            Represents a 'mentioned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.MergedEvent(System.Func{Octokit.GraphQL.Model.MergedEvent,`0})">
            <summary>
            Represents a 'merged' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.MilestonedEvent(System.Func{Octokit.GraphQL.Model.MilestonedEvent,`0})">
            <summary>
            Represents a 'milestoned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.MovedColumnsInProjectEvent(System.Func{Octokit.GraphQL.Model.MovedColumnsInProjectEvent,`0})">
            <summary>
            Represents a 'moved_columns_in_project' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.PinnedEvent(System.Func{Octokit.GraphQL.Model.PinnedEvent,`0})">
            <summary>
            Represents a 'pinned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.PullRequestCommit(System.Func{Octokit.GraphQL.Model.PullRequestCommit,`0})">
            <summary>
            Represents a Git commit part of a pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.PullRequestCommitCommentThread(System.Func{Octokit.GraphQL.Model.PullRequestCommitCommentThread,`0})">
            <summary>
            Represents a commit comment thread part of a pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.PullRequestReview(System.Func{Octokit.GraphQL.Model.PullRequestReview,`0})">
            <summary>
            A review object for a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.PullRequestReviewThread(System.Func{Octokit.GraphQL.Model.PullRequestReviewThread,`0})">
            <summary>
            A threaded list of comments for a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.PullRequestRevisionMarker(System.Func{Octokit.GraphQL.Model.PullRequestRevisionMarker,`0})">
            <summary>
            Represents the latest point in the pull request timeline for which the viewer has seen the pull request's commits.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.ReadyForReviewEvent(System.Func{Octokit.GraphQL.Model.ReadyForReviewEvent,`0})">
            <summary>
            Represents a 'ready_for_review' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.ReferencedEvent(System.Func{Octokit.GraphQL.Model.ReferencedEvent,`0})">
            <summary>
            Represents a 'referenced' event on a given `ReferencedSubject`.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.RemovedFromMergeQueueEvent(System.Func{Octokit.GraphQL.Model.RemovedFromMergeQueueEvent,`0})">
            <summary>
            Represents a 'removed_from_merge_queue' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.RemovedFromProjectEvent(System.Func{Octokit.GraphQL.Model.RemovedFromProjectEvent,`0})">
            <summary>
            Represents a 'removed_from_project' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.RenamedTitleEvent(System.Func{Octokit.GraphQL.Model.RenamedTitleEvent,`0})">
            <summary>
            Represents a 'renamed' event on a given issue or pull request
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.ReopenedEvent(System.Func{Octokit.GraphQL.Model.ReopenedEvent,`0})">
            <summary>
            Represents a 'reopened' event on any `Closable`.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.ReviewDismissedEvent(System.Func{Octokit.GraphQL.Model.ReviewDismissedEvent,`0})">
            <summary>
            Represents a 'review_dismissed' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.ReviewRequestRemovedEvent(System.Func{Octokit.GraphQL.Model.ReviewRequestRemovedEvent,`0})">
            <summary>
            Represents an 'review_request_removed' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.ReviewRequestedEvent(System.Func{Octokit.GraphQL.Model.ReviewRequestedEvent,`0})">
            <summary>
            Represents an 'review_requested' event on a given pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.SubscribedEvent(System.Func{Octokit.GraphQL.Model.SubscribedEvent,`0})">
            <summary>
            Represents a 'subscribed' event on a given `Subscribable`.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.TransferredEvent(System.Func{Octokit.GraphQL.Model.TransferredEvent,`0})">
            <summary>
            Represents a 'transferred' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.UnassignedEvent(System.Func{Octokit.GraphQL.Model.UnassignedEvent,`0})">
            <summary>
            Represents an 'unassigned' event on any assignable object.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.UnlabeledEvent(System.Func{Octokit.GraphQL.Model.UnlabeledEvent,`0})">
            <summary>
            Represents an 'unlabeled' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.UnlockedEvent(System.Func{Octokit.GraphQL.Model.UnlockedEvent,`0})">
            <summary>
            Represents an 'unlocked' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.UnmarkedAsDuplicateEvent(System.Func{Octokit.GraphQL.Model.UnmarkedAsDuplicateEvent,`0})">
            <summary>
            Represents an 'unmarked_as_duplicate' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.UnpinnedEvent(System.Func{Octokit.GraphQL.Model.UnpinnedEvent,`0})">
            <summary>
            Represents an 'unpinned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.UnsubscribedEvent(System.Func{Octokit.GraphQL.Model.UnsubscribedEvent,`0})">
            <summary>
            Represents an 'unsubscribed' event on a given `Subscribable`.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PullRequestTimelineItems.Selector`1.UserBlockedEvent(System.Func{Octokit.GraphQL.Model.UserBlockedEvent,`0})">
            <summary>
            Represents a 'user_blocked' event on a given user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestTimelineItemsConnection">
            <summary>
            The connection type for PullRequestTimelineItems.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestTimelineItemsConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestTimelineItemsConnection.FilteredCount">
            <summary>
            Identifies the count of items after applying `before` and `after` filters.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestTimelineItemsConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestTimelineItemsConnection.PageCount">
            <summary>
            Identifies the count of items after applying `before`/`after` filters and `first`/`last`/`skip` slicing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestTimelineItemsConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestTimelineItemsConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestTimelineItemsConnection.UpdatedAt">
            <summary>
            Identifies the date and time when the timeline was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestTimelineItemsEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestTimelineItemsEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PullRequestTimelineItemsEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType">
            <summary>
            The possible item types found in a timeline.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.PullRequestCommit">
            <summary>
            Represents a Git commit part of a pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.PullRequestCommitCommentThread">
            <summary>
            Represents a commit comment thread part of a pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.PullRequestReview">
            <summary>
            A review object for a given pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.PullRequestReviewThread">
            <summary>
            A threaded list of comments for a given pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.PullRequestRevisionMarker">
            <summary>
            Represents the latest point in the pull request timeline for which the viewer has seen the pull request's commits.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.AutomaticBaseChangeFailedEvent">
            <summary>
            Represents a 'automatic_base_change_failed' event on a given pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.AutomaticBaseChangeSucceededEvent">
            <summary>
            Represents a 'automatic_base_change_succeeded' event on a given pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.AutoMergeDisabledEvent">
            <summary>
            Represents a 'auto_merge_disabled' event on a given pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.AutoMergeEnabledEvent">
            <summary>
            Represents a 'auto_merge_enabled' event on a given pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.AutoRebaseEnabledEvent">
            <summary>
            Represents a 'auto_rebase_enabled' event on a given pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.AutoSquashEnabledEvent">
            <summary>
            Represents a 'auto_squash_enabled' event on a given pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.BaseRefChangedEvent">
            <summary>
            Represents a 'base_ref_changed' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.BaseRefForcePushedEvent">
            <summary>
            Represents a 'base_ref_force_pushed' event on a given pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.BaseRefDeletedEvent">
            <summary>
            Represents a 'base_ref_deleted' event on a given pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.DeployedEvent">
            <summary>
            Represents a 'deployed' event on a given pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.DeploymentEnvironmentChangedEvent">
            <summary>
            Represents a 'deployment_environment_changed' event on a given pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.HeadRefDeletedEvent">
            <summary>
            Represents a 'head_ref_deleted' event on a given pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.HeadRefForcePushedEvent">
            <summary>
            Represents a 'head_ref_force_pushed' event on a given pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.HeadRefRestoredEvent">
            <summary>
            Represents a 'head_ref_restored' event on a given pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.MergedEvent">
            <summary>
            Represents a 'merged' event on a given pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.ReviewDismissedEvent">
            <summary>
            Represents a 'review_dismissed' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.ReviewRequestedEvent">
            <summary>
            Represents an 'review_requested' event on a given pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.ReviewRequestRemovedEvent">
            <summary>
            Represents an 'review_request_removed' event on a given pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.ReadyForReviewEvent">
            <summary>
            Represents a 'ready_for_review' event on a given pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.ConvertToDraftEvent">
            <summary>
            Represents a 'convert_to_draft' event on a given pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.AddedToMergeQueueEvent">
            <summary>
            Represents an 'added_to_merge_queue' event on a given pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.RemovedFromMergeQueueEvent">
            <summary>
            Represents a 'removed_from_merge_queue' event on a given pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.IssueComment">
            <summary>
            Represents a comment on an Issue.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.CrossReferencedEvent">
            <summary>
            Represents a mention made by one issue or pull request to another.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.AddedToProjectEvent">
            <summary>
            Represents a 'added_to_project' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.AssignedEvent">
            <summary>
            Represents an 'assigned' event on any assignable object.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.ClosedEvent">
            <summary>
            Represents a 'closed' event on any `Closable`.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.CommentDeletedEvent">
            <summary>
            Represents a 'comment_deleted' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.ConnectedEvent">
            <summary>
            Represents a 'connected' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.ConvertedNoteToIssueEvent">
            <summary>
            Represents a 'converted_note_to_issue' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.ConvertedToDiscussionEvent">
            <summary>
            Represents a 'converted_to_discussion' event on a given issue.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.DemilestonedEvent">
            <summary>
            Represents a 'demilestoned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.DisconnectedEvent">
            <summary>
            Represents a 'disconnected' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.LabeledEvent">
            <summary>
            Represents a 'labeled' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.LockedEvent">
            <summary>
            Represents a 'locked' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.MarkedAsDuplicateEvent">
            <summary>
            Represents a 'marked_as_duplicate' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.MentionedEvent">
            <summary>
            Represents a 'mentioned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.MilestonedEvent">
            <summary>
            Represents a 'milestoned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.MovedColumnsInProjectEvent">
            <summary>
            Represents a 'moved_columns_in_project' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.PinnedEvent">
            <summary>
            Represents a 'pinned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.ReferencedEvent">
            <summary>
            Represents a 'referenced' event on a given `ReferencedSubject`.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.RemovedFromProjectEvent">
            <summary>
            Represents a 'removed_from_project' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.RenamedTitleEvent">
            <summary>
            Represents a 'renamed' event on a given issue or pull request
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.ReopenedEvent">
            <summary>
            Represents a 'reopened' event on any `Closable`.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.SubscribedEvent">
            <summary>
            Represents a 'subscribed' event on a given `Subscribable`.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.TransferredEvent">
            <summary>
            Represents a 'transferred' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.UnassignedEvent">
            <summary>
            Represents an 'unassigned' event on any assignable object.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.UnlabeledEvent">
            <summary>
            Represents an 'unlabeled' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.UnlockedEvent">
            <summary>
            Represents an 'unlocked' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.UserBlockedEvent">
            <summary>
            Represents a 'user_blocked' event on a given user.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.UnmarkedAsDuplicateEvent">
            <summary>
            Represents an 'unmarked_as_duplicate' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.UnpinnedEvent">
            <summary>
            Represents an 'unpinned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestTimelineItemsItemType.UnsubscribedEvent">
            <summary>
            Represents an 'unsubscribed' event on a given `Subscribable`.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PullRequestUpdateState">
            <summary>
            The possible target states when updating a pull request.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestUpdateState.Open">
            <summary>
            A pull request that is still open.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.PullRequestUpdateState.Closed">
            <summary>
            A pull request that has been closed without being merged.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Push">
            <summary>
            A Git push.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Push.NextSha">
            <summary>
            The SHA after the push
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Push.Permalink">
            <summary>
            The permalink for this push.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Push.PreviousSha">
            <summary>
            The SHA before the push
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Push.Pusher">
            <summary>
            The actor who pushed
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Push.Repository">
            <summary>
            The repository that was pushed to
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PushAllowance">
            <summary>
            A team, user, or app who has the ability to push to a protected branch.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PushAllowance.Actor">
            <summary>
            The actor that can push.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PushAllowance.BranchProtectionRule">
            <summary>
            Identifies the branch protection rule associated with the allowed user, team, or app.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PushAllowanceActor">
            <summary>
            Types that can be an actor.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PushAllowanceActor.Selector`1.App(System.Func{Octokit.GraphQL.Model.App,`0})">
            <summary>
            A GitHub App.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PushAllowanceActor.Selector`1.Team(System.Func{Octokit.GraphQL.Model.Team,`0})">
            <summary>
            A team of users in an organization.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.PushAllowanceActor.Selector`1.User(System.Func{Octokit.GraphQL.Model.User,`0})">
            <summary>
            A user is an individual's account on GitHub that owns repositories and can make new content.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PushAllowanceConnection">
            <summary>
            The connection type for PushAllowance.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PushAllowanceConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PushAllowanceConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PushAllowanceConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PushAllowanceConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.PushAllowanceEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PushAllowanceEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.PushAllowanceEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RateLimit">
            <summary>
            Represents the client's rate limit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RateLimit.Cost">
            <summary>
            The point cost for the current query counting against the rate limit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RateLimit.Limit">
            <summary>
            The maximum number of points the client is permitted to consume in a 60 minute window.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RateLimit.NodeCount">
            <summary>
            The maximum number of nodes this query may return
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RateLimit.Remaining">
            <summary>
            The number of points remaining in the current rate limit window.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RateLimit.ResetAt">
            <summary>
            The time at which the current rate limit window resets in UTC epoch seconds.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RateLimit.Used">
            <summary>
            The number of points used in the current rate limit window.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IReactable">
            <summary>
            Represents a subject that can be reacted on.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IReactable.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IReactable.ReactionGroups">
            <summary>
            A list of reactions grouped by content left on the subject.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IReactable.Reactions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionContent}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionOrder}})">
            <summary>
            A list of Reactions left on the Issue.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="content">Allows filtering Reactions by emoji.</param>
            <param name="orderBy">Allows specifying the order in which reactions are returned.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.IReactable.ViewerCanReact">
            <summary>
            Can user react to this subject
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReactingUserConnection">
            <summary>
            The connection type for User.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactingUserConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactingUserConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactingUserConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactingUserConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReactingUserEdge">
            <summary>
            Represents a user that's made a reaction.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactingUserEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactingUserEdge.ReactedAt">
            <summary>
            The moment when the user made the reaction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Reaction">
            <summary>
            An emoji reaction to a particular piece of content.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Reaction.Content">
            <summary>
            Identifies the emoji reaction.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Reaction.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Reaction.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Reaction.Reactable">
            <summary>
            The reactable piece of content
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Reaction.User">
            <summary>
            Identifies the user who created this reaction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReactionConnection">
            <summary>
            A list of reactions that have been left on the subject.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactionConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactionConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactionConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactionConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactionConnection.ViewerHasReacted">
            <summary>
            Whether or not the authenticated user has left a reaction on the subject.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReactionContent">
            <summary>
            Emojis that can be attached to Issues, Pull Requests and Comments.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ReactionContent.ThumbsUp">
            <summary>
            Represents the `:+1:` emoji.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ReactionContent.ThumbsDown">
            <summary>
            Represents the `:-1:` emoji.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ReactionContent.Laugh">
            <summary>
            Represents the `:laugh:` emoji.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ReactionContent.Hooray">
            <summary>
            Represents the `:hooray:` emoji.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ReactionContent.Confused">
            <summary>
            Represents the `:confused:` emoji.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ReactionContent.Heart">
            <summary>
            Represents the `:heart:` emoji.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ReactionContent.Rocket">
            <summary>
            Represents the `:rocket:` emoji.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ReactionContent.Eyes">
            <summary>
            Represents the `:eyes:` emoji.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReactionEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactionEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactionEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReactionGroup">
            <summary>
            A group of emoji reactions to a particular piece of content.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactionGroup.Content">
            <summary>
            Identifies the emoji reaction.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactionGroup.CreatedAt">
            <summary>
            Identifies when the reaction was created.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ReactionGroup.Reactors(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            Reactors to the reaction subject with the emotion represented by this reaction group.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactionGroup.Subject">
            <summary>
            The subject that was reacted to.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ReactionGroup.Users(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            Users who have reacted to the reaction subject with the emotion represented by this reaction group
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactionGroup.ViewerHasReacted">
            <summary>
            Whether or not the authenticated user has left a reaction on the subject.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReactionOrder">
            <summary>
            Ways in which lists of reactions can be ordered upon return.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactionOrder.Field">
            <summary>
            The field in which to order reactions by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactionOrder.Direction">
            <summary>
            The direction in which to order reactions by the specified field.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReactionOrderField">
            <summary>
            A list of fields that reactions can be ordered by.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ReactionOrderField.CreatedAt">
            <summary>
            Allows ordering a list of reactions by when they were created.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Reactor">
            <summary>
            Types that can be assigned to reactions.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Reactor.Selector`1.Bot(System.Func{Octokit.GraphQL.Model.Bot,`0})">
            <summary>
            A special type of user which takes actions on behalf of GitHub Apps.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Reactor.Selector`1.Mannequin(System.Func{Octokit.GraphQL.Model.Mannequin,`0})">
            <summary>
            A placeholder user for attribution of imported data on GitHub.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Reactor.Selector`1.Organization(System.Func{Octokit.GraphQL.Model.Organization,`0})">
            <summary>
            An account on GitHub, with one or more owners, that has repositories, members and teams.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Reactor.Selector`1.User(System.Func{Octokit.GraphQL.Model.User,`0})">
            <summary>
            A user is an individual's account on GitHub that owns repositories and can make new content.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReactorConnection">
            <summary>
            The connection type for Reactor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactorConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactorConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactorConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactorConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReactorEdge">
            <summary>
            Represents an author of a reaction.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactorEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactorEdge.Node">
            <summary>
            The author of the reaction.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReactorEdge.ReactedAt">
            <summary>
            The moment when the user made the reaction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReadyForReviewEvent">
            <summary>
            Represents a 'ready_for_review' event on a given pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReadyForReviewEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReadyForReviewEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReadyForReviewEvent.PullRequest">
            <summary>
            PullRequest referenced by event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReadyForReviewEvent.ResourcePath">
            <summary>
            The HTTP path for this ready for review event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReadyForReviewEvent.Url">
            <summary>
            The HTTP URL for this ready for review event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Ref">
            <summary>
            Represents a Git reference.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Ref.AssociatedPullRequests(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.IssueOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.PullRequestState}}})">
            <summary>
            A list of pull requests with this ref as the head ref.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="baseRefName">The base ref name to filter the pull requests by.</param>
            <param name="headRefName">The head ref name to filter the pull requests by.</param>
            <param name="labels">A list of label names to filter the pull requests by.</param>
            <param name="orderBy">Ordering options for pull requests returned from the connection.</param>
            <param name="states">A list of states to filter the pull requests by.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Ref.BranchProtectionRule">
            <summary>
            Branch protection rules for this ref
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Ref.Compare(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Compares the current ref as a base ref to another head ref, if the comparison can be made.
            </summary>
            <param name="headRef">The head ref to compare against.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Ref.Name">
            <summary>
            The ref name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Ref.Prefix">
            <summary>
            The ref's prefix, such as `refs/heads/` or `refs/tags/`.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Ref.RefUpdateRule">
            <summary>
            Branch protection rules that are viewable by non-admins
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Ref.Repository">
            <summary>
            The repository the ref belongs to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Ref.Target">
            <summary>
            The object the ref points to. Returns null when object does not exist.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RefConnection">
            <summary>
            The connection type for Ref.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RefEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReferencedEvent">
            <summary>
            Represents a 'referenced' event on a given `ReferencedSubject`.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReferencedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReferencedEvent.Commit">
            <summary>
            Identifies the commit associated with the 'referenced' event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReferencedEvent.CommitRepository">
            <summary>
            Identifies the repository associated with the 'referenced' event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReferencedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReferencedEvent.IsCrossRepository">
            <summary>
            Reference originated in a different repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReferencedEvent.IsDirectReference">
            <summary>
            Checks if the commit message itself references the subject. Can be false in the case of a commit comment reference.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReferencedEvent.Subject">
            <summary>
            Object referenced by event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReferencedSubject">
            <summary>
            Any referencable object
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ReferencedSubject.Selector`1.Issue(System.Func{Octokit.GraphQL.Model.Issue,`0})">
            <summary>
            An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ReferencedSubject.Selector`1.PullRequest(System.Func{Octokit.GraphQL.Model.PullRequest,`0})">
            <summary>
            A repository pull request.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RefNameConditionTarget">
            <summary>
            Parameters to be used for the ref_name condition
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefNameConditionTarget.Exclude">
            <summary>
            Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefNameConditionTarget.Include">
            <summary>
            Array of ref names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~DEFAULT_BRANCH` to include the default branch or `~ALL` to include all branches.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RefNameConditionTargetInput">
            <summary>
            Parameters to be used for the ref_name condition
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefNameConditionTargetInput.Exclude">
            <summary>
            Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefNameConditionTargetInput.Include">
            <summary>
            Array of ref names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~DEFAULT_BRANCH` to include the default branch or `~ALL` to include all branches.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RefOrder">
            <summary>
            Ways in which lists of git refs can be ordered upon return.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefOrder.Field">
            <summary>
            The field in which to order refs by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefOrder.Direction">
            <summary>
            The direction in which to order refs by the specified field.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RefOrderField">
            <summary>
            Properties by which ref connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RefOrderField.TagCommitDate">
            <summary>
            Order refs by underlying commit date if the ref prefix is refs/tags/
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RefOrderField.Alphabetical">
            <summary>
            Order refs by their alphanumeric name
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RefUpdateRule">
            <summary>
            A ref update rules for a viewer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefUpdateRule.AllowsDeletions">
            <summary>
            Can this branch be deleted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefUpdateRule.AllowsForcePushes">
            <summary>
            Are force pushes allowed on this branch.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefUpdateRule.BlocksCreations">
            <summary>
            Can matching branches be created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefUpdateRule.Pattern">
            <summary>
            Identifies the protection rule pattern.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefUpdateRule.RequiredApprovingReviewCount">
            <summary>
            Number of approving reviews required to update matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefUpdateRule.RequiredStatusCheckContexts">
            <summary>
            List of required status check contexts that must pass for commits to be accepted to matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefUpdateRule.RequiresCodeOwnerReviews">
            <summary>
            Are reviews from code owners required to update matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefUpdateRule.RequiresConversationResolution">
            <summary>
            Are conversations required to be resolved before merging.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefUpdateRule.RequiresLinearHistory">
            <summary>
            Are merge commits prohibited from being pushed to this branch.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefUpdateRule.RequiresSignatures">
            <summary>
            Are commits required to be signed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefUpdateRule.ViewerAllowedToDismissReviews">
            <summary>
            Is the viewer allowed to dismiss reviews.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RefUpdateRule.ViewerCanPush">
            <summary>
            Can the viewer push to the branch
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RegenerateEnterpriseIdentityProviderRecoveryCodesInput">
            <summary>
            Autogenerated input type of RegenerateEnterpriseIdentityProviderRecoveryCodes
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RegenerateEnterpriseIdentityProviderRecoveryCodesInput.EnterpriseId">
            <summary>
            The ID of the enterprise on which to set an identity provider.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RegenerateEnterpriseIdentityProviderRecoveryCodesInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RegenerateEnterpriseIdentityProviderRecoveryCodesPayload">
            <summary>
            Autogenerated return type of RegenerateEnterpriseIdentityProviderRecoveryCodes
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RegenerateEnterpriseIdentityProviderRecoveryCodesPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RegenerateEnterpriseIdentityProviderRecoveryCodesPayload.IdentityProvider">
            <summary>
            The identity provider for the enterprise.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RegenerateVerifiableDomainTokenInput">
            <summary>
            Autogenerated input type of RegenerateVerifiableDomainToken
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RegenerateVerifiableDomainTokenInput.Id">
            <summary>
            The ID of the verifiable domain to regenerate the verification token of.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RegenerateVerifiableDomainTokenInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RegenerateVerifiableDomainTokenPayload">
            <summary>
            Autogenerated return type of RegenerateVerifiableDomainToken
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RegenerateVerifiableDomainTokenPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RegenerateVerifiableDomainTokenPayload.VerificationToken">
            <summary>
            The verification token that was generated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RejectDeploymentsInput">
            <summary>
            Autogenerated input type of RejectDeployments
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RejectDeploymentsInput.WorkflowRunId">
            <summary>
            The node ID of the workflow run containing the pending deployments.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RejectDeploymentsInput.EnvironmentIds">
            <summary>
            The ids of environments to reject deployments
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RejectDeploymentsInput.Comment">
            <summary>
            Optional comment for rejecting deployments
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RejectDeploymentsInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RejectDeploymentsPayload">
            <summary>
            Autogenerated return type of RejectDeployments
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RejectDeploymentsPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RejectDeploymentsPayload.Deployments">
            <summary>
            The affected deployments.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Release">
            <summary>
            A release contains the content for a release.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Release.Author">
            <summary>
            The author of the release
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Release.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Release.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Release.Description">
            <summary>
            The description of the release.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Release.DescriptionHTML">
            <summary>
            The description of this release rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Release.IsDraft">
            <summary>
            Whether or not the release is a draft
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Release.IsLatest">
            <summary>
            Whether or not the release is the latest releast
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Release.IsPrerelease">
            <summary>
            Whether or not the release is a prerelease
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Release.Mentions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of users mentioned in the release description
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Release.Name">
            <summary>
            The title of the release.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Release.PublishedAt">
            <summary>
            Identifies the date and time when the release was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Release.ReactionGroups">
            <summary>
            A list of reactions grouped by content left on the subject.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Release.Reactions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionContent}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionOrder}})">
            <summary>
            A list of Reactions left on the Issue.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="content">Allows filtering Reactions by emoji.</param>
            <param name="orderBy">Allows specifying the order in which reactions are returned.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Release.ReleaseAssets(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            List of releases assets which are dependent on this release.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="name">A list of names to filter the assets by.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Release.Repository">
            <summary>
            The repository that the release belongs to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Release.ResourcePath">
            <summary>
            The HTTP path for this issue
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Release.ShortDescriptionHTML(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            A description of the release, rendered to HTML without any links in it.
            </summary>
            <param name="limit">How many characters to return.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Release.Tag">
            <summary>
            The Git tag the release points to
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Release.TagCommit">
            <summary>
            The tag commit for this release.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Release.TagName">
            <summary>
            The name of the release's Git tag
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Release.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Release.Url">
            <summary>
            The HTTP URL for this issue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Release.ViewerCanReact">
            <summary>
            Can user react to this subject
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReleaseAsset">
            <summary>
            A release asset contains the content for a release asset.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseAsset.ContentType">
            <summary>
            The asset's content-type
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseAsset.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseAsset.DownloadCount">
            <summary>
            The number of times this asset was downloaded
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseAsset.DownloadUrl">
            <summary>
            Identifies the URL where you can download the release asset via the browser.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseAsset.Name">
            <summary>
            Identifies the title of the release asset.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseAsset.Release">
            <summary>
            Release that the asset is associated with
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseAsset.Size">
            <summary>
            The size (in bytes) of the asset
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseAsset.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseAsset.UploadedBy">
            <summary>
            The user that performed the upload
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseAsset.Url">
            <summary>
            Identifies the URL of the release asset.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReleaseAssetConnection">
            <summary>
            The connection type for ReleaseAsset.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseAssetConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseAssetConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseAssetConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseAssetConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReleaseAssetEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseAssetEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseAssetEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReleaseConnection">
            <summary>
            The connection type for Release.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReleaseEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReleaseOrder">
            <summary>
            Ways in which lists of releases can be ordered upon return.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseOrder.Field">
            <summary>
            The field in which to order releases by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReleaseOrder.Direction">
            <summary>
            The direction in which to order releases by the specified field.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReleaseOrderField">
            <summary>
            Properties by which release connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ReleaseOrderField.CreatedAt">
            <summary>
            Order releases by creation time
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ReleaseOrderField.Name">
            <summary>
            Order releases alphabetically by name
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemoveAssigneesFromAssignableInput">
            <summary>
            Autogenerated input type of RemoveAssigneesFromAssignable
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveAssigneesFromAssignableInput.AssignableId">
            <summary>
            The id of the assignable object to remove assignees from.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveAssigneesFromAssignableInput.AssigneeIds">
            <summary>
            The id of users to remove as assignees.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveAssigneesFromAssignableInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemoveAssigneesFromAssignablePayload">
            <summary>
            Autogenerated return type of RemoveAssigneesFromAssignable
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveAssigneesFromAssignablePayload.Assignable">
            <summary>
            The item that was unassigned.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveAssigneesFromAssignablePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemovedFromMergeQueueEvent">
            <summary>
            Represents a 'removed_from_merge_queue' event on a given pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemovedFromMergeQueueEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemovedFromMergeQueueEvent.BeforeCommit">
            <summary>
            Identifies the before commit SHA for the 'removed_from_merge_queue' event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemovedFromMergeQueueEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemovedFromMergeQueueEvent.Enqueuer">
            <summary>
            The user who removed this Pull Request from the merge queue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemovedFromMergeQueueEvent.MergeQueue">
            <summary>
            The merge queue where this pull request was removed from.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemovedFromMergeQueueEvent.PullRequest">
            <summary>
            PullRequest referenced by event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemovedFromMergeQueueEvent.Reason">
            <summary>
            The reason this pull request was removed from the queue.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemovedFromProjectEvent">
            <summary>
            Represents a 'removed_from_project' event on a given issue or pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemovedFromProjectEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemovedFromProjectEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemovedFromProjectEvent.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemoveEnterpriseAdminInput">
            <summary>
            Autogenerated input type of RemoveEnterpriseAdmin
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseAdminInput.EnterpriseId">
            <summary>
            The Enterprise ID from which to remove the administrator.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseAdminInput.Login">
            <summary>
            The login of the user to remove as an administrator.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseAdminInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemoveEnterpriseAdminPayload">
            <summary>
            Autogenerated return type of RemoveEnterpriseAdmin
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseAdminPayload.Admin">
            <summary>
            The user who was removed as an administrator.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseAdminPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseAdminPayload.Enterprise">
            <summary>
            The updated enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseAdminPayload.Message">
            <summary>
            A message confirming the result of removing an administrator.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseAdminPayload.Viewer">
            <summary>
            The viewer performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemoveEnterpriseIdentityProviderInput">
            <summary>
            Autogenerated input type of RemoveEnterpriseIdentityProvider
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseIdentityProviderInput.EnterpriseId">
            <summary>
            The ID of the enterprise from which to remove the identity provider.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseIdentityProviderInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemoveEnterpriseIdentityProviderPayload">
            <summary>
            Autogenerated return type of RemoveEnterpriseIdentityProvider
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseIdentityProviderPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseIdentityProviderPayload.IdentityProvider">
            <summary>
            The identity provider that was removed from the enterprise.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemoveEnterpriseMemberInput">
            <summary>
            Autogenerated input type of RemoveEnterpriseMember
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseMemberInput.EnterpriseId">
            <summary>
            The ID of the enterprise from which the user should be removed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseMemberInput.UserId">
            <summary>
            The ID of the user to remove from the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseMemberInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemoveEnterpriseMemberPayload">
            <summary>
            Autogenerated return type of RemoveEnterpriseMember
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseMemberPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseMemberPayload.Enterprise">
            <summary>
            The updated enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseMemberPayload.User">
            <summary>
            The user that was removed from the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseMemberPayload.Viewer">
            <summary>
            The viewer performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemoveEnterpriseOrganizationInput">
            <summary>
            Autogenerated input type of RemoveEnterpriseOrganization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseOrganizationInput.EnterpriseId">
            <summary>
            The ID of the enterprise from which the organization should be removed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseOrganizationInput.OrganizationId">
            <summary>
            The ID of the organization to remove from the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseOrganizationInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemoveEnterpriseOrganizationPayload">
            <summary>
            Autogenerated return type of RemoveEnterpriseOrganization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseOrganizationPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseOrganizationPayload.Enterprise">
            <summary>
            The updated enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseOrganizationPayload.Organization">
            <summary>
            The organization that was removed from the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseOrganizationPayload.Viewer">
            <summary>
            The viewer performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemoveEnterpriseSupportEntitlementInput">
            <summary>
            Autogenerated input type of RemoveEnterpriseSupportEntitlement
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseSupportEntitlementInput.EnterpriseId">
            <summary>
            The ID of the Enterprise which the admin belongs to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseSupportEntitlementInput.Login">
            <summary>
            The login of a member who will lose the support entitlement.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseSupportEntitlementInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemoveEnterpriseSupportEntitlementPayload">
            <summary>
            Autogenerated return type of RemoveEnterpriseSupportEntitlement
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseSupportEntitlementPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveEnterpriseSupportEntitlementPayload.Message">
            <summary>
            A message confirming the result of removing the support entitlement.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemoveLabelsFromLabelableInput">
            <summary>
            Autogenerated input type of RemoveLabelsFromLabelable
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveLabelsFromLabelableInput.LabelableId">
            <summary>
            The id of the Labelable to remove labels from.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveLabelsFromLabelableInput.LabelIds">
            <summary>
            The ids of labels to remove.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveLabelsFromLabelableInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemoveLabelsFromLabelablePayload">
            <summary>
            Autogenerated return type of RemoveLabelsFromLabelable
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveLabelsFromLabelablePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveLabelsFromLabelablePayload.Labelable">
            <summary>
            The Labelable the labels were removed from.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemoveOutsideCollaboratorInput">
            <summary>
            Autogenerated input type of RemoveOutsideCollaborator
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveOutsideCollaboratorInput.UserId">
            <summary>
            The ID of the outside collaborator to remove.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveOutsideCollaboratorInput.OrganizationId">
            <summary>
            The ID of the organization to remove the outside collaborator from.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveOutsideCollaboratorInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemoveOutsideCollaboratorPayload">
            <summary>
            Autogenerated return type of RemoveOutsideCollaborator
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveOutsideCollaboratorPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveOutsideCollaboratorPayload.RemovedUser">
            <summary>
            The user that was removed as an outside collaborator.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemoveReactionInput">
            <summary>
            Autogenerated input type of RemoveReaction
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveReactionInput.SubjectId">
            <summary>
            The Node ID of the subject to modify.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveReactionInput.Content">
            <summary>
            The name of the emoji reaction to remove.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveReactionInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemoveReactionPayload">
            <summary>
            Autogenerated return type of RemoveReaction
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveReactionPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveReactionPayload.Reaction">
            <summary>
            The reaction object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveReactionPayload.ReactionGroups">
            <summary>
            The reaction groups for the subject.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveReactionPayload.Subject">
            <summary>
            The reactable subject.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemoveStarInput">
            <summary>
            Autogenerated input type of RemoveStar
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveStarInput.StarrableId">
            <summary>
            The Starrable ID to unstar.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveStarInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemoveStarPayload">
            <summary>
            Autogenerated return type of RemoveStar
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveStarPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveStarPayload.Starrable">
            <summary>
            The starrable.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemoveUpvoteInput">
            <summary>
            Autogenerated input type of RemoveUpvote
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveUpvoteInput.SubjectId">
            <summary>
            The Node ID of the discussion or comment to remove upvote.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveUpvoteInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RemoveUpvotePayload">
            <summary>
            Autogenerated return type of RemoveUpvote
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveUpvotePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RemoveUpvotePayload.Subject">
            <summary>
            The votable subject.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RenamedTitleEvent">
            <summary>
            Represents a 'renamed' event on a given issue or pull request
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RenamedTitleEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RenamedTitleEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RenamedTitleEvent.CurrentTitle">
            <summary>
            Identifies the current title of the issue or pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RenamedTitleEvent.PreviousTitle">
            <summary>
            Identifies the previous title of the issue or pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RenamedTitleEvent.Subject">
            <summary>
            Subject that was renamed.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RenamedTitleSubject">
            <summary>
            An object which has a renamable title
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.RenamedTitleSubject.Selector`1.Issue(System.Func{Octokit.GraphQL.Model.Issue,`0})">
            <summary>
            An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.RenamedTitleSubject.Selector`1.PullRequest(System.Func{Octokit.GraphQL.Model.PullRequest,`0})">
            <summary>
            A repository pull request.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReopenDiscussionInput">
            <summary>
            Autogenerated input type of ReopenDiscussion
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReopenDiscussionInput.DiscussionId">
            <summary>
            ID of the discussion to be reopened.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReopenDiscussionInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReopenDiscussionPayload">
            <summary>
            Autogenerated return type of ReopenDiscussion
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReopenDiscussionPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReopenDiscussionPayload.Discussion">
            <summary>
            The discussion that was reopened.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReopenedEvent">
            <summary>
            Represents a 'reopened' event on any `Closable`.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReopenedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReopenedEvent.Closable">
            <summary>
            Object that was reopened.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReopenedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReopenedEvent.StateReason">
            <summary>
            The reason the issue state was changed to open.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReopenIssueInput">
            <summary>
            Autogenerated input type of ReopenIssue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReopenIssueInput.IssueId">
            <summary>
            ID of the issue to be opened.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReopenIssueInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReopenIssuePayload">
            <summary>
            Autogenerated return type of ReopenIssue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReopenIssuePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReopenIssuePayload.Issue">
            <summary>
            The issue that was opened.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReopenPullRequestInput">
            <summary>
            Autogenerated input type of ReopenPullRequest
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReopenPullRequestInput.PullRequestId">
            <summary>
            ID of the pull request to be reopened.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReopenPullRequestInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReopenPullRequestPayload">
            <summary>
            Autogenerated return type of ReopenPullRequest
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReopenPullRequestPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReopenPullRequestPayload.PullRequest">
            <summary>
            The pull request that was reopened.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoAccessAuditEntry">
            <summary>
            Audit log entry for a repo.access event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAccessAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAccessAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAccessAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAccessAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAccessAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAccessAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAccessAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAccessAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAccessAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAccessAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAccessAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAccessAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAccessAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAccessAuditEntry.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAccessAuditEntry.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAccessAuditEntry.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAccessAuditEntry.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAccessAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAccessAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAccessAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAccessAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAccessAuditEntry.Visibility">
            <summary>
            The visibility of the repository
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoAccessAuditEntryVisibility">
            <summary>
            The privacy of a repository
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepoAccessAuditEntryVisibility.Internal">
            <summary>
            The repository is visible only to users in the same business.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepoAccessAuditEntryVisibility.Private">
            <summary>
            The repository is visible only to those with explicit access.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepoAccessAuditEntryVisibility.Public">
            <summary>
            The repository is visible to everyone.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoAddMemberAuditEntry">
            <summary>
            Audit log entry for a repo.add_member event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddMemberAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddMemberAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddMemberAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddMemberAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddMemberAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddMemberAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddMemberAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddMemberAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddMemberAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddMemberAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddMemberAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddMemberAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddMemberAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddMemberAuditEntry.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddMemberAuditEntry.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddMemberAuditEntry.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddMemberAuditEntry.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddMemberAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddMemberAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddMemberAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddMemberAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddMemberAuditEntry.Visibility">
            <summary>
            The visibility of the repository
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoAddMemberAuditEntryVisibility">
            <summary>
            The privacy of a repository
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepoAddMemberAuditEntryVisibility.Internal">
            <summary>
            The repository is visible only to users in the same business.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepoAddMemberAuditEntryVisibility.Private">
            <summary>
            The repository is visible only to those with explicit access.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepoAddMemberAuditEntryVisibility.Public">
            <summary>
            The repository is visible to everyone.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoAddTopicAuditEntry">
            <summary>
            Audit log entry for a repo.add_topic event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddTopicAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddTopicAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddTopicAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddTopicAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddTopicAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddTopicAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddTopicAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddTopicAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddTopicAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddTopicAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddTopicAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddTopicAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddTopicAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddTopicAuditEntry.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddTopicAuditEntry.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddTopicAuditEntry.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddTopicAuditEntry.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddTopicAuditEntry.Topic">
            <summary>
            The name of the topic added to the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddTopicAuditEntry.TopicName">
            <summary>
            The name of the topic added to the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddTopicAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddTopicAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddTopicAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoAddTopicAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoArchivedAuditEntry">
            <summary>
            Audit log entry for a repo.archived event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoArchivedAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoArchivedAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoArchivedAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoArchivedAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoArchivedAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoArchivedAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoArchivedAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoArchivedAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoArchivedAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoArchivedAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoArchivedAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoArchivedAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoArchivedAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoArchivedAuditEntry.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoArchivedAuditEntry.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoArchivedAuditEntry.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoArchivedAuditEntry.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoArchivedAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoArchivedAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoArchivedAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoArchivedAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoArchivedAuditEntry.Visibility">
            <summary>
            The visibility of the repository
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoArchivedAuditEntryVisibility">
            <summary>
            The privacy of a repository
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepoArchivedAuditEntryVisibility.Internal">
            <summary>
            The repository is visible only to users in the same business.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepoArchivedAuditEntryVisibility.Private">
            <summary>
            The repository is visible only to those with explicit access.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepoArchivedAuditEntryVisibility.Public">
            <summary>
            The repository is visible to everyone.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry">
            <summary>
            Audit log entry for a repo.change_merge_setting event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry.IsEnabled">
            <summary>
            Whether the change was to enable (true) or disable (false) the merge type
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry.MergeType">
            <summary>
            The merge method affected by the change
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntryMergeType">
            <summary>
            The merge options available for pull requests to this repository.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntryMergeType.Merge">
            <summary>
            The pull request is added to the base branch in a merge commit.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntryMergeType.Rebase">
            <summary>
            Commits from the pull request are added onto the base branch individually without a merge commit.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepoChangeMergeSettingAuditEntryMergeType.Squash">
            <summary>
            The pull request's commits are squashed into a single commit before they are merged to the base branch.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoConfigDisableAnonymousGitAccessAuditEntry">
            <summary>
            Audit log entry for a repo.config.disable_anonymous_git_access event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableAnonymousGitAccessAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableAnonymousGitAccessAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableAnonymousGitAccessAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableAnonymousGitAccessAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableAnonymousGitAccessAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableAnonymousGitAccessAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableAnonymousGitAccessAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableAnonymousGitAccessAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableAnonymousGitAccessAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableAnonymousGitAccessAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableAnonymousGitAccessAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableAnonymousGitAccessAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableAnonymousGitAccessAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableAnonymousGitAccessAuditEntry.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableAnonymousGitAccessAuditEntry.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableAnonymousGitAccessAuditEntry.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableAnonymousGitAccessAuditEntry.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableAnonymousGitAccessAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableAnonymousGitAccessAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableAnonymousGitAccessAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableAnonymousGitAccessAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoConfigDisableCollaboratorsOnlyAuditEntry">
            <summary>
            Audit log entry for a repo.config.disable_collaborators_only event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableCollaboratorsOnlyAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableCollaboratorsOnlyAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableCollaboratorsOnlyAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableCollaboratorsOnlyAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableCollaboratorsOnlyAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableCollaboratorsOnlyAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableCollaboratorsOnlyAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableCollaboratorsOnlyAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableCollaboratorsOnlyAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableCollaboratorsOnlyAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableCollaboratorsOnlyAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableCollaboratorsOnlyAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableCollaboratorsOnlyAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableCollaboratorsOnlyAuditEntry.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableCollaboratorsOnlyAuditEntry.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableCollaboratorsOnlyAuditEntry.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableCollaboratorsOnlyAuditEntry.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableCollaboratorsOnlyAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableCollaboratorsOnlyAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableCollaboratorsOnlyAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableCollaboratorsOnlyAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoConfigDisableContributorsOnlyAuditEntry">
            <summary>
            Audit log entry for a repo.config.disable_contributors_only event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableContributorsOnlyAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableContributorsOnlyAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableContributorsOnlyAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableContributorsOnlyAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableContributorsOnlyAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableContributorsOnlyAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableContributorsOnlyAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableContributorsOnlyAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableContributorsOnlyAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableContributorsOnlyAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableContributorsOnlyAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableContributorsOnlyAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableContributorsOnlyAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableContributorsOnlyAuditEntry.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableContributorsOnlyAuditEntry.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableContributorsOnlyAuditEntry.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableContributorsOnlyAuditEntry.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableContributorsOnlyAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableContributorsOnlyAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableContributorsOnlyAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableContributorsOnlyAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoConfigDisableSockpuppetDisallowedAuditEntry">
            <summary>
            Audit log entry for a repo.config.disable_sockpuppet_disallowed event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableSockpuppetDisallowedAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableSockpuppetDisallowedAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableSockpuppetDisallowedAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableSockpuppetDisallowedAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableSockpuppetDisallowedAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableSockpuppetDisallowedAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableSockpuppetDisallowedAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableSockpuppetDisallowedAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableSockpuppetDisallowedAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableSockpuppetDisallowedAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableSockpuppetDisallowedAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableSockpuppetDisallowedAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableSockpuppetDisallowedAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableSockpuppetDisallowedAuditEntry.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableSockpuppetDisallowedAuditEntry.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableSockpuppetDisallowedAuditEntry.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableSockpuppetDisallowedAuditEntry.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableSockpuppetDisallowedAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableSockpuppetDisallowedAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableSockpuppetDisallowedAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigDisableSockpuppetDisallowedAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoConfigEnableAnonymousGitAccessAuditEntry">
            <summary>
            Audit log entry for a repo.config.enable_anonymous_git_access event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableAnonymousGitAccessAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableAnonymousGitAccessAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableAnonymousGitAccessAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableAnonymousGitAccessAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableAnonymousGitAccessAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableAnonymousGitAccessAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableAnonymousGitAccessAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableAnonymousGitAccessAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableAnonymousGitAccessAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableAnonymousGitAccessAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableAnonymousGitAccessAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableAnonymousGitAccessAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableAnonymousGitAccessAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableAnonymousGitAccessAuditEntry.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableAnonymousGitAccessAuditEntry.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableAnonymousGitAccessAuditEntry.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableAnonymousGitAccessAuditEntry.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableAnonymousGitAccessAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableAnonymousGitAccessAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableAnonymousGitAccessAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableAnonymousGitAccessAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoConfigEnableCollaboratorsOnlyAuditEntry">
            <summary>
            Audit log entry for a repo.config.enable_collaborators_only event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableCollaboratorsOnlyAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableCollaboratorsOnlyAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableCollaboratorsOnlyAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableCollaboratorsOnlyAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableCollaboratorsOnlyAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableCollaboratorsOnlyAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableCollaboratorsOnlyAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableCollaboratorsOnlyAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableCollaboratorsOnlyAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableCollaboratorsOnlyAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableCollaboratorsOnlyAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableCollaboratorsOnlyAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableCollaboratorsOnlyAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableCollaboratorsOnlyAuditEntry.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableCollaboratorsOnlyAuditEntry.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableCollaboratorsOnlyAuditEntry.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableCollaboratorsOnlyAuditEntry.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableCollaboratorsOnlyAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableCollaboratorsOnlyAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableCollaboratorsOnlyAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableCollaboratorsOnlyAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoConfigEnableContributorsOnlyAuditEntry">
            <summary>
            Audit log entry for a repo.config.enable_contributors_only event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableContributorsOnlyAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableContributorsOnlyAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableContributorsOnlyAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableContributorsOnlyAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableContributorsOnlyAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableContributorsOnlyAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableContributorsOnlyAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableContributorsOnlyAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableContributorsOnlyAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableContributorsOnlyAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableContributorsOnlyAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableContributorsOnlyAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableContributorsOnlyAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableContributorsOnlyAuditEntry.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableContributorsOnlyAuditEntry.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableContributorsOnlyAuditEntry.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableContributorsOnlyAuditEntry.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableContributorsOnlyAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableContributorsOnlyAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableContributorsOnlyAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableContributorsOnlyAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoConfigEnableSockpuppetDisallowedAuditEntry">
            <summary>
            Audit log entry for a repo.config.enable_sockpuppet_disallowed event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableSockpuppetDisallowedAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableSockpuppetDisallowedAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableSockpuppetDisallowedAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableSockpuppetDisallowedAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableSockpuppetDisallowedAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableSockpuppetDisallowedAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableSockpuppetDisallowedAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableSockpuppetDisallowedAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableSockpuppetDisallowedAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableSockpuppetDisallowedAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableSockpuppetDisallowedAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableSockpuppetDisallowedAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableSockpuppetDisallowedAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableSockpuppetDisallowedAuditEntry.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableSockpuppetDisallowedAuditEntry.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableSockpuppetDisallowedAuditEntry.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableSockpuppetDisallowedAuditEntry.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableSockpuppetDisallowedAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableSockpuppetDisallowedAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableSockpuppetDisallowedAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigEnableSockpuppetDisallowedAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoConfigLockAnonymousGitAccessAuditEntry">
            <summary>
            Audit log entry for a repo.config.lock_anonymous_git_access event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigLockAnonymousGitAccessAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigLockAnonymousGitAccessAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigLockAnonymousGitAccessAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigLockAnonymousGitAccessAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigLockAnonymousGitAccessAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigLockAnonymousGitAccessAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigLockAnonymousGitAccessAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigLockAnonymousGitAccessAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigLockAnonymousGitAccessAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigLockAnonymousGitAccessAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigLockAnonymousGitAccessAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigLockAnonymousGitAccessAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigLockAnonymousGitAccessAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigLockAnonymousGitAccessAuditEntry.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigLockAnonymousGitAccessAuditEntry.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigLockAnonymousGitAccessAuditEntry.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigLockAnonymousGitAccessAuditEntry.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigLockAnonymousGitAccessAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigLockAnonymousGitAccessAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigLockAnonymousGitAccessAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigLockAnonymousGitAccessAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoConfigUnlockAnonymousGitAccessAuditEntry">
            <summary>
            Audit log entry for a repo.config.unlock_anonymous_git_access event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigUnlockAnonymousGitAccessAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigUnlockAnonymousGitAccessAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigUnlockAnonymousGitAccessAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigUnlockAnonymousGitAccessAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigUnlockAnonymousGitAccessAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigUnlockAnonymousGitAccessAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigUnlockAnonymousGitAccessAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigUnlockAnonymousGitAccessAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigUnlockAnonymousGitAccessAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigUnlockAnonymousGitAccessAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigUnlockAnonymousGitAccessAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigUnlockAnonymousGitAccessAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigUnlockAnonymousGitAccessAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigUnlockAnonymousGitAccessAuditEntry.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigUnlockAnonymousGitAccessAuditEntry.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigUnlockAnonymousGitAccessAuditEntry.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigUnlockAnonymousGitAccessAuditEntry.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigUnlockAnonymousGitAccessAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigUnlockAnonymousGitAccessAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigUnlockAnonymousGitAccessAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoConfigUnlockAnonymousGitAccessAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoCreateAuditEntry">
            <summary>
            Audit log entry for a repo.create event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.ForkParentName">
            <summary>
            The name of the parent repository for this forked repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.ForkSourceName">
            <summary>
            The name of the root repository for this network.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoCreateAuditEntry.Visibility">
            <summary>
            The visibility of the repository
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoCreateAuditEntryVisibility">
            <summary>
            The privacy of a repository
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepoCreateAuditEntryVisibility.Internal">
            <summary>
            The repository is visible only to users in the same business.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepoCreateAuditEntryVisibility.Private">
            <summary>
            The repository is visible only to those with explicit access.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepoCreateAuditEntryVisibility.Public">
            <summary>
            The repository is visible to everyone.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoDestroyAuditEntry">
            <summary>
            Audit log entry for a repo.destroy event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoDestroyAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoDestroyAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoDestroyAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoDestroyAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoDestroyAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoDestroyAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoDestroyAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoDestroyAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoDestroyAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoDestroyAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoDestroyAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoDestroyAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoDestroyAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoDestroyAuditEntry.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoDestroyAuditEntry.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoDestroyAuditEntry.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoDestroyAuditEntry.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoDestroyAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoDestroyAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoDestroyAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoDestroyAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoDestroyAuditEntry.Visibility">
            <summary>
            The visibility of the repository
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoDestroyAuditEntryVisibility">
            <summary>
            The privacy of a repository
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepoDestroyAuditEntryVisibility.Internal">
            <summary>
            The repository is visible only to users in the same business.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepoDestroyAuditEntryVisibility.Private">
            <summary>
            The repository is visible only to those with explicit access.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepoDestroyAuditEntryVisibility.Public">
            <summary>
            The repository is visible to everyone.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry">
            <summary>
            Audit log entry for a repo.remove_member event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntry.Visibility">
            <summary>
            The visibility of the repository
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntryVisibility">
            <summary>
            The privacy of a repository
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntryVisibility.Internal">
            <summary>
            The repository is visible only to users in the same business.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntryVisibility.Private">
            <summary>
            The repository is visible only to those with explicit access.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepoRemoveMemberAuditEntryVisibility.Public">
            <summary>
            The repository is visible to everyone.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry">
            <summary>
            Audit log entry for a repo.remove_topic event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry.Topic">
            <summary>
            The name of the topic added to the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry.TopicName">
            <summary>
            The name of the topic added to the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepoRemoveTopicAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReportedContentClassifiers">
            <summary>
            The reasons a piece of content can be reported or minimized.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ReportedContentClassifiers.Spam">
            <summary>
            A spammy piece of content
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ReportedContentClassifiers.Abuse">
            <summary>
            An abusive or harassing piece of content
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ReportedContentClassifiers.OffTopic">
            <summary>
            An irrelevant piece of content
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ReportedContentClassifiers.Outdated">
            <summary>
            An outdated piece of content
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ReportedContentClassifiers.Duplicate">
            <summary>
            A duplicated piece of content
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.ReportedContentClassifiers.Resolved">
            <summary>
            The content has been resolved
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Repository">
            <summary>
            A repository contains the content for a project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.AllowUpdateBranch">
            <summary>
            Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.ArchivedAt">
            <summary>
            Identifies the date and time when the repository was archived.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.AssignableUsers(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of users that can be assigned to issues in this repository.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="query">Filters users with query on user name and login</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.AutoMergeAllowed">
            <summary>
            Whether or not Auto-merge can be enabled on pull requests in this repository.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.BranchProtectionRules(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of branch protection rules for this repository.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.CodeOfConduct">
            <summary>
            Returns the code of conduct for this repository
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Codeowners(System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            Information extracted from the repository's `CODEOWNERS` file.
            </summary>
            <param name="refName">The ref name used to return the associated `CODEOWNERS` file.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Collaborators(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CollaboratorAffiliation}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of collaborators associated with the repository.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="affiliation">Collaborators affiliation level with a repository.</param>
            <param name="login">The login of one specific collaborator.</param>
            <param name="query">Filters users with query on user name and login</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.CommitComments(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of commit comments associated with the repository.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.ContactLinks">
            <summary>
            Returns a list of contact links associated to the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.DefaultBranchRef">
            <summary>
            The Ref associated with the repository's default branch.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.DeleteBranchOnMerge">
            <summary>
            Whether or not branches are automatically deleted when merged in this repository.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.DeployKeys(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of deploy keys that are on this repository.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Deployments(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeploymentOrder}})">
            <summary>
            Deployments associated with the repository
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="environments">Environments to list deployments for</param>
            <param name="orderBy">Ordering options for deployments returned from the connection.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.Description">
            <summary>
            The description of the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.DescriptionHTML">
            <summary>
            The description of the repository rendered to HTML.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Discussion(Octokit.GraphQL.Core.Arg{System.Int32})">
            <summary>
            Returns a single discussion from the current repository by number.
            </summary>
            <param name="number">The number for the discussion to be returned.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.DiscussionCategories(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            A list of discussion categories that are available in the repository.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="filterByAssignable">Filter by categories that are assignable by the viewer.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.DiscussionCategory(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            A discussion category by slug.
            </summary>
            <param name="slug">The slug of the discussion category to be returned.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Discussions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.ID}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DiscussionOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.DiscussionState}}})">
            <summary>
            A list of discussions that have been opened in the repository.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="categoryId">Only include discussions that belong to the category with this ID.</param>
            <param name="orderBy">Ordering options for discussions returned from the connection.</param>
            <param name="states">A list of states to filter the discussions by.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.DiskUsage">
            <summary>
            The number of kilobytes this repository occupies on disk.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Environment(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Returns a single active environment from the current repository by name.
            </summary>
            <param name="name">The name of the environment to be returned.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Environments(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of environments that are in this repository.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.ForkCount">
            <summary>
            Returns how many forks there are of this repository in the whole network.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.ForkingAllowed">
            <summary>
            Whether this repository allows forks.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Forks(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.Nullable{Octokit.GraphQL.Model.RepositoryAffiliation}}}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RepositoryOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.Nullable{Octokit.GraphQL.Model.RepositoryAffiliation}}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RepositoryPrivacy}})">
            <summary>
            A list of direct forked repositories.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="affiliations">Array of viewer's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the current viewer owns.</param>
            <param name="isLocked">If non-null, filters repositories according to whether they have been locked</param>
            <param name="orderBy">Ordering options for repositories returned from the connection</param>
            <param name="ownerAffiliations">Array of owner's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the organization or user being viewed owns.</param>
            <param name="privacy">If non-null, filters repositories according to privacy</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.FundingLinks">
            <summary>
            The funding links for this repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.HasDiscussionsEnabled">
            <summary>
            Indicates if the repository has the Discussions feature enabled.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.HasIssuesEnabled">
            <summary>
            Indicates if the repository has issues feature enabled.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.HasProjectsEnabled">
            <summary>
            Indicates if the repository has the Projects feature enabled.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.HasVulnerabilityAlertsEnabled">
            <summary>
            Whether vulnerability alerts are enabled for the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.HasWikiEnabled">
            <summary>
            Indicates if the repository has wiki feature enabled.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.HomepageUrl">
            <summary>
            The repository's URL.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.InteractionAbility">
            <summary>
            The interaction ability settings for this repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.IsArchived">
            <summary>
            Indicates if the repository is unmaintained.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.IsBlankIssuesEnabled">
            <summary>
            Returns true if blank issue creation is allowed
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.IsDisabled">
            <summary>
            Returns whether or not this repository disabled.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.IsEmpty">
            <summary>
            Returns whether or not this repository is empty.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.IsFork">
            <summary>
            Identifies if the repository is a fork.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.IsInOrganization">
            <summary>
            Indicates if a repository is either owned by an organization, or is a private fork of an organization repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.IsLocked">
            <summary>
            Indicates if the repository has been locked or not.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.IsMirror">
            <summary>
            Identifies if the repository is a mirror.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.IsPrivate">
            <summary>
            Identifies if the repository is private or internal.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.IsSecurityPolicyEnabled">
            <summary>
            Returns true if this repository has a security policy
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.IsTemplate">
            <summary>
            Identifies if the repository is a template that can be used to generate new repositories.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.IsUserConfigurationRepository">
            <summary>
            Is this repository a user configuration repository?
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Issue(Octokit.GraphQL.Core.Arg{System.Int32})">
            <summary>
            Returns a single issue from the current repository by number.
            </summary>
            <param name="number">The number for the issue to be returned.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.IssueOrPullRequest(Octokit.GraphQL.Core.Arg{System.Int32})">
            <summary>
            Returns a single issue-like object from the current repository by number.
            </summary>
            <param name="number">The number for the issue to be returned.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.IssueTemplates">
            <summary>
            Returns a list of issue templates associated to the repository
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Issues(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.IssueFilters}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.IssueOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.IssueState}}})">
            <summary>
            A list of issues that have been opened in the repository.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="filterBy">Filtering options for issues returned from the connection.</param>
            <param name="labels">A list of label names to filter the pull requests by.</param>
            <param name="orderBy">Ordering options for issues returned from the connection.</param>
            <param name="states">A list of states to filter the issues by.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Label(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Returns a single label by name
            </summary>
            <param name="name">Label name</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Labels(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.LabelOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of labels associated with the repository.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for labels returned from the connection.</param>
            <param name="query">If provided, searches labels by name and description.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Languages(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.LanguageOrder}})">
            <summary>
            A list containing a breakdown of the language composition of the repository.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Order for connection</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.LatestRelease">
            <summary>
            Get the latest release for the repository if one exists.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.LicenseInfo">
            <summary>
            The license associated with the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.LockReason">
            <summary>
            The reason the repository has been locked.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.MentionableUsers(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of Users that can be mentioned in the context of the repository.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="query">Filters users with query on user name and login</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.MergeCommitAllowed">
            <summary>
            Whether or not PRs are merged with a merge commit on this repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.MergeCommitMessage">
            <summary>
            How the default commit message will be generated when merging a pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.MergeCommitTitle">
            <summary>
            How the default commit title will be generated when merging a pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.MergeQueue(System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The merge queue for a specified branch, otherwise the default branch if not provided.
            </summary>
            <param name="branch">The name of the branch to get the merge queue for. Case sensitive.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Milestone(Octokit.GraphQL.Core.Arg{System.Int32})">
            <summary>
            Returns a single milestone from the current repository by number.
            </summary>
            <param name="number">The number for the milestone to be returned.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Milestones(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.MilestoneOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.MilestoneState}}})">
            <summary>
            A list of milestones associated with the repository.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for milestones.</param>
            <param name="query">Filters milestones with a query on the title</param>
            <param name="states">Filter by the state of the milestones.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.MirrorUrl">
            <summary>
            The repository's original mirror URL.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.Name">
            <summary>
            The name of the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.NameWithOwner">
            <summary>
            The repository's name with owner.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Object(System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A Git object in the repository
            </summary>
            <param name="expression">A Git revision expression suitable for rev-parse</param>
            <param name="oid">The Git object ID</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.OpenGraphImageUrl">
            <summary>
            The image used to represent this repository in Open Graph data.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.Owner">
            <summary>
            The User owner of the repository.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Packages(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.PackageOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.PackageType}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.ID}})">
            <summary>
            A list of packages under the owner.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="names">Find packages by their names.</param>
            <param name="orderBy">Ordering of the returned packages.</param>
            <param name="packageType">Filter registry package by type.</param>
            <param name="repositoryId">Find packages in a repository by ID.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.Parent">
            <summary>
            The repository parent, if this is a fork.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.PinnedDiscussions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of discussions that have been pinned in this repository.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.PinnedIssues(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of pinned issues for this repository.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.PrimaryLanguage">
            <summary>
            The primary language of the repository's code.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Project(Octokit.GraphQL.Core.Arg{System.Int32})">
            <summary>
            Find project by number.
            </summary>
            <param name="number">The project number to find.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.ProjectV2(Octokit.GraphQL.Core.Arg{System.Int32})">
            <summary>
            Finds and returns the Project according to the provided Project number.
            </summary>
            <param name="number">The Project number.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Projects(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ProjectOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.ProjectState}}})">
            <summary>
            A list of projects under the owner.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for projects returned from the connection</param>
            <param name="search">Query to search projects by, currently only searching by name.</param>
            <param name="states">A list of states to filter the projects by.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.ProjectsResourcePath">
            <summary>
            The HTTP path listing the repository's projects
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.ProjectsUrl">
            <summary>
            The HTTP URL listing the repository's projects
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.ProjectsV2(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ProjectV2Order}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            List of projects linked to this repository.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">How to order the returned projects.</param>
            <param name="query">A project to search for linked to the repo.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.PullRequest(Octokit.GraphQL.Core.Arg{System.Int32})">
            <summary>
            Returns a single pull request from the current repository by number.
            </summary>
            <param name="number">The number for the pull request to be returned.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.PullRequestTemplates">
            <summary>
            Returns a list of pull request templates associated to the repository
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.PullRequests(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.IssueOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.PullRequestState}}})">
            <summary>
            A list of pull requests that have been opened in the repository.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="baseRefName">The base ref name to filter the pull requests by.</param>
            <param name="headRefName">The head ref name to filter the pull requests by.</param>
            <param name="labels">A list of label names to filter the pull requests by.</param>
            <param name="orderBy">Ordering options for pull requests returned from the connection.</param>
            <param name="states">A list of states to filter the pull requests by.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.PushedAt">
            <summary>
            Identifies the date and time when the repository was last pushed to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.RebaseMergeAllowed">
            <summary>
            Whether or not rebase-merging is enabled on this repository.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.RecentProjects(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            Recent projects that this user has modified in the context of the owner.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Ref(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Fetch a given ref from the repository
            </summary>
            <param name="qualifiedName">The ref to retrieve. Fully qualified matches are checked in order (`refs/heads/master`) before falling back onto checks for short name matches (`master`).</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Refs(Octokit.GraphQL.Core.Arg{System.String},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.OrderDirection}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RefOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            Fetch a list of refs from the repository
            </summary>
            <param name="refPrefix">A ref name prefix like `refs/heads/`, `refs/tags/`, etc.</param>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="direction">DEPRECATED: use orderBy. The ordering direction.</param>
            <param name="orderBy">Ordering options for refs returned from the connection.</param>
            <param name="query">Filters refs with query on name</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Release(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Lookup a single release given various criteria.
            </summary>
            <param name="tagName">The name of the Tag the Release was created from</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Releases(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReleaseOrder}})">
            <summary>
            List of releases which are dependent on this repository.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Order for connection</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.RepositoryTopics(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of applied repository-topic associations for this repository.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.ResourcePath">
            <summary>
            The HTTP path for this repository
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Ruleset(Octokit.GraphQL.Core.Arg{System.Int32})">
            <summary>
            Returns a single ruleset from the current repository by ID.
            </summary>
            <param name="databaseId">The ID of the ruleset to be returned.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Rulesets(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            A list of rulesets for this repository.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="includeParents">Return rulesets configured at higher levels that apply to this repository</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.SecurityPolicyUrl">
            <summary>
            The security policy URL.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.ShortDescriptionHTML(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            A description of the repository, rendered to HTML without any links in it.
            </summary>
            <param name="limit">How many characters to return.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.SquashMergeAllowed">
            <summary>
            Whether or not squash-merging is enabled on this repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.SquashMergeCommitMessage">
            <summary>
            How the default commit message will be generated when squash merging a pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.SquashMergeCommitTitle">
            <summary>
            How the default commit title will be generated when squash merging a pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.SquashPrTitleUsedAsDefault">
            <summary>
            Whether a squash merge commit can use the pull request title as default.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.SshUrl">
            <summary>
            The SSH URL to clone this repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.StargazerCount">
            <summary>
            Returns a count of how many stargazers there are on this object
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Stargazers(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.StarOrder}})">
            <summary>
            A list of users who have starred this starrable.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Order for connection</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Submodules(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            Returns a list of all submodules in this repository parsed from the .gitmodules file as of the default branch's HEAD commit.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.TempCloneToken">
            <summary>
            Temporary authentication token for cloning this repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.TemplateRepository">
            <summary>
            The repository from which this repository was generated, if any.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.Url">
            <summary>
            The HTTP URL for this repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.UsesCustomOpenGraphImage">
            <summary>
            Whether this repository has a custom image to use with Open Graph as opposed to being represented by the owner's avatar.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.ViewerCanAdminister">
            <summary>
            Indicates whether the viewer has admin permissions on this repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.ViewerCanCreateProjects">
            <summary>
            Can the current viewer create new projects on this owner.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.ViewerCanSubscribe">
            <summary>
            Check if the viewer is able to change their subscription status for the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.ViewerCanUpdateTopics">
            <summary>
            Indicates whether the viewer can update the topics of this repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.ViewerDefaultCommitEmail">
            <summary>
            The last commit email for the viewer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.ViewerDefaultMergeMethod">
            <summary>
            The last used merge method by the viewer or the default for the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.ViewerHasStarred">
            <summary>
            Returns a boolean indicating whether the viewing user has starred this starrable.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.ViewerPermission">
            <summary>
            The users permission level on the repository. Will return null if authenticated as an GitHub App.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.ViewerPossibleCommitEmails">
            <summary>
            A list of emails this viewer can commit with.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.ViewerSubscription">
            <summary>
            Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.Visibility">
            <summary>
            Indicates the repository's visibility level.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.VulnerabilityAlert(Octokit.GraphQL.Core.Arg{System.Int32})">
            <summary>
            Returns a single vulnerability alert from the current repository by number.
            </summary>
            <param name="number">The number for the vulnerability alert to be returned.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.VulnerabilityAlerts(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.RepositoryVulnerabilityAlertDependencyScope}}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.RepositoryVulnerabilityAlertState}}})">
            <summary>
            A list of vulnerability alerts that are on this repository.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="dependencyScopes">Filter by the scope of the alert's dependency</param>
            <param name="states">Filter by the state of the alert</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Repository.Watchers(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of users watching the repository.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Repository.WebCommitSignoffRequired">
            <summary>
            Whether contributors are required to sign off on web-based commits in this repository.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryAffiliation">
            <summary>
            The affiliation of a user to a repository
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryAffiliation.Owner">
            <summary>
            Repositories that are owned by the authenticated user.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryAffiliation.Collaborator">
            <summary>
            Repositories that the user has been added to as a collaborator.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryAffiliation.OrganizationMember">
            <summary>
            Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IRepositoryAuditEntryData">
            <summary>
            Metadata for an audit entry with action repo.*
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryAuditEntryData.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryAuditEntryData.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryAuditEntryData.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryAuditEntryData.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryCodeowners">
            <summary>
            Information extracted from a repository's `CODEOWNERS` file.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryCodeowners.Errors">
            <summary>
            Any problems that were encountered while parsing the `CODEOWNERS` file.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryCodeownersError">
            <summary>
            An error in a `CODEOWNERS` file.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryCodeownersError.Column">
            <summary>
            The column number where the error occurs.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryCodeownersError.Kind">
            <summary>
            A short string describing the type of error.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryCodeownersError.Line">
            <summary>
            The line number where the error occurs.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryCodeownersError.Message">
            <summary>
            A complete description of the error, combining information from other fields.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryCodeownersError.Path">
            <summary>
            The path to the file when the error occurs.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryCodeownersError.Source">
            <summary>
            The content of the line where the error occurs.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryCodeownersError.Suggestion">
            <summary>
            A suggestion of how to fix the error.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryCollaboratorConnection">
            <summary>
            The connection type for User.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryCollaboratorConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryCollaboratorConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryCollaboratorConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryCollaboratorConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryCollaboratorEdge">
            <summary>
            Represents a user who is a collaborator of a repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryCollaboratorEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryCollaboratorEdge.Permission">
            <summary>
            The permission the user has on the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryCollaboratorEdge.PermissionSources">
            <summary>
            A list of sources for the user's access to the repository.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryConnection">
            <summary>
            A list of repositories owned by the subject.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryConnection.TotalDiskUsage">
            <summary>
            The total size in kilobytes of all repositories in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryContactLink">
            <summary>
            A repository contact link.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryContactLink.About">
            <summary>
            The contact link purpose.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryContactLink.Name">
            <summary>
            The contact link name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryContactLink.Url">
            <summary>
            The contact link URL.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryContributionType">
            <summary>
            The reason a repository is listed as 'contributed'.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryContributionType.Commit">
            <summary>
            Created a commit
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryContributionType.Issue">
            <summary>
            Created an issue
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryContributionType.PullRequest">
            <summary>
            Created a pull request
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryContributionType.Repository">
            <summary>
            Created the repository
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryContributionType.PullRequestReview">
            <summary>
            Reviewed a pull request
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IRepositoryDiscussionAuthor">
            <summary>
            Represents an author of discussions in repositories.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IRepositoryDiscussionAuthor.RepositoryDiscussions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DiscussionOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.ID}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.DiscussionState}}})">
            <summary>
            Discussions this user has started.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="answered">Filter discussions to only those that have been answered or not. Defaults to including both answered and unanswered discussions.</param>
            <param name="orderBy">Ordering options for discussions returned from the connection.</param>
            <param name="repositoryId">Filter discussions to only those in a specific repository.</param>
            <param name="states">A list of states to filter the discussions by.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.IRepositoryDiscussionCommentAuthor">
            <summary>
            Represents an author of discussion comments in repositories.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IRepositoryDiscussionCommentAuthor.RepositoryDiscussionComments(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.ID}})">
            <summary>
            Discussion comments this user has authored.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="onlyAnswers">Filter discussion comments to only those that were marked as the answer</param>
            <param name="repositoryId">Filter discussion comments to only those in a specific repository.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IRepositoryInfo">
            <summary>
            A subset of repository info.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.ArchivedAt">
            <summary>
            Identifies the date and time when the repository was archived.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.Description">
            <summary>
            The description of the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.DescriptionHTML">
            <summary>
            The description of the repository rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.ForkCount">
            <summary>
            Returns how many forks there are of this repository in the whole network.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.HasDiscussionsEnabled">
            <summary>
            Indicates if the repository has the Discussions feature enabled.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.HasIssuesEnabled">
            <summary>
            Indicates if the repository has issues feature enabled.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.HasProjectsEnabled">
            <summary>
            Indicates if the repository has the Projects feature enabled.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.HasWikiEnabled">
            <summary>
            Indicates if the repository has wiki feature enabled.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.HomepageUrl">
            <summary>
            The repository's URL.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.IsArchived">
            <summary>
            Indicates if the repository is unmaintained.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.IsFork">
            <summary>
            Identifies if the repository is a fork.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.IsInOrganization">
            <summary>
            Indicates if a repository is either owned by an organization, or is a private fork of an organization repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.IsLocked">
            <summary>
            Indicates if the repository has been locked or not.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.IsMirror">
            <summary>
            Identifies if the repository is a mirror.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.IsPrivate">
            <summary>
            Identifies if the repository is private or internal.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.IsTemplate">
            <summary>
            Identifies if the repository is a template that can be used to generate new repositories.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.LicenseInfo">
            <summary>
            The license associated with the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.LockReason">
            <summary>
            The reason the repository has been locked.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.MirrorUrl">
            <summary>
            The repository's original mirror URL.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.Name">
            <summary>
            The name of the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.NameWithOwner">
            <summary>
            The repository's name with owner.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.OpenGraphImageUrl">
            <summary>
            The image used to represent this repository in Open Graph data.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.Owner">
            <summary>
            The User owner of the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.PushedAt">
            <summary>
            Identifies the date and time when the repository was last pushed to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.ResourcePath">
            <summary>
            The HTTP path for this repository
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IRepositoryInfo.ShortDescriptionHTML(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            A description of the repository, rendered to HTML without any links in it.
            </summary>
            <param name="limit">How many characters to return.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.Url">
            <summary>
            The HTTP URL for this repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.UsesCustomOpenGraphImage">
            <summary>
            Whether this repository has a custom image to use with Open Graph as opposed to being represented by the owner's avatar.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryInfo.Visibility">
            <summary>
            Indicates the repository's visibility level.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryInteractionAbility">
            <summary>
            Repository interaction limit that applies to this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryInteractionAbility.ExpiresAt">
            <summary>
            The time the currently active limit expires.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryInteractionAbility.Limit">
            <summary>
            The current limit that is enabled on this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryInteractionAbility.Origin">
            <summary>
            The origin of the currently active interaction limit.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryInteractionLimit">
            <summary>
            A repository interaction limit.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryInteractionLimit.ExistingUsers">
            <summary>
            Users that have recently created their account will be unable to interact with the repository.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryInteractionLimit.ContributorsOnly">
            <summary>
            Users that have not previously committed to a repository’s default branch will be unable to interact with the repository.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryInteractionLimit.CollaboratorsOnly">
            <summary>
            Users that are not collaborators will not be able to interact with the repository.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryInteractionLimit.NoLimit">
            <summary>
            No interaction limits are enabled.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryInteractionLimitExpiry">
            <summary>
            The length for a repository interaction limit to be enabled for.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryInteractionLimitExpiry.OneDay">
            <summary>
            The interaction limit will expire after 1 day.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryInteractionLimitExpiry.ThreeDays">
            <summary>
            The interaction limit will expire after 3 days.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryInteractionLimitExpiry.OneWeek">
            <summary>
            The interaction limit will expire after 1 week.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryInteractionLimitExpiry.OneMonth">
            <summary>
            The interaction limit will expire after 1 month.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryInteractionLimitExpiry.SixMonths">
            <summary>
            The interaction limit will expire after 6 months.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryInteractionLimitOrigin">
            <summary>
            Indicates where an interaction limit is configured.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryInteractionLimitOrigin.Repository">
            <summary>
            A limit that is configured at the repository level.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryInteractionLimitOrigin.Organization">
            <summary>
            A limit that is configured at the organization level.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryInteractionLimitOrigin.User">
            <summary>
            A limit that is configured at the user-wide level.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryInvitation">
            <summary>
            An invitation for a user to be added to a repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryInvitation.Email">
            <summary>
            The email address that received the invitation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryInvitation.Invitee">
            <summary>
            The user who received the invitation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryInvitation.Inviter">
            <summary>
            The user who created the invitation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryInvitation.Permalink">
            <summary>
            The permalink for this repository invitation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryInvitation.Permission">
            <summary>
            The permission granted on this repository by this invitation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryInvitation.Repository">
            <summary>
            The Repository the user is invited to.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryInvitationConnection">
            <summary>
            A list of repository invitations.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryInvitationConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryInvitationConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryInvitationConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryInvitationConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryInvitationEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryInvitationEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryInvitationEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryInvitationOrder">
            <summary>
            Ordering options for repository invitation connections.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryInvitationOrder.Field">
            <summary>
            The field to order repository invitations by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryInvitationOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryInvitationOrderField">
            <summary>
            Properties by which repository invitation connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryInvitationOrderField.CreatedAt">
            <summary>
            Order repository invitations by creation time
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryLockReason">
            <summary>
            The possible reasons a given repository could be in a locked state.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryLockReason.Moving">
            <summary>
            The repository is locked due to a move.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryLockReason.Billing">
            <summary>
            The repository is locked due to a billing related reason.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryLockReason.Rename">
            <summary>
            The repository is locked due to a rename.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryLockReason.Migrating">
            <summary>
            The repository is locked due to a migration.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryLockReason.TradeRestriction">
            <summary>
            The repository is locked due to a trade controls related reason.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryMigration">
            <summary>
            A GitHub Enterprise Importer (GEI) repository migration.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryMigration.ContinueOnError">
            <summary>
            The migration flag to continue on error.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryMigration.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryMigration.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryMigration.FailureReason">
            <summary>
            The reason the migration failed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryMigration.MigrationLogUrl">
            <summary>
            The URL for the migration log (expires 1 day after migration completes).
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryMigration.MigrationSource">
            <summary>
            The migration source.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryMigration.RepositoryName">
            <summary>
            The target repository name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryMigration.SourceUrl">
            <summary>
            The migration source URL, for example `https://github.com` or `https://monalisa.ghe.com`.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryMigration.State">
            <summary>
            The migration state.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryMigration.WarningsCount">
            <summary>
            The number of warnings encountered for this migration. To review the warnings, check the [Migration Log](https://docs.github.com/en/migrations/using-github-enterprise-importer/completing-your-migration-with-github-enterprise-importer/accessing-your-migration-logs-for-github-enterprise-importer).
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryMigrationConnection">
            <summary>
            The connection type for RepositoryMigration.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryMigrationConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryMigrationConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryMigrationConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryMigrationConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryMigrationEdge">
            <summary>
            Represents a repository migration.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryMigrationEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryMigrationEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryMigrationOrder">
            <summary>
            Ordering options for repository migrations.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryMigrationOrder.Field">
            <summary>
            The field to order repository migrations by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryMigrationOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryMigrationOrderDirection">
            <summary>
            Possible directions in which to order a list of repository migrations when provided an `orderBy` argument.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryMigrationOrderDirection.Asc">
            <summary>
            Specifies an ascending order for a given `orderBy` argument.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryMigrationOrderDirection.Desc">
            <summary>
            Specifies a descending order for a given `orderBy` argument.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryMigrationOrderField">
            <summary>
            Properties by which repository migrations can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryMigrationOrderField.CreatedAt">
            <summary>
            Order mannequins why when they were created.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryNameConditionTarget">
            <summary>
            Parameters to be used for the repository_name condition
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryNameConditionTarget.Exclude">
            <summary>
            Array of repository names or patterns to exclude. The condition will not pass if any of these patterns match.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryNameConditionTarget.Include">
            <summary>
            Array of repository names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~ALL` to include all repositories.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryNameConditionTarget.Protected">
            <summary>
            Target changes that match these patterns will be prevented except by those with bypass permissions.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryNameConditionTargetInput">
            <summary>
            Parameters to be used for the repository_name condition
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryNameConditionTargetInput.Exclude">
            <summary>
            Array of repository names or patterns to exclude. The condition will not pass if any of these patterns match.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryNameConditionTargetInput.Include">
            <summary>
            Array of repository names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~ALL` to include all repositories.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryNameConditionTargetInput.Protected">
            <summary>
            Target changes that match these patterns will be prevented except by those with bypass permissions.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IRepositoryNode">
            <summary>
            Represents a object that belongs to a repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryNode.Repository">
            <summary>
            The repository associated with this node.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryOrder">
            <summary>
            Ordering options for repository connections
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryOrder.Field">
            <summary>
            The field to order repositories by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryOrderField">
            <summary>
            Properties by which repository connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryOrderField.CreatedAt">
            <summary>
            Order repositories by creation time
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryOrderField.UpdatedAt">
            <summary>
            Order repositories by update time
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryOrderField.PushedAt">
            <summary>
            Order repositories by push time
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryOrderField.Name">
            <summary>
            Order repositories by name
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryOrderField.Stargazers">
            <summary>
            Order repositories by number of stargazers
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IRepositoryOwner">
            <summary>
            Represents an owner of a Repository.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IRepositoryOwner.AvatarUrl(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            A URL pointing to the owner's public avatar.
            </summary>
            <param name="size">The size of the resulting square image.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryOwner.Login">
            <summary>
            The username used to login.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IRepositoryOwner.Repositories(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.Nullable{Octokit.GraphQL.Model.RepositoryAffiliation}}}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RepositoryOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.Nullable{Octokit.GraphQL.Model.RepositoryAffiliation}}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RepositoryPrivacy}})">
            <summary>
            A list of repositories that the user owns.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="affiliations">Array of viewer's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the current viewer owns.</param>
            <param name="isFork">If non-null, filters repositories according to whether they are forks of another repository</param>
            <param name="isLocked">If non-null, filters repositories according to whether they have been locked</param>
            <param name="orderBy">Ordering options for repositories returned from the connection</param>
            <param name="ownerAffiliations">Array of owner's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the organization or user being viewed owns.</param>
            <param name="privacy">If non-null, filters repositories according to privacy</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.IRepositoryOwner.Repository(Octokit.GraphQL.Core.Arg{System.String},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            Find Repository.
            </summary>
            <param name="name">Name of Repository to find.</param>
            <param name="followRenames">Follow repository renames. If disabled, a repository referenced by its old name will return an error.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryOwner.ResourcePath">
            <summary>
            The HTTP URL for the owner.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IRepositoryOwner.Url">
            <summary>
            The HTTP URL for the owner.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryPermission">
            <summary>
            The access level to a repository
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryPermission.Admin">
            <summary>
            Can read, clone, and push to this repository. Can also manage issues, pull requests, and repository settings, including adding collaborators
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryPermission.Maintain">
            <summary>
            Can read, clone, and push to this repository. They can also manage issues, pull requests, and some repository settings
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryPermission.Write">
            <summary>
            Can read, clone, and push to this repository. Can also manage issues and pull requests
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryPermission.Triage">
            <summary>
            Can read and clone this repository. Can also manage issues and pull requests
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryPermission.Read">
            <summary>
            Can read and clone this repository. Can also open and comment on issues and pull requests
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryPrivacy">
            <summary>
            The privacy of a repository
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryPrivacy.Public">
            <summary>
            Public
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryPrivacy.Private">
            <summary>
            Private
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryRule">
            <summary>
            A repository rule.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRule.Parameters">
            <summary>
            The parameters for this rule.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRule.Type">
            <summary>
            The type of rule.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryRuleConditions">
            <summary>
            Set of conditions that determine if a ruleset will evaluate
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRuleConditions.RefName">
            <summary>
            Configuration for the ref_name condition
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRuleConditions.RepositoryName">
            <summary>
            Configuration for the repository_name condition
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryRuleConditionsInput">
            <summary>
            Specifies the conditions required for a ruleset to evaluate
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRuleConditionsInput.RefName">
            <summary>
            Configuration for the ref_name condition
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRuleConditionsInput.RepositoryName">
            <summary>
            Configuration for the repository_name condition
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryRuleConnection">
            <summary>
            The connection type for RepositoryRule.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRuleConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRuleConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRuleConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRuleConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryRuleEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRuleEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRuleEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryRuleInput">
            <summary>
            Specifies the attributes for a new or updated rule.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRuleInput.Id">
            <summary>
            Optional ID of this rule when updating
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRuleInput.Type">
            <summary>
            The type of rule to create.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRuleInput.Parameters">
            <summary>
            The parameters for the rule.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryRuleset">
            <summary>
            A repository ruleset.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.RepositoryRuleset.BypassActors(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The actors that can bypass this ruleset
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRuleset.BypassMode">
            <summary>
            The bypass mode of this ruleset
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRuleset.Conditions">
            <summary>
            The set of conditions that must evaluate to true for this ruleset to apply
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRuleset.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRuleset.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRuleset.Enforcement">
            <summary>
            The enforcement level of this ruleset
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRuleset.Name">
            <summary>
            Name of the ruleset.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.RepositoryRuleset.Rules(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RepositoryRuleType}})">
            <summary>
            List of rules.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="type">The type of rule.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRuleset.Source">
            <summary>
            Source of ruleset.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRuleset.Target">
            <summary>
            Target of the ruleset.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRuleset.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryRulesetBypassActor">
            <summary>
            A team or app that has the ability to bypass a rules defined on a ruleset
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRulesetBypassActor.Actor">
            <summary>
            The actor that can bypass rules.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRulesetBypassActor.RepositoryRuleset">
            <summary>
            Identifies the ruleset associated with the allowed actor
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryRulesetBypassActorConnection">
            <summary>
            The connection type for RepositoryRulesetBypassActor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRulesetBypassActorConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRulesetBypassActorConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRulesetBypassActorConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRulesetBypassActorConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryRulesetBypassActorEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRulesetBypassActorEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRulesetBypassActorEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryRulesetConnection">
            <summary>
            The connection type for RepositoryRuleset.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRulesetConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRulesetConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRulesetConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRulesetConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryRulesetEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRulesetEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryRulesetEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryRulesetTarget">
            <summary>
            The targets supported for rulesets
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryRulesetTarget.Branch">
            <summary>
            Branch
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryRulesetTarget.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryRuleType">
            <summary>
            The rule types supported in rulesets
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryRuleType.Creation">
            <summary>
            Only allow users with bypass permission to create matching refs.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryRuleType.Update">
            <summary>
            Only allow users with bypass permission to update matching refs.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryRuleType.Deletion">
            <summary>
            Only allow users with bypass permissions to delete matching refs.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryRuleType.RequiredLinearHistory">
            <summary>
            Prevent merge commits from being pushed to matching branches.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryRuleType.RequiredDeployments">
            <summary>
            Choose which environments must be successfully deployed to before branches can be merged into a branch that matches this rule.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryRuleType.RequiredSignatures">
            <summary>
            Commits pushed to matching branches must have verified signatures.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryRuleType.PullRequest">
            <summary>
            Require all commits be made to a non-target branch and submitted via a pull request before they can be merged.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryRuleType.RequiredStatusChecks">
            <summary>
            Choose which status checks must pass before branches can be merged into a branch that matches this rule. When enabled, commits must first be pushed to another branch, then merged or pushed directly to a branch that matches this rule after status checks have passed.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryRuleType.NonFastForward">
            <summary>
            Prevent users with push access from force pushing to branches.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryRuleType.CommitMessagePattern">
            <summary>
            Commit message pattern
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryRuleType.CommitAuthorEmailPattern">
            <summary>
            Commit author email pattern
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryRuleType.CommitterEmailPattern">
            <summary>
            Committer email pattern
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryRuleType.BranchNamePattern">
            <summary>
            Branch name pattern
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryRuleType.TagNamePattern">
            <summary>
            Tag name pattern
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryTopic">
            <summary>
            A repository-topic connects a repository to a topic.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryTopic.ResourcePath">
            <summary>
            The HTTP path for this repository-topic.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryTopic.Topic">
            <summary>
            The topic.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryTopic.Url">
            <summary>
            The HTTP URL for this repository-topic.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryTopicConnection">
            <summary>
            The connection type for RepositoryTopic.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryTopicConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryTopicConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryTopicConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryTopicConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryTopicEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryTopicEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryTopicEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryVisibility">
            <summary>
            The repository's visibility level.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryVisibility.Private">
            <summary>
            The repository is visible only to those with explicit access.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryVisibility.Public">
            <summary>
            The repository is visible to everyone.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryVisibility.Internal">
            <summary>
            The repository is visible only to users in the same business.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryVisibilityChangeDisableAuditEntry">
            <summary>
            Audit log entry for a repository_visibility_change.disable event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeDisableAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeDisableAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeDisableAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeDisableAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeDisableAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeDisableAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeDisableAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeDisableAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeDisableAuditEntry.EnterpriseResourcePath">
            <summary>
            The HTTP path for this enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeDisableAuditEntry.EnterpriseSlug">
            <summary>
            The slug of the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeDisableAuditEntry.EnterpriseUrl">
            <summary>
            The HTTP URL for this enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeDisableAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeDisableAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeDisableAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeDisableAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeDisableAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeDisableAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeDisableAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeDisableAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeDisableAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryVisibilityChangeEnableAuditEntry">
            <summary>
            Audit log entry for a repository_visibility_change.enable event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeEnableAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeEnableAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeEnableAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeEnableAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeEnableAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeEnableAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeEnableAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeEnableAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeEnableAuditEntry.EnterpriseResourcePath">
            <summary>
            The HTTP path for this enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeEnableAuditEntry.EnterpriseSlug">
            <summary>
            The slug of the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeEnableAuditEntry.EnterpriseUrl">
            <summary>
            The HTTP URL for this enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeEnableAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeEnableAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeEnableAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeEnableAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeEnableAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeEnableAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeEnableAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeEnableAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVisibilityChangeEnableAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryVulnerabilityAlert">
            <summary>
            A Dependabot alert for a repository with a dependency affected by a security vulnerability.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVulnerabilityAlert.AutoDismissedAt">
            <summary>
            When was the alert auto-dismissed?
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVulnerabilityAlert.CreatedAt">
            <summary>
            When was the alert created?
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVulnerabilityAlert.DependabotUpdate">
            <summary>
            The associated Dependabot update
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVulnerabilityAlert.DependencyScope">
            <summary>
            The scope of an alert's dependency
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVulnerabilityAlert.DismissComment">
            <summary>
            Comment explaining the reason the alert was dismissed
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVulnerabilityAlert.DismissReason">
            <summary>
            The reason the alert was dismissed
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVulnerabilityAlert.DismissedAt">
            <summary>
            When was the alert dismissed?
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVulnerabilityAlert.Dismisser">
            <summary>
            The user who dismissed the alert
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVulnerabilityAlert.FixedAt">
            <summary>
            When was the alert fixed?
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVulnerabilityAlert.Number">
            <summary>
            Identifies the alert number.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVulnerabilityAlert.Repository">
            <summary>
            The associated repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVulnerabilityAlert.SecurityAdvisory">
            <summary>
            The associated security advisory
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVulnerabilityAlert.SecurityVulnerability">
            <summary>
            The associated security vulnerability
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVulnerabilityAlert.State">
            <summary>
            Identifies the state of the alert.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVulnerabilityAlert.VulnerableManifestFilename">
            <summary>
            The vulnerable manifest filename
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVulnerabilityAlert.VulnerableManifestPath">
            <summary>
            The vulnerable manifest path
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVulnerabilityAlert.VulnerableRequirements">
            <summary>
            The vulnerable requirements
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryVulnerabilityAlertConnection">
            <summary>
            The connection type for RepositoryVulnerabilityAlert.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVulnerabilityAlertConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVulnerabilityAlertConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVulnerabilityAlertConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVulnerabilityAlertConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryVulnerabilityAlertDependencyScope">
            <summary>
            The possible scopes of an alert's dependency.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryVulnerabilityAlertDependencyScope.Runtime">
            <summary>
            A dependency that is leveraged during application runtime
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryVulnerabilityAlertDependencyScope.Development">
            <summary>
            A dependency that is only used in development
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryVulnerabilityAlertEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVulnerabilityAlertEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RepositoryVulnerabilityAlertEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RepositoryVulnerabilityAlertState">
            <summary>
            The possible states of an alert
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryVulnerabilityAlertState.Open">
            <summary>
            An alert that is still open.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryVulnerabilityAlertState.Fixed">
            <summary>
            An alert that has been resolved by a code change.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryVulnerabilityAlertState.Dismissed">
            <summary>
            An alert that has been manually closed by a user.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RepositoryVulnerabilityAlertState.AutoDismissed">
            <summary>
            An alert that has been automatically closed by Dependabot.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RequestableCheckStatusState">
            <summary>
            The possible states that can be requested when creating a check run.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RequestableCheckStatusState.Queued">
            <summary>
            The check suite or run has been queued.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RequestableCheckStatusState.InProgress">
            <summary>
            The check suite or run is in progress.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RequestableCheckStatusState.Completed">
            <summary>
            The check suite or run has been completed.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RequestableCheckStatusState.Waiting">
            <summary>
            The check suite or run is in waiting state.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RequestableCheckStatusState.Pending">
            <summary>
            The check suite or run is in pending state.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RequestedReviewer">
            <summary>
            Types that can be requested reviewers.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.RequestedReviewer.Selector`1.Mannequin(System.Func{Octokit.GraphQL.Model.Mannequin,`0})">
            <summary>
            A placeholder user for attribution of imported data on GitHub.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.RequestedReviewer.Selector`1.Team(System.Func{Octokit.GraphQL.Model.Team,`0})">
            <summary>
            A team of users in an organization.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.RequestedReviewer.Selector`1.User(System.Func{Octokit.GraphQL.Model.User,`0})">
            <summary>
            A user is an individual's account on GitHub that owns repositories and can make new content.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RequestedReviewerConnection">
            <summary>
            The connection type for RequestedReviewer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequestedReviewerConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequestedReviewerConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequestedReviewerConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequestedReviewerConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RequestedReviewerEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequestedReviewerEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequestedReviewerEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RequestReviewsInput">
            <summary>
            Autogenerated input type of RequestReviews
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequestReviewsInput.PullRequestId">
            <summary>
            The Node ID of the pull request to modify.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequestReviewsInput.UserIds">
            <summary>
            The Node IDs of the user to request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequestReviewsInput.TeamIds">
            <summary>
            The Node IDs of the team to request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequestReviewsInput.Union">
            <summary>
            Add users to the set rather than replace.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequestReviewsInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RequestReviewsPayload">
            <summary>
            Autogenerated return type of RequestReviews
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequestReviewsPayload.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequestReviewsPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequestReviewsPayload.PullRequest">
            <summary>
            The pull request that is getting requests.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequestReviewsPayload.RequestedReviewersEdge">
            <summary>
            The edge from the pull request to the requested reviewers.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IRequirableByPullRequest">
            <summary>
            Represents a type that can be required by a pull request for merging.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IRequirableByPullRequest.IsRequired(System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.ID}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            Whether this is required to pass before merging for a specific pull request.
            </summary>
            <param name="pullRequestId">The id of the pull request this is required for</param>
            <param name="pullRequestNumber">The number of the pull request this is required for</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.RequiredDeploymentsParameters">
            <summary>
            Choose which environments must be successfully deployed to before branches can be merged into a branch that matches this rule.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequiredDeploymentsParameters.RequiredDeploymentEnvironments">
            <summary>
            The environments that must be successfully deployed to before branches can be merged.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RequiredDeploymentsParametersInput">
            <summary>
            Choose which environments must be successfully deployed to before branches can be merged into a branch that matches this rule.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequiredDeploymentsParametersInput.RequiredDeploymentEnvironments">
            <summary>
            The environments that must be successfully deployed to before branches can be merged.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RequiredStatusCheckDescription">
            <summary>
            Represents a required status check for a protected branch, but not any specific run of that check.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequiredStatusCheckDescription.App">
            <summary>
            The App that must provide this status in order for it to be accepted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequiredStatusCheckDescription.Context">
            <summary>
            The name of this status.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RequiredStatusCheckInput">
            <summary>
            Specifies the attributes for a new or updated required status check.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequiredStatusCheckInput.Context">
            <summary>
            Status check context that must pass for commits to be accepted to the matching branch.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequiredStatusCheckInput.AppId">
            <summary>
            The ID of the App that must set the status in order for it to be accepted. Omit this value to use whichever app has recently been setting this status, or use "any" to allow any app to set the status.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RequiredStatusChecksParameters">
            <summary>
            Choose which status checks must pass before branches can be merged into a branch that matches this rule. When enabled, commits must first be pushed to another branch, then merged or pushed directly to a branch that matches this rule after status checks have passed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequiredStatusChecksParameters.RequiredStatusChecks">
            <summary>
            Status checks that are required.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequiredStatusChecksParameters.StrictRequiredStatusChecksPolicy">
            <summary>
            Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RequiredStatusChecksParametersInput">
            <summary>
            Choose which status checks must pass before branches can be merged into a branch that matches this rule. When enabled, commits must first be pushed to another branch, then merged or pushed directly to a branch that matches this rule after status checks have passed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequiredStatusChecksParametersInput.RequiredStatusChecks">
            <summary>
            Status checks that are required.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RequiredStatusChecksParametersInput.StrictRequiredStatusChecksPolicy">
            <summary>
            Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RerequestCheckSuiteInput">
            <summary>
            Autogenerated input type of RerequestCheckSuite
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RerequestCheckSuiteInput.RepositoryId">
            <summary>
            The Node ID of the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RerequestCheckSuiteInput.CheckSuiteId">
            <summary>
            The Node ID of the check suite.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RerequestCheckSuiteInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RerequestCheckSuitePayload">
            <summary>
            Autogenerated return type of RerequestCheckSuite
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RerequestCheckSuitePayload.CheckSuite">
            <summary>
            The requested check suite.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RerequestCheckSuitePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ResolveReviewThreadInput">
            <summary>
            Autogenerated input type of ResolveReviewThread
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ResolveReviewThreadInput.ThreadId">
            <summary>
            The ID of the thread to resolve
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ResolveReviewThreadInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ResolveReviewThreadPayload">
            <summary>
            Autogenerated return type of ResolveReviewThread
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ResolveReviewThreadPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ResolveReviewThreadPayload.Thread">
            <summary>
            The thread to resolve.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RestrictedContribution">
            <summary>
            Represents a private contribution a user made on GitHub.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RestrictedContribution.IsRestricted">
            <summary>
            Whether this contribution is associated with a record you do not have access to. For
            example, your own 'first issue' contribution may have been made on a repository you can no
            longer access.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RestrictedContribution.OccurredAt">
            <summary>
            When this contribution was made.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RestrictedContribution.ResourcePath">
            <summary>
            The HTTP path for this contribution.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RestrictedContribution.Url">
            <summary>
            The HTTP URL for this contribution.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RestrictedContribution.User">
            <summary>
            The user who made this contribution.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RetireSponsorsTierInput">
            <summary>
            Autogenerated input type of RetireSponsorsTier
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RetireSponsorsTierInput.TierId">
            <summary>
            The ID of the published tier to retire.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RetireSponsorsTierInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RetireSponsorsTierPayload">
            <summary>
            Autogenerated return type of RetireSponsorsTier
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RetireSponsorsTierPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RetireSponsorsTierPayload.SponsorsTier">
            <summary>
            The tier that was retired.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RevertPullRequestInput">
            <summary>
            Autogenerated input type of RevertPullRequest
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RevertPullRequestInput.PullRequestId">
            <summary>
            The ID of the pull request to revert.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RevertPullRequestInput.Title">
            <summary>
            The title of the revert pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RevertPullRequestInput.Body">
            <summary>
            The description of the revert pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RevertPullRequestInput.Draft">
            <summary>
            Indicates whether the revert pull request should be a draft.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RevertPullRequestInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RevertPullRequestPayload">
            <summary>
            Autogenerated return type of RevertPullRequest
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RevertPullRequestPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RevertPullRequestPayload.PullRequest">
            <summary>
            The pull request that was reverted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RevertPullRequestPayload.RevertPullRequest">
            <summary>
            The new pull request that reverts the input pull request.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReviewDismissalAllowance">
            <summary>
            A user, team, or app who has the ability to dismiss a review on a protected branch.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewDismissalAllowance.Actor">
            <summary>
            The actor that can dismiss.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewDismissalAllowance.BranchProtectionRule">
            <summary>
            Identifies the branch protection rule associated with the allowed user, team, or app.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReviewDismissalAllowanceActor">
            <summary>
            Types that can be an actor.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ReviewDismissalAllowanceActor.Selector`1.App(System.Func{Octokit.GraphQL.Model.App,`0})">
            <summary>
            A GitHub App.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ReviewDismissalAllowanceActor.Selector`1.Team(System.Func{Octokit.GraphQL.Model.Team,`0})">
            <summary>
            A team of users in an organization.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ReviewDismissalAllowanceActor.Selector`1.User(System.Func{Octokit.GraphQL.Model.User,`0})">
            <summary>
            A user is an individual's account on GitHub that owns repositories and can make new content.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReviewDismissalAllowanceConnection">
            <summary>
            The connection type for ReviewDismissalAllowance.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewDismissalAllowanceConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewDismissalAllowanceConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewDismissalAllowanceConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewDismissalAllowanceConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReviewDismissalAllowanceEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewDismissalAllowanceEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewDismissalAllowanceEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReviewDismissedEvent">
            <summary>
            Represents a 'review_dismissed' event on a given issue or pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewDismissedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewDismissedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewDismissedEvent.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewDismissedEvent.DismissalMessage">
            <summary>
            Identifies the optional message associated with the 'review_dismissed' event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewDismissedEvent.DismissalMessageHTML">
            <summary>
            Identifies the optional message associated with the event, rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewDismissedEvent.PreviousReviewState">
            <summary>
            Identifies the previous state of the review with the 'review_dismissed' event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewDismissedEvent.PullRequest">
            <summary>
            PullRequest referenced by event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewDismissedEvent.PullRequestCommit">
            <summary>
            Identifies the commit which caused the review to become stale.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewDismissedEvent.ResourcePath">
            <summary>
            The HTTP path for this review dismissed event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewDismissedEvent.Review">
            <summary>
            Identifies the review associated with the 'review_dismissed' event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewDismissedEvent.Url">
            <summary>
            The HTTP URL for this review dismissed event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReviewRequest">
            <summary>
            A request for a user to review a pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewRequest.AsCodeOwner">
            <summary>
            Whether this request was created for a code owner
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewRequest.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewRequest.PullRequest">
            <summary>
            Identifies the pull request associated with this review request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewRequest.RequestedReviewer">
            <summary>
            The reviewer that is requested.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReviewRequestConnection">
            <summary>
            The connection type for ReviewRequest.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewRequestConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewRequestConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewRequestConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewRequestConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReviewRequestedEvent">
            <summary>
            Represents an 'review_requested' event on a given pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewRequestedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewRequestedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewRequestedEvent.PullRequest">
            <summary>
            PullRequest referenced by event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewRequestedEvent.RequestedReviewer">
            <summary>
            Identifies the reviewer whose review was requested.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReviewRequestEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewRequestEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewRequestEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReviewRequestRemovedEvent">
            <summary>
            Represents an 'review_request_removed' event on a given pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewRequestRemovedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewRequestRemovedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewRequestRemovedEvent.PullRequest">
            <summary>
            PullRequest referenced by event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewRequestRemovedEvent.RequestedReviewer">
            <summary>
            Identifies the reviewer whose review request was removed.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ReviewStatusHovercardContext">
            <summary>
            A hovercard context with a message describing the current code review state of the pull
            request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewStatusHovercardContext.Message">
            <summary>
            A string describing this context
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewStatusHovercardContext.Octicon">
            <summary>
            An octicon to accompany this context
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ReviewStatusHovercardContext.ReviewDecision">
            <summary>
            The current status of the pull request with respect to code review.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RevokeEnterpriseOrganizationsMigratorRoleInput">
            <summary>
            Autogenerated input type of RevokeEnterpriseOrganizationsMigratorRole
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RevokeEnterpriseOrganizationsMigratorRoleInput.EnterpriseId">
            <summary>
            The ID of the enterprise to which all organizations managed by it will be granted the migrator role.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RevokeEnterpriseOrganizationsMigratorRoleInput.Login">
            <summary>
            The login of the user to revoke the migrator role
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RevokeEnterpriseOrganizationsMigratorRoleInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RevokeEnterpriseOrganizationsMigratorRolePayload">
            <summary>
            Autogenerated return type of RevokeEnterpriseOrganizationsMigratorRole
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RevokeEnterpriseOrganizationsMigratorRolePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.RevokeEnterpriseOrganizationsMigratorRolePayload.Organizations(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The organizations that had the migrator role revoked for the given user.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.RevokeMigratorRoleInput">
            <summary>
            Autogenerated input type of RevokeMigratorRole
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RevokeMigratorRoleInput.OrganizationId">
            <summary>
            The ID of the organization that the user/team belongs to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RevokeMigratorRoleInput.Actor">
            <summary>
            The user login or Team slug to revoke the migrator role from.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RevokeMigratorRoleInput.ActorType">
            <summary>
            Specifies the type of the actor, can be either USER or TEAM.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RevokeMigratorRoleInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RevokeMigratorRolePayload">
            <summary>
            Autogenerated return type of RevokeMigratorRole
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RevokeMigratorRolePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RevokeMigratorRolePayload.Success">
            <summary>
            Did the operation succeed?
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RoleInOrganization">
            <summary>
            Possible roles a user may have in relation to an organization.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RoleInOrganization.Owner">
            <summary>
            A user with full administrative access to the organization.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RoleInOrganization.DirectMember">
            <summary>
            A user who is a direct member of the organization.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RoleInOrganization.Unaffiliated">
            <summary>
            A user who is unaffiliated with the organization.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RuleBypassMode">
            <summary>
            The bypass mode for a rule or ruleset.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RuleBypassMode.None">
            <summary>
            Bypassing is disabled
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RuleBypassMode.Repository">
            <summary>
            Those with bypass permission at the repository level can bypass
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RuleBypassMode.Organization">
            <summary>
            Those with bypass permission at the organization level can bypass
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RuleEnforcement">
            <summary>
            The level of enforcement for a rule or ruleset.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RuleEnforcement.Disabled">
            <summary>
            Do not evaluate or enforce rules
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RuleEnforcement.Active">
            <summary>
            Rules will be enforced
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.RuleEnforcement.Evaluate">
            <summary>
            Allow admins to test rules before enforcing them. Admins can view insights on the Rule Insights page (`evaluate` is only available with GitHub Enterprise).
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RuleParameters">
            <summary>
            Types which can be parameters for `RepositoryRule` objects.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.RuleParameters.Selector`1.BranchNamePatternParameters(System.Func{Octokit.GraphQL.Model.BranchNamePatternParameters,`0})">
            <summary>
            Parameters to be used for the branch_name_pattern rule
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.RuleParameters.Selector`1.CommitAuthorEmailPatternParameters(System.Func{Octokit.GraphQL.Model.CommitAuthorEmailPatternParameters,`0})">
            <summary>
            Parameters to be used for the commit_author_email_pattern rule
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.RuleParameters.Selector`1.CommitMessagePatternParameters(System.Func{Octokit.GraphQL.Model.CommitMessagePatternParameters,`0})">
            <summary>
            Parameters to be used for the commit_message_pattern rule
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.RuleParameters.Selector`1.CommitterEmailPatternParameters(System.Func{Octokit.GraphQL.Model.CommitterEmailPatternParameters,`0})">
            <summary>
            Parameters to be used for the committer_email_pattern rule
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.RuleParameters.Selector`1.PullRequestParameters(System.Func{Octokit.GraphQL.Model.PullRequestParameters,`0})">
            <summary>
            Require all commits be made to a non-target branch and submitted via a pull request before they can be merged.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.RuleParameters.Selector`1.RequiredDeploymentsParameters(System.Func{Octokit.GraphQL.Model.RequiredDeploymentsParameters,`0})">
            <summary>
            Choose which environments must be successfully deployed to before branches can be merged into a branch that matches this rule.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.RuleParameters.Selector`1.RequiredStatusChecksParameters(System.Func{Octokit.GraphQL.Model.RequiredStatusChecksParameters,`0})">
            <summary>
            Choose which status checks must pass before branches can be merged into a branch that matches this rule. When enabled, commits must first be pushed to another branch, then merged or pushed directly to a branch that matches this rule after status checks have passed.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.RuleParameters.Selector`1.TagNamePatternParameters(System.Func{Octokit.GraphQL.Model.TagNamePatternParameters,`0})">
            <summary>
            Parameters to be used for the tag_name_pattern rule
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.RuleParameters.Selector`1.UpdateParameters(System.Func{Octokit.GraphQL.Model.UpdateParameters,`0})">
            <summary>
            Only allow users with bypass permission to update matching refs.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RuleParametersInput">
            <summary>
            Specifies the parameters for a `RepositoryRule` object. Only one of the fields should be specified.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RuleParametersInput.Update">
            <summary>
            Parameters used for the `update` rule type
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RuleParametersInput.RequiredDeployments">
            <summary>
            Parameters used for the `required_deployments` rule type
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RuleParametersInput.PullRequest">
            <summary>
            Parameters used for the `pull_request` rule type
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RuleParametersInput.RequiredStatusChecks">
            <summary>
            Parameters used for the `required_status_checks` rule type
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RuleParametersInput.CommitMessagePattern">
            <summary>
            Parameters used for the `commit_message_pattern` rule type
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RuleParametersInput.CommitAuthorEmailPattern">
            <summary>
            Parameters used for the `commit_author_email_pattern` rule type
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RuleParametersInput.CommitterEmailPattern">
            <summary>
            Parameters used for the `committer_email_pattern` rule type
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RuleParametersInput.BranchNamePattern">
            <summary>
            Parameters used for the `branch_name_pattern` rule type
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.RuleParametersInput.TagNamePattern">
            <summary>
            Parameters used for the `tag_name_pattern` rule type
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.RuleSource">
            <summary>
            Types which can have `RepositoryRule` objects.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.RuleSource.Selector`1.Organization(System.Func{Octokit.GraphQL.Model.Organization,`0})">
            <summary>
            An account on GitHub, with one or more owners, that has repositories, members and teams.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.RuleSource.Selector`1.Repository(System.Func{Octokit.GraphQL.Model.Repository,`0})">
            <summary>
            A repository contains the content for a project.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SamlDigestAlgorithm">
            <summary>
            The possible digest algorithms used to sign SAML requests for an identity provider.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SamlDigestAlgorithm.Sha1">
            <summary>
            SHA1
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SamlDigestAlgorithm.Sha256">
            <summary>
            SHA256
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SamlDigestAlgorithm.Sha384">
            <summary>
            SHA384
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SamlDigestAlgorithm.Sha512">
            <summary>
            SHA512
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SamlSignatureAlgorithm">
            <summary>
            The possible signature algorithms used to sign SAML requests for a Identity Provider.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SamlSignatureAlgorithm.RsaSha1">
            <summary>
            RSA-SHA1
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SamlSignatureAlgorithm.RsaSha256">
            <summary>
            RSA-SHA256
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SamlSignatureAlgorithm.RsaSha384">
            <summary>
            RSA-SHA384
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SamlSignatureAlgorithm.RsaSha512">
            <summary>
            RSA-SHA512
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SavedReply">
            <summary>
            A Saved Reply is text a user can use to reply quickly.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SavedReply.Body">
            <summary>
            The body of the saved reply.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SavedReply.BodyHTML">
            <summary>
            The saved reply body rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SavedReply.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SavedReply.Title">
            <summary>
            The title of the saved reply.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SavedReply.User">
            <summary>
            The user that saved this reply.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SavedReplyConnection">
            <summary>
            The connection type for SavedReply.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SavedReplyConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SavedReplyConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SavedReplyConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SavedReplyConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SavedReplyEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SavedReplyEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SavedReplyEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SavedReplyOrder">
            <summary>
            Ordering options for saved reply connections.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SavedReplyOrder.Field">
            <summary>
            The field to order saved replies by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SavedReplyOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SavedReplyOrderField">
            <summary>
            Properties by which saved reply connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SavedReplyOrderField.UpdatedAt">
            <summary>
            Order saved reply by when they were updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SearchResultItem">
            <summary>
            The results of a search.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.SearchResultItem.Selector`1.App(System.Func{Octokit.GraphQL.Model.App,`0})">
            <summary>
            A GitHub App.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.SearchResultItem.Selector`1.Discussion(System.Func{Octokit.GraphQL.Model.Discussion,`0})">
            <summary>
            A discussion in a repository.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.SearchResultItem.Selector`1.Issue(System.Func{Octokit.GraphQL.Model.Issue,`0})">
            <summary>
            An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.SearchResultItem.Selector`1.MarketplaceListing(System.Func{Octokit.GraphQL.Model.MarketplaceListing,`0})">
            <summary>
            A listing in the GitHub integration marketplace.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.SearchResultItem.Selector`1.Organization(System.Func{Octokit.GraphQL.Model.Organization,`0})">
            <summary>
            An account on GitHub, with one or more owners, that has repositories, members and teams.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.SearchResultItem.Selector`1.PullRequest(System.Func{Octokit.GraphQL.Model.PullRequest,`0})">
            <summary>
            A repository pull request.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.SearchResultItem.Selector`1.Repository(System.Func{Octokit.GraphQL.Model.Repository,`0})">
            <summary>
            A repository contains the content for a project.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.SearchResultItem.Selector`1.User(System.Func{Octokit.GraphQL.Model.User,`0})">
            <summary>
            A user is an individual's account on GitHub that owns repositories and can make new content.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SearchResultItemConnection">
            <summary>
            A list of results that matched against a search query. Regardless of the number of matches, a maximum of 1,000 results will be available across all types, potentially split across many pages.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SearchResultItemConnection.CodeCount">
            <summary>
            The total number of pieces of code that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SearchResultItemConnection.DiscussionCount">
            <summary>
            The total number of discussions that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SearchResultItemConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SearchResultItemConnection.IssueCount">
            <summary>
            The total number of issues that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SearchResultItemConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SearchResultItemConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SearchResultItemConnection.RepositoryCount">
            <summary>
            The total number of repositories that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SearchResultItemConnection.UserCount">
            <summary>
            The total number of users that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SearchResultItemConnection.WikiCount">
            <summary>
            The total number of wiki pages that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SearchResultItemEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SearchResultItemEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SearchResultItemEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SearchResultItemEdge.TextMatches">
            <summary>
            Text matches on the result found.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SearchType">
            <summary>
            Represents the individual results of a search.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SearchType.Issue">
            <summary>
            Returns results matching issues in repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SearchType.Repository">
            <summary>
            Returns results matching repositories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SearchType.User">
            <summary>
            Returns results matching users and organizations on GitHub.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SearchType.Discussion">
            <summary>
            Returns matching discussions in repositories.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SecurityAdvisory">
            <summary>
            A GitHub Security Advisory
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisory.Classification">
            <summary>
            The classification of the advisory
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisory.Cvss">
            <summary>
            The CVSS associated with this advisory
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.SecurityAdvisory.Cwes(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            CWEs associated with this Advisory
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisory.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisory.Description">
            <summary>
            This is a long plaintext description of the advisory
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisory.GhsaId">
            <summary>
            The GitHub Security Advisory ID
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisory.Identifiers">
            <summary>
            A list of identifiers for this advisory
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisory.NotificationsPermalink">
            <summary>
            The permalink for the advisory's dependabot alerts page
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisory.Origin">
            <summary>
            The organization that originated the advisory
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisory.Permalink">
            <summary>
            The permalink for the advisory
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisory.PublishedAt">
            <summary>
            When the advisory was published
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisory.References">
            <summary>
            A list of references for this advisory
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisory.Severity">
            <summary>
            The severity of the advisory
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisory.Summary">
            <summary>
            A short plaintext summary of the advisory
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisory.UpdatedAt">
            <summary>
            When the advisory was last updated
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.SecurityAdvisory.Vulnerabilities(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.SecurityAdvisoryClassification}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SecurityAdvisoryEcosystem}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SecurityVulnerabilityOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.SecurityAdvisorySeverity}}})">
            <summary>
            Vulnerabilities associated with this Advisory
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="classifications">A list of advisory classifications to filter vulnerabilities by.</param>
            <param name="ecosystem">An ecosystem to filter vulnerabilities by.</param>
            <param name="orderBy">Ordering options for the returned topics.</param>
            <param name="package">A package name to filter vulnerabilities by.</param>
            <param name="severities">A list of severities to filter vulnerabilities by.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisory.WithdrawnAt">
            <summary>
            When the advisory was withdrawn, if it has been withdrawn
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SecurityAdvisoryClassification">
            <summary>
            Classification of the advisory.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SecurityAdvisoryClassification.General">
            <summary>
            Classification of general advisories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SecurityAdvisoryClassification.Malware">
            <summary>
            Classification of malware advisories.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SecurityAdvisoryConnection">
            <summary>
            The connection type for SecurityAdvisory.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisoryConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisoryConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisoryConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisoryConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SecurityAdvisoryEcosystem">
            <summary>
            The possible ecosystems of a security vulnerability's package.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SecurityAdvisoryEcosystem.Composer">
            <summary>
            PHP packages hosted at packagist.org
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SecurityAdvisoryEcosystem.Erlang">
            <summary>
            Erlang/Elixir packages hosted at hex.pm
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SecurityAdvisoryEcosystem.Actions">
            <summary>
            GitHub Actions
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SecurityAdvisoryEcosystem.Go">
            <summary>
            Go modules
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SecurityAdvisoryEcosystem.Maven">
            <summary>
            Java artifacts hosted at the Maven central repository
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SecurityAdvisoryEcosystem.Npm">
            <summary>
            JavaScript packages hosted at npmjs.com
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SecurityAdvisoryEcosystem.Nuget">
            <summary>
            .NET packages hosted at the NuGet Gallery
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SecurityAdvisoryEcosystem.Pip">
            <summary>
            Python packages hosted at PyPI.org
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SecurityAdvisoryEcosystem.Pub">
            <summary>
            Dart packages hosted at pub.dev
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SecurityAdvisoryEcosystem.Rubygems">
            <summary>
            Ruby gems hosted at RubyGems.org
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SecurityAdvisoryEcosystem.Rust">
            <summary>
            Rust crates
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SecurityAdvisoryEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisoryEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisoryEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SecurityAdvisoryIdentifier">
            <summary>
            A GitHub Security Advisory Identifier
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisoryIdentifier.Type">
            <summary>
            The identifier type, e.g. GHSA, CVE
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisoryIdentifier.Value">
            <summary>
            The identifier
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SecurityAdvisoryIdentifierFilter">
            <summary>
            An advisory identifier to filter results on.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisoryIdentifierFilter.Type">
            <summary>
            The identifier type.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisoryIdentifierFilter.Value">
            <summary>
            The identifier string. Supports exact or partial matching.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SecurityAdvisoryIdentifierType">
            <summary>
            Identifier formats available for advisories.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SecurityAdvisoryIdentifierType.Cve">
            <summary>
            Common Vulnerabilities and Exposures Identifier.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SecurityAdvisoryIdentifierType.Ghsa">
            <summary>
            GitHub Security Advisory ID.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SecurityAdvisoryOrder">
            <summary>
            Ordering options for security advisory connections
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisoryOrder.Field">
            <summary>
            The field to order security advisories by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisoryOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SecurityAdvisoryOrderField">
            <summary>
            Properties by which security advisory connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SecurityAdvisoryOrderField.PublishedAt">
            <summary>
            Order advisories by publication time
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SecurityAdvisoryOrderField.UpdatedAt">
            <summary>
            Order advisories by update time
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SecurityAdvisoryPackage">
            <summary>
            An individual package
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisoryPackage.Ecosystem">
            <summary>
            The ecosystem the package belongs to, e.g. RUBYGEMS, NPM
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisoryPackage.Name">
            <summary>
            The package name
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SecurityAdvisoryPackageVersion">
            <summary>
            An individual package version
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisoryPackageVersion.Identifier">
            <summary>
            The package name or version
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SecurityAdvisoryReference">
            <summary>
            A GitHub Security Advisory Reference
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityAdvisoryReference.Url">
            <summary>
            A publicly accessible reference
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SecurityAdvisorySeverity">
            <summary>
            Severity of the vulnerability.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SecurityAdvisorySeverity.Low">
            <summary>
            Low.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SecurityAdvisorySeverity.Moderate">
            <summary>
            Moderate.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SecurityAdvisorySeverity.High">
            <summary>
            High.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SecurityAdvisorySeverity.Critical">
            <summary>
            Critical.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SecurityVulnerability">
            <summary>
            An individual vulnerability within an Advisory
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityVulnerability.Advisory">
            <summary>
            The Advisory associated with this Vulnerability
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityVulnerability.FirstPatchedVersion">
            <summary>
            The first version containing a fix for the vulnerability
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityVulnerability.Package">
            <summary>
            A description of the vulnerable package
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityVulnerability.Severity">
            <summary>
            The severity of the vulnerability within this package
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityVulnerability.UpdatedAt">
            <summary>
            When the vulnerability was last updated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityVulnerability.VulnerableVersionRange">
            <summary>
            A string that describes the vulnerable package versions.
            This string follows a basic syntax with a few forms.
            + `= 0.2.0` denotes a single vulnerable version.
            + `&lt;= 1.0.8` denotes a version range up to and including the specified version
            + `&lt; 0.1.11` denotes a version range up to, but excluding, the specified version
            + `&gt;= 4.3.0, &lt; 4.3.5` denotes a version range with a known minimum and maximum version.
            + `&gt;= 0.0.1` denotes a version range with a known minimum, but no known maximum
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SecurityVulnerabilityConnection">
            <summary>
            The connection type for SecurityVulnerability.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityVulnerabilityConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityVulnerabilityConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityVulnerabilityConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityVulnerabilityConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SecurityVulnerabilityEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityVulnerabilityEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityVulnerabilityEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SecurityVulnerabilityOrder">
            <summary>
            Ordering options for security vulnerability connections
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityVulnerabilityOrder.Field">
            <summary>
            The field to order security vulnerabilities by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SecurityVulnerabilityOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SecurityVulnerabilityOrderField">
            <summary>
            Properties by which security vulnerability connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SecurityVulnerabilityOrderField.UpdatedAt">
            <summary>
            Order vulnerability by update time
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SetEnterpriseIdentityProviderInput">
            <summary>
            Autogenerated input type of SetEnterpriseIdentityProvider
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetEnterpriseIdentityProviderInput.EnterpriseId">
            <summary>
            The ID of the enterprise on which to set an identity provider.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetEnterpriseIdentityProviderInput.SsoUrl">
            <summary>
            The URL endpoint for the identity provider's SAML SSO.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetEnterpriseIdentityProviderInput.Issuer">
            <summary>
            The Issuer Entity ID for the SAML identity provider
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetEnterpriseIdentityProviderInput.IdpCertificate">
            <summary>
            The x509 certificate used by the identity provider to sign assertions and responses.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetEnterpriseIdentityProviderInput.SignatureMethod">
            <summary>
            The signature algorithm used to sign SAML requests for the identity provider.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetEnterpriseIdentityProviderInput.DigestMethod">
            <summary>
            The digest algorithm used to sign SAML requests for the identity provider.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetEnterpriseIdentityProviderInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SetEnterpriseIdentityProviderPayload">
            <summary>
            Autogenerated return type of SetEnterpriseIdentityProvider
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetEnterpriseIdentityProviderPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetEnterpriseIdentityProviderPayload.IdentityProvider">
            <summary>
            The identity provider for the enterprise.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SetOrganizationInteractionLimitInput">
            <summary>
            Autogenerated input type of SetOrganizationInteractionLimit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetOrganizationInteractionLimitInput.OrganizationId">
            <summary>
            The ID of the organization to set a limit for.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetOrganizationInteractionLimitInput.Limit">
            <summary>
            The limit to set.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetOrganizationInteractionLimitInput.Expiry">
            <summary>
            When this limit should expire.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetOrganizationInteractionLimitInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SetOrganizationInteractionLimitPayload">
            <summary>
            Autogenerated return type of SetOrganizationInteractionLimit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetOrganizationInteractionLimitPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetOrganizationInteractionLimitPayload.Organization">
            <summary>
            The organization that the interaction limit was set for.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SetRepositoryInteractionLimitInput">
            <summary>
            Autogenerated input type of SetRepositoryInteractionLimit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetRepositoryInteractionLimitInput.RepositoryId">
            <summary>
            The ID of the repository to set a limit for.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetRepositoryInteractionLimitInput.Limit">
            <summary>
            The limit to set.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetRepositoryInteractionLimitInput.Expiry">
            <summary>
            When this limit should expire.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetRepositoryInteractionLimitInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SetRepositoryInteractionLimitPayload">
            <summary>
            Autogenerated return type of SetRepositoryInteractionLimit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetRepositoryInteractionLimitPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetRepositoryInteractionLimitPayload.Repository">
            <summary>
            The repository that the interaction limit was set for.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SetUserInteractionLimitInput">
            <summary>
            Autogenerated input type of SetUserInteractionLimit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetUserInteractionLimitInput.UserId">
            <summary>
            The ID of the user to set a limit for.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetUserInteractionLimitInput.Limit">
            <summary>
            The limit to set.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetUserInteractionLimitInput.Expiry">
            <summary>
            When this limit should expire.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetUserInteractionLimitInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SetUserInteractionLimitPayload">
            <summary>
            Autogenerated return type of SetUserInteractionLimit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetUserInteractionLimitPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SetUserInteractionLimitPayload.User">
            <summary>
            The user that the interaction limit was set for.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SmimeSignature">
            <summary>
            Represents an S/MIME signature on a Commit or Tag.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SmimeSignature.Email">
            <summary>
            Email used to sign this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SmimeSignature.IsValid">
            <summary>
            True if the signature is valid and verified by GitHub.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SmimeSignature.Payload">
            <summary>
            Payload for GPG signing object. Raw ODB object without the signature header.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SmimeSignature.Signature">
            <summary>
            ASCII-armored signature header from object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SmimeSignature.Signer">
            <summary>
            GitHub user corresponding to the email signing this commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SmimeSignature.State">
            <summary>
            The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SmimeSignature.WasSignedByGitHub">
            <summary>
            True if the signature was made with GitHub's signing key.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SocialAccount">
            <summary>
            Social media profile associated with a user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SocialAccount.DisplayName">
            <summary>
            Name of the social media account as it appears on the profile.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SocialAccount.Provider">
            <summary>
            Software or company that hosts the social media account.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SocialAccount.Url">
            <summary>
            URL of the social media account.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SocialAccountConnection">
            <summary>
            The connection type for SocialAccount.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SocialAccountConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SocialAccountConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SocialAccountConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SocialAccountConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SocialAccountEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SocialAccountEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SocialAccountEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SocialAccountProvider">
            <summary>
            Software or company that hosts social media accounts.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SocialAccountProvider.Generic">
            <summary>
            Catch-all for social media providers that do not yet have specific handling.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SocialAccountProvider.Facebook">
            <summary>
            Social media and networking website.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SocialAccountProvider.Hometown">
            <summary>
            Fork of Mastodon with a greater focus on local posting.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SocialAccountProvider.Instagram">
            <summary>
            Social media website with a focus on photo and video sharing.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SocialAccountProvider.Linkedin">
            <summary>
            Professional networking website.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SocialAccountProvider.Mastodon">
            <summary>
            Open-source federated microblogging service.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SocialAccountProvider.Reddit">
            <summary>
            Social news aggregation and discussion website.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SocialAccountProvider.Twitch">
            <summary>
            Live-streaming service.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SocialAccountProvider.Twitter">
            <summary>
            Microblogging website.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SocialAccountProvider.Youtube">
            <summary>
            Online video platform.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Sponsor">
            <summary>
            Entities that can sponsor others via GitHub Sponsors
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Sponsor.Selector`1.Organization(System.Func{Octokit.GraphQL.Model.Organization,`0})">
            <summary>
            An account on GitHub, with one or more owners, that has repositories, members and teams.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Sponsor.Selector`1.User(System.Func{Octokit.GraphQL.Model.User,`0})">
            <summary>
            A user is an individual's account on GitHub that owns repositories and can make new content.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ISponsorable">
            <summary>
            Entities that can sponsor or be sponsored through GitHub Sponsors.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ISponsorable.EstimatedNextSponsorsPayoutInCents">
            <summary>
            The estimated next GitHub Sponsors payout for this user/organization in cents (USD).
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ISponsorable.HasSponsorsListing">
            <summary>
            True if this user/organization has a GitHub Sponsors listing.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ISponsorable.IsSponsoredBy(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Whether the given account is sponsoring this user/organization.
            </summary>
            <param name="accountLogin">The target account's login.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.ISponsorable.IsSponsoringViewer">
            <summary>
            True if the viewer is sponsored by this user/organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ISponsorable.MonthlyEstimatedSponsorsIncomeInCents">
            <summary>
            The estimated monthly GitHub Sponsors income for this user/organization in cents (USD).
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ISponsorable.Sponsoring(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorOrder}})">
            <summary>
            List of users and organizations this entity is sponsoring.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for the users and organizations returned from the connection.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.ISponsorable.Sponsors(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.ID}})">
            <summary>
            List of sponsors for this user or organization.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for sponsors returned from the connection.</param>
            <param name="tierId">If given, will filter for sponsors at the given tier. Will only return sponsors whose tier the viewer is permitted to see.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.ISponsorable.SponsorsActivities(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.SponsorsActivityAction}}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorsActivityOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorsActivityPeriod}},System.Nullable{Octokit.GraphQL.Core.Arg{System.DateTimeOffset}},System.Nullable{Octokit.GraphQL.Core.Arg{System.DateTimeOffset}})">
            <summary>
            Events involving this sponsorable, such as new sponsorships.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="actions">Filter activities to only the specified actions.</param>
            <param name="includeAsSponsor">Whether to include those events where this sponsorable acted as the sponsor. Defaults to only including events where this sponsorable was the recipient of a sponsorship.</param>
            <param name="orderBy">Ordering options for activity returned from the connection.</param>
            <param name="period">Filter activities returned to only those that occurred in the most recent specified time period. Set to ALL to avoid filtering by when the activity occurred. Will be ignored if `since` or `until` is given.</param>
            <param name="since">Filter activities to those that occurred on or after this time.</param>
            <param name="until">Filter activities to those that occurred before this time.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.ISponsorable.SponsorsListing">
            <summary>
            The GitHub Sponsors listing for this user or organization.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.ISponsorable.SponsorshipForViewerAsSponsor(System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            The sponsorship from the viewer to this user/organization; that is, the sponsorship where you're the sponsor.
            </summary>
            <param name="activeOnly">Whether to return the sponsorship only if it's still active. Pass false to get the viewer's sponsorship back even if it has been cancelled.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.ISponsorable.SponsorshipForViewerAsSponsorable(System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            The sponsorship from this user/organization to the viewer; that is, the sponsorship you're receiving.
            </summary>
            <param name="activeOnly">Whether to return the sponsorship only if it's still active. Pass false to get the sponsorship back even if it has been cancelled.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.ISponsorable.SponsorshipNewsletters(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorshipNewsletterOrder}})">
            <summary>
            List of sponsorship updates sent from this sponsorable to sponsors.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for sponsorship updates returned from the connection.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.ISponsorable.SponsorshipsAsMaintainer(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorshipOrder}})">
            <summary>
            The sponsorships where this user or organization is the maintainer receiving the funds.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="activeOnly">Whether to include only sponsorships that are active right now, versus all sponsorships this maintainer has ever received.</param>
            <param name="includePrivate">Whether or not to include private sponsorships in the result set</param>
            <param name="orderBy">Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.ISponsorable.SponsorshipsAsSponsor(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorshipOrder}})">
            <summary>
            The sponsorships where this user or organization is the funder.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="activeOnly">Whether to include only sponsorships that are active right now, versus all sponsorships this sponsor has ever made.</param>
            <param name="maintainerLogins">Filter sponsorships returned to those for the specified maintainers. That is, the recipient of the sponsorship is a user or organization with one of the given logins.</param>
            <param name="orderBy">Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.ISponsorable.TotalSponsorshipAmountAsSponsorInCents(System.Nullable{Octokit.GraphQL.Core.Arg{System.DateTimeOffset}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{System.DateTimeOffset}})">
            <summary>
            The amount in United States cents (e.g., 500 = $5.00 USD) that this entity has spent on GitHub to fund sponsorships. Only returns a value when viewed by the user themselves or by a user who can manage sponsorships for the requested organization.
            </summary>
            <param name="since">Filter payments to those that occurred on or after this time.</param>
            <param name="sponsorableLogins">Filter payments to those made to the users or organizations with the specified usernames.</param>
            <param name="until">Filter payments to those that occurred before this time.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.ISponsorable.ViewerCanSponsor">
            <summary>
            Whether or not the viewer is able to sponsor this user/organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ISponsorable.ViewerIsSponsoring">
            <summary>
            True if the viewer is sponsoring this user/organization.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorableItem">
            <summary>
            Entities that can be sponsored via GitHub Sponsors
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.SponsorableItem.Selector`1.Organization(System.Func{Octokit.GraphQL.Model.Organization,`0})">
            <summary>
            An account on GitHub, with one or more owners, that has repositories, members and teams.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.SponsorableItem.Selector`1.User(System.Func{Octokit.GraphQL.Model.User,`0})">
            <summary>
            A user is an individual's account on GitHub that owns repositories and can make new content.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorableItemConnection">
            <summary>
            The connection type for SponsorableItem.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorableItemConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorableItemConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorableItemConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorableItemConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorableItemEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorableItemEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorableItemEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorableOrder">
            <summary>
            Ordering options for connections to get sponsorable entities for GitHub Sponsors.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorableOrder.Field">
            <summary>
            The field to order sponsorable entities by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorableOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorableOrderField">
            <summary>
            Properties by which sponsorable connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorableOrderField.Login">
            <summary>
            Order sponsorable entities by login (username).
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorConnection">
            <summary>
            The connection type for Sponsor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorEdge">
            <summary>
            Represents a user or organization who is sponsoring someone in GitHub Sponsors.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorOrder">
            <summary>
            Ordering options for connections to get sponsor entities for GitHub Sponsors.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorOrder.Field">
            <summary>
            The field to order sponsor entities by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorOrderField">
            <summary>
            Properties by which sponsor connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorOrderField.Login">
            <summary>
            Order sponsorable entities by login (username).
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorOrderField.Relevance">
            <summary>
            Order sponsors by their relevance to the viewer.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorsActivity">
            <summary>
            An event related to sponsorship activity.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsActivity.Action">
            <summary>
            What action this activity indicates took place.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsActivity.PreviousSponsorsTier">
            <summary>
            The tier that the sponsorship used to use, for tier change events.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsActivity.Sponsor">
            <summary>
            The user or organization who triggered this activity and was/is sponsoring the sponsorable.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsActivity.Sponsorable">
            <summary>
            The user or organization that is being sponsored, the maintainer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsActivity.SponsorsTier">
            <summary>
            The associated sponsorship tier.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsActivity.Timestamp">
            <summary>
            The timestamp of this event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsActivity.ViaBulkSponsorship">
            <summary>
            Was this sponsorship made alongside other sponsorships at the same time from the same sponsor?
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorsActivityAction">
            <summary>
            The possible actions that GitHub Sponsors activities can represent.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsActivityAction.NewSponsorship">
            <summary>
            The activity was starting a sponsorship.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsActivityAction.CancelledSponsorship">
            <summary>
            The activity was cancelling a sponsorship.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsActivityAction.TierChange">
            <summary>
            The activity was changing the sponsorship tier, either directly by the sponsor or by a scheduled/pending change.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsActivityAction.Refund">
            <summary>
            The activity was funds being refunded to the sponsor or GitHub.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsActivityAction.PendingChange">
            <summary>
            The activity was scheduling a downgrade or cancellation.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsActivityAction.SponsorMatchDisabled">
            <summary>
            The activity was disabling matching for a previously matched sponsorship.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorsActivityConnection">
            <summary>
            The connection type for SponsorsActivity.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsActivityConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsActivityConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsActivityConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsActivityConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorsActivityEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsActivityEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsActivityEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorsActivityOrder">
            <summary>
            Ordering options for GitHub Sponsors activity connections.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsActivityOrder.Field">
            <summary>
            The field to order activity by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsActivityOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorsActivityOrderField">
            <summary>
            Properties by which GitHub Sponsors activity connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsActivityOrderField.Timestamp">
            <summary>
            Order activities by when they happened.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorsActivityPeriod">
            <summary>
            The possible time periods for which Sponsors activities can be requested.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsActivityPeriod.Day">
            <summary>
            The previous calendar day.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsActivityPeriod.Week">
            <summary>
            The previous seven days.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsActivityPeriod.Month">
            <summary>
            The previous thirty days.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsActivityPeriod.All">
            <summary>
            Don't restrict the activity to any date range, include all activity.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode">
            <summary>
            Represents countries or regions for billing and residence for a GitHub Sponsors profile.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Af">
            <summary>
            Afghanistan
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ax">
            <summary>
            Åland
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Al">
            <summary>
            Albania
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Dz">
            <summary>
            Algeria
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.As">
            <summary>
            American Samoa
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ad">
            <summary>
            Andorra
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ao">
            <summary>
            Angola
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ai">
            <summary>
            Anguilla
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Aq">
            <summary>
            Antarctica
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ag">
            <summary>
            Antigua and Barbuda
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ar">
            <summary>
            Argentina
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Am">
            <summary>
            Armenia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Aw">
            <summary>
            Aruba
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Au">
            <summary>
            Australia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.At">
            <summary>
            Austria
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Az">
            <summary>
            Azerbaijan
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Bs">
            <summary>
            Bahamas
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Bh">
            <summary>
            Bahrain
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Bd">
            <summary>
            Bangladesh
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Bb">
            <summary>
            Barbados
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.By">
            <summary>
            Belarus
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Be">
            <summary>
            Belgium
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Bz">
            <summary>
            Belize
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Bj">
            <summary>
            Benin
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Bm">
            <summary>
            Bermuda
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Bt">
            <summary>
            Bhutan
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Bo">
            <summary>
            Bolivia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Bq">
            <summary>
            Bonaire, Sint Eustatius and Saba
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ba">
            <summary>
            Bosnia and Herzegovina
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Bw">
            <summary>
            Botswana
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Bv">
            <summary>
            Bouvet Island
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Br">
            <summary>
            Brazil
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Io">
            <summary>
            British Indian Ocean Territory
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Bn">
            <summary>
            Brunei Darussalam
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Bg">
            <summary>
            Bulgaria
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Bf">
            <summary>
            Burkina Faso
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Bi">
            <summary>
            Burundi
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Kh">
            <summary>
            Cambodia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Cm">
            <summary>
            Cameroon
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ca">
            <summary>
            Canada
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Cv">
            <summary>
            Cape Verde
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ky">
            <summary>
            Cayman Islands
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Cf">
            <summary>
            Central African Republic
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Td">
            <summary>
            Chad
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Cl">
            <summary>
            Chile
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Cn">
            <summary>
            China
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Cx">
            <summary>
            Christmas Island
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Cc">
            <summary>
            Cocos (Keeling) Islands
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Co">
            <summary>
            Colombia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Km">
            <summary>
            Comoros
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Cg">
            <summary>
            Congo (Brazzaville)
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Cd">
            <summary>
            Congo (Kinshasa)
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ck">
            <summary>
            Cook Islands
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Cr">
            <summary>
            Costa Rica
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ci">
            <summary>
            Côte d'Ivoire
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Hr">
            <summary>
            Croatia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Cw">
            <summary>
            Curaçao
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Cy">
            <summary>
            Cyprus
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Cz">
            <summary>
            Czech Republic
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Dk">
            <summary>
            Denmark
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Dj">
            <summary>
            Djibouti
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Dm">
            <summary>
            Dominica
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Do">
            <summary>
            Dominican Republic
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ec">
            <summary>
            Ecuador
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Eg">
            <summary>
            Egypt
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Sv">
            <summary>
            El Salvador
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Gq">
            <summary>
            Equatorial Guinea
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Er">
            <summary>
            Eritrea
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ee">
            <summary>
            Estonia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Et">
            <summary>
            Ethiopia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Fk">
            <summary>
            Falkland Islands
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Fo">
            <summary>
            Faroe Islands
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Fj">
            <summary>
            Fiji
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Fi">
            <summary>
            Finland
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Fr">
            <summary>
            France
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Gf">
            <summary>
            French Guiana
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Pf">
            <summary>
            French Polynesia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Tf">
            <summary>
            French Southern Lands
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ga">
            <summary>
            Gabon
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Gm">
            <summary>
            Gambia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ge">
            <summary>
            Georgia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.De">
            <summary>
            Germany
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Gh">
            <summary>
            Ghana
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Gi">
            <summary>
            Gibraltar
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Gr">
            <summary>
            Greece
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Gl">
            <summary>
            Greenland
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Gd">
            <summary>
            Grenada
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Gp">
            <summary>
            Guadeloupe
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Gu">
            <summary>
            Guam
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Gt">
            <summary>
            Guatemala
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Gg">
            <summary>
            Guernsey
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Gn">
            <summary>
            Guinea
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Gw">
            <summary>
            Guinea-Bissau
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Gy">
            <summary>
            Guyana
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ht">
            <summary>
            Haiti
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Hm">
            <summary>
            Heard and McDonald Islands
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Hn">
            <summary>
            Honduras
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Hk">
            <summary>
            Hong Kong
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Hu">
            <summary>
            Hungary
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Is">
            <summary>
            Iceland
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.In">
            <summary>
            India
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Id">
            <summary>
            Indonesia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ir">
            <summary>
            Iran
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Iq">
            <summary>
            Iraq
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ie">
            <summary>
            Ireland
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Im">
            <summary>
            Isle of Man
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Il">
            <summary>
            Israel
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.It">
            <summary>
            Italy
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Jm">
            <summary>
            Jamaica
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Jp">
            <summary>
            Japan
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Je">
            <summary>
            Jersey
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Jo">
            <summary>
            Jordan
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Kz">
            <summary>
            Kazakhstan
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ke">
            <summary>
            Kenya
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ki">
            <summary>
            Kiribati
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Kr">
            <summary>
            Korea, South
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Kw">
            <summary>
            Kuwait
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Kg">
            <summary>
            Kyrgyzstan
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.La">
            <summary>
            Laos
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Lv">
            <summary>
            Latvia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Lb">
            <summary>
            Lebanon
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ls">
            <summary>
            Lesotho
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Lr">
            <summary>
            Liberia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ly">
            <summary>
            Libya
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Li">
            <summary>
            Liechtenstein
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Lt">
            <summary>
            Lithuania
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Lu">
            <summary>
            Luxembourg
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Mo">
            <summary>
            Macau
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Mk">
            <summary>
            Macedonia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Mg">
            <summary>
            Madagascar
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Mw">
            <summary>
            Malawi
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.My">
            <summary>
            Malaysia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Mv">
            <summary>
            Maldives
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ml">
            <summary>
            Mali
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Mt">
            <summary>
            Malta
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Mh">
            <summary>
            Marshall Islands
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Mq">
            <summary>
            Martinique
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Mr">
            <summary>
            Mauritania
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Mu">
            <summary>
            Mauritius
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Yt">
            <summary>
            Mayotte
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Mx">
            <summary>
            Mexico
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Fm">
            <summary>
            Micronesia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Md">
            <summary>
            Moldova
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Mc">
            <summary>
            Monaco
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Mn">
            <summary>
            Mongolia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Me">
            <summary>
            Montenegro
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ms">
            <summary>
            Montserrat
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ma">
            <summary>
            Morocco
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Mz">
            <summary>
            Mozambique
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Mm">
            <summary>
            Myanmar
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Na">
            <summary>
            Namibia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Nr">
            <summary>
            Nauru
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Np">
            <summary>
            Nepal
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Nl">
            <summary>
            Netherlands
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Nc">
            <summary>
            New Caledonia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Nz">
            <summary>
            New Zealand
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ni">
            <summary>
            Nicaragua
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ne">
            <summary>
            Niger
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ng">
            <summary>
            Nigeria
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Nu">
            <summary>
            Niue
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Nf">
            <summary>
            Norfolk Island
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Mp">
            <summary>
            Northern Mariana Islands
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.No">
            <summary>
            Norway
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Om">
            <summary>
            Oman
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Pk">
            <summary>
            Pakistan
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Pw">
            <summary>
            Palau
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ps">
            <summary>
            Palestine
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Pa">
            <summary>
            Panama
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Pg">
            <summary>
            Papua New Guinea
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Py">
            <summary>
            Paraguay
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Pe">
            <summary>
            Peru
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ph">
            <summary>
            Philippines
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Pn">
            <summary>
            Pitcairn
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Pl">
            <summary>
            Poland
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Pt">
            <summary>
            Portugal
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Pr">
            <summary>
            Puerto Rico
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Qa">
            <summary>
            Qatar
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Re">
            <summary>
            Reunion
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ro">
            <summary>
            Romania
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ru">
            <summary>
            Russian Federation
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Rw">
            <summary>
            Rwanda
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Bl">
            <summary>
            Saint Barthélemy
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Sh">
            <summary>
            Saint Helena
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Kn">
            <summary>
            Saint Kitts and Nevis
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Lc">
            <summary>
            Saint Lucia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Mf">
            <summary>
            Saint Martin (French part)
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Pm">
            <summary>
            Saint Pierre and Miquelon
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Vc">
            <summary>
            Saint Vincent and the Grenadines
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ws">
            <summary>
            Samoa
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Sm">
            <summary>
            San Marino
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.St">
            <summary>
            Sao Tome and Principe
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Sa">
            <summary>
            Saudi Arabia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Sn">
            <summary>
            Senegal
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Rs">
            <summary>
            Serbia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Sc">
            <summary>
            Seychelles
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Sl">
            <summary>
            Sierra Leone
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Sg">
            <summary>
            Singapore
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Sx">
            <summary>
            Sint Maarten (Dutch part)
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Sk">
            <summary>
            Slovakia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Si">
            <summary>
            Slovenia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Sb">
            <summary>
            Solomon Islands
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.So">
            <summary>
            Somalia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Za">
            <summary>
            South Africa
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Gs">
            <summary>
            South Georgia and South Sandwich Islands
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ss">
            <summary>
            South Sudan
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Es">
            <summary>
            Spain
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Lk">
            <summary>
            Sri Lanka
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Sd">
            <summary>
            Sudan
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Sr">
            <summary>
            Suriname
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Sj">
            <summary>
            Svalbard and Jan Mayen Islands
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Sz">
            <summary>
            Swaziland
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Se">
            <summary>
            Sweden
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ch">
            <summary>
            Switzerland
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Tw">
            <summary>
            Taiwan
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Tj">
            <summary>
            Tajikistan
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Tz">
            <summary>
            Tanzania
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Th">
            <summary>
            Thailand
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Tl">
            <summary>
            Timor-Leste
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Tg">
            <summary>
            Togo
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Tk">
            <summary>
            Tokelau
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.To">
            <summary>
            Tonga
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Tt">
            <summary>
            Trinidad and Tobago
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Tn">
            <summary>
            Tunisia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Tr">
            <summary>
            Turkey
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Tm">
            <summary>
            Turkmenistan
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Tc">
            <summary>
            Turks and Caicos Islands
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Tv">
            <summary>
            Tuvalu
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ug">
            <summary>
            Uganda
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ua">
            <summary>
            Ukraine
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ae">
            <summary>
            United Arab Emirates
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Gb">
            <summary>
            United Kingdom
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Um">
            <summary>
            United States Minor Outlying Islands
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Us">
            <summary>
            United States of America
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Uy">
            <summary>
            Uruguay
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Uz">
            <summary>
            Uzbekistan
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Vu">
            <summary>
            Vanuatu
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Va">
            <summary>
            Vatican City
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ve">
            <summary>
            Venezuela
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Vn">
            <summary>
            Vietnam
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Vg">
            <summary>
            Virgin Islands, British
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Vi">
            <summary>
            Virgin Islands, U.S.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Wf">
            <summary>
            Wallis and Futuna Islands
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Eh">
            <summary>
            Western Sahara
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Ye">
            <summary>
            Yemen
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Zm">
            <summary>
            Zambia
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsCountryOrRegionCode.Zw">
            <summary>
            Zimbabwe
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorsGoal">
            <summary>
            A goal associated with a GitHub Sponsors listing, representing a target the sponsored maintainer would like to attain.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsGoal.Description">
            <summary>
            A description of the goal from the maintainer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsGoal.Kind">
            <summary>
            What the objective of this goal is.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsGoal.PercentComplete">
            <summary>
            The percentage representing how complete this goal is, between 0-100.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsGoal.TargetValue">
            <summary>
            What the goal amount is. Represents an amount in USD for monthly sponsorship amount goals. Represents a count of unique sponsors for total sponsors count goals.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsGoal.Title">
            <summary>
            A brief summary of the kind and target value of this goal.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorsGoalKind">
            <summary>
            The different kinds of goals a GitHub Sponsors member can have.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsGoalKind.TotalSponsorsCount">
            <summary>
            The goal is about reaching a certain number of sponsors.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsGoalKind.MonthlySponsorshipAmount">
            <summary>
            The goal is about getting a certain amount in USD from sponsorships each month.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Sponsorship">
            <summary>
            A sponsorship relationship between a sponsor and a maintainer
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Sponsorship.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Sponsorship.IsActive">
            <summary>
            Whether the sponsorship is active. False implies the sponsor is a past sponsor of the maintainer, while true implies they are a current sponsor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Sponsorship.IsOneTimePayment">
            <summary>
            Whether this sponsorship represents a one-time payment versus a recurring sponsorship.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Sponsorship.IsSponsorOptedIntoEmail">
            <summary>
            Whether the sponsor has chosen to receive sponsorship update emails sent from the sponsorable. Only returns a non-null value when the viewer has permission to know this.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Sponsorship.Maintainer">
            <summary>
            The entity that is being sponsored
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Sponsorship.PrivacyLevel">
            <summary>
            The privacy level for this sponsorship.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Sponsorship.Sponsor">
            <summary>
            The user that is sponsoring. Returns null if the sponsorship is private or if sponsor is not a user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Sponsorship.SponsorEntity">
            <summary>
            The user or organization that is sponsoring, if you have permission to view them.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Sponsorship.Sponsorable">
            <summary>
            The entity that is being sponsored
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Sponsorship.Tier">
            <summary>
            The associated sponsorship tier
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Sponsorship.TierSelectedAt">
            <summary>
            Identifies the date and time when the current tier was chosen for this sponsorship.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorshipConnection">
            <summary>
            The connection type for Sponsorship.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipConnection.TotalRecurringMonthlyPriceInCents">
            <summary>
            The total amount in cents of all recurring sponsorships in the connection whose amount you can view. Does not include one-time sponsorships.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipConnection.TotalRecurringMonthlyPriceInDollars">
            <summary>
            The total amount in USD of all recurring sponsorships in the connection whose amount you can view. Does not include one-time sponsorships.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorshipEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorshipNewsletter">
            <summary>
            An update sent to sponsors of a user or organization on GitHub Sponsors.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipNewsletter.Author">
            <summary>
            The author of the newsletter.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipNewsletter.Body">
            <summary>
            The contents of the newsletter, the message the sponsorable wanted to give.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipNewsletter.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipNewsletter.IsPublished">
            <summary>
            Indicates if the newsletter has been made available to sponsors.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipNewsletter.Sponsorable">
            <summary>
            The user or organization this newsletter is from.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipNewsletter.Subject">
            <summary>
            The subject of the newsletter, what it's about.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipNewsletter.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorshipNewsletterConnection">
            <summary>
            The connection type for SponsorshipNewsletter.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipNewsletterConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipNewsletterConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipNewsletterConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipNewsletterConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorshipNewsletterEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipNewsletterEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipNewsletterEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorshipNewsletterOrder">
            <summary>
            Ordering options for sponsorship newsletter connections.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipNewsletterOrder.Field">
            <summary>
            The field to order sponsorship newsletters by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipNewsletterOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorshipNewsletterOrderField">
            <summary>
            Properties by which sponsorship update connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorshipNewsletterOrderField.CreatedAt">
            <summary>
            Order sponsorship newsletters by when they were created.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorshipOrder">
            <summary>
            Ordering options for sponsorship connections.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipOrder.Field">
            <summary>
            The field to order sponsorship by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorshipOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorshipOrderField">
            <summary>
            Properties by which sponsorship connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorshipOrderField.CreatedAt">
            <summary>
            Order sponsorship by creation time.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorshipPrivacy">
            <summary>
            The privacy of a sponsorship
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorshipPrivacy.Public">
            <summary>
            Public
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorshipPrivacy.Private">
            <summary>
            Private
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorsListing">
            <summary>
            A GitHub Sponsors listing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListing.ActiveGoal">
            <summary>
            The current goal the maintainer is trying to reach with GitHub Sponsors, if any.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListing.ActiveStripeConnectAccount">
            <summary>
            The Stripe Connect account currently in use for payouts for this Sponsors listing, if any. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListing.BillingCountryOrRegion">
            <summary>
            The name of the country or region with the maintainer's bank account or fiscal host. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListing.ContactEmailAddress">
            <summary>
            The email address used by GitHub to contact the sponsorable about their GitHub Sponsors profile. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListing.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListing.DashboardResourcePath">
            <summary>
            The HTTP path for the Sponsors dashboard for this Sponsors listing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListing.DashboardUrl">
            <summary>
            The HTTP URL for the Sponsors dashboard for this Sponsors listing.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.SponsorsListing.FeaturedItems(System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.SponsorsListingFeaturedItemFeatureableType}}})">
            <summary>
            The records featured on the GitHub Sponsors profile.
            </summary>
            <param name="featureableTypes">The types of featured items to return.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListing.FiscalHost">
            <summary>
            The fiscal host used for payments, if any. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListing.FullDescription">
            <summary>
            The full description of the listing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListing.FullDescriptionHTML">
            <summary>
            The full description of the listing rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListing.IsPublic">
            <summary>
            Whether this listing is publicly visible.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListing.Name">
            <summary>
            The listing's full name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListing.NextPayoutDate">
            <summary>
            A future date on which this listing is eligible to receive a payout.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListing.ResidenceCountryOrRegion">
            <summary>
            The name of the country or region where the maintainer resides. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListing.ResourcePath">
            <summary>
            The HTTP path for this Sponsors listing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListing.ShortDescription">
            <summary>
            The short description of the listing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListing.Slug">
            <summary>
            The short name of the listing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListing.Sponsorable">
            <summary>
            The entity this listing represents who can be sponsored on GitHub Sponsors.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.SponsorsListing.Tiers(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorsTierOrder}})">
            <summary>
            The tiers for this GitHub Sponsors profile.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="includeUnpublished">Whether to include tiers that aren't published. Only admins of the Sponsors listing can see draft tiers. Only admins of the Sponsors listing and viewers who are currently sponsoring on a retired tier can see those retired tiers. Defaults to including only published tiers, which are visible to anyone who can see the GitHub Sponsors profile.</param>
            <param name="orderBy">Ordering options for Sponsors tiers returned from the connection.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListing.Url">
            <summary>
            The HTTP URL for this Sponsors listing.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorsListingFeatureableItem">
            <summary>
            A record that can be featured on a GitHub Sponsors profile.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.SponsorsListingFeatureableItem.Selector`1.Repository(System.Func{Octokit.GraphQL.Model.Repository,`0})">
            <summary>
            A repository contains the content for a project.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.SponsorsListingFeatureableItem.Selector`1.User(System.Func{Octokit.GraphQL.Model.User,`0})">
            <summary>
            A user is an individual's account on GitHub that owns repositories and can make new content.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorsListingFeaturedItem">
            <summary>
            A record that is promoted on a GitHub Sponsors profile.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListingFeaturedItem.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListingFeaturedItem.Description">
            <summary>
            Will either be a description from the sponsorable maintainer about why they featured this item, or the item's description itself, such as a user's bio from their GitHub profile page.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListingFeaturedItem.Featureable">
            <summary>
            The record that is featured on the GitHub Sponsors profile.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListingFeaturedItem.Position">
            <summary>
            The position of this featured item on the GitHub Sponsors profile with a lower position indicating higher precedence. Starts at 1.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListingFeaturedItem.SponsorsListing">
            <summary>
            The GitHub Sponsors profile that features this record.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsListingFeaturedItem.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorsListingFeaturedItemFeatureableType">
            <summary>
            The different kinds of records that can be featured on a GitHub Sponsors profile page.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsListingFeaturedItemFeatureableType.Repository">
            <summary>
            A repository owned by the user or organization with the GitHub Sponsors profile.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsListingFeaturedItemFeatureableType.User">
            <summary>
            A user who belongs to the organization with the GitHub Sponsors profile.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorsTier">
            <summary>
            A GitHub Sponsors tier associated with a GitHub Sponsors listing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsTier.AdminInfo">
            <summary>
            SponsorsTier information only visible to users that can administer the associated Sponsors listing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsTier.ClosestLesserValueTier">
            <summary>
            Get a different tier for this tier's maintainer that is at the same frequency as this tier but with an equal or lesser cost. Returns the published tier with the monthly price closest to this tier's without going over.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsTier.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsTier.Description">
            <summary>
            The description of the tier.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsTier.DescriptionHTML">
            <summary>
            The tier description rendered to HTML
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsTier.IsCustomAmount">
            <summary>
            Whether this tier was chosen at checkout time by the sponsor rather than defined ahead of time by the maintainer who manages the Sponsors listing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsTier.IsOneTime">
            <summary>
            Whether this tier is only for use with one-time sponsorships.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsTier.MonthlyPriceInCents">
            <summary>
            How much this tier costs per month in cents.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsTier.MonthlyPriceInDollars">
            <summary>
            How much this tier costs per month in USD.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsTier.Name">
            <summary>
            The name of the tier.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsTier.SponsorsListing">
            <summary>
            The sponsors listing that this tier belongs to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsTier.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorsTierAdminInfo">
            <summary>
            SponsorsTier information only visible to users that can administer the associated Sponsors listing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsTierAdminInfo.IsDraft">
            <summary>
            Indicates whether this tier is still a work in progress by the sponsorable and not yet published to the associated GitHub Sponsors profile. Draft tiers cannot be used for new sponsorships and will not be in use on existing sponsorships. Draft tiers cannot be seen by anyone but the admins of the GitHub Sponsors profile.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsTierAdminInfo.IsPublished">
            <summary>
            Indicates whether this tier is published to the associated GitHub Sponsors profile. Published tiers are visible to anyone who can see the GitHub Sponsors profile, and are available for use in sponsorships if the GitHub Sponsors profile is publicly visible.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsTierAdminInfo.IsRetired">
            <summary>
            Indicates whether this tier has been retired from the associated GitHub Sponsors profile. Retired tiers are no longer shown on the GitHub Sponsors profile and cannot be chosen for new sponsorships. Existing sponsorships may still use retired tiers if the sponsor selected the tier before it was retired.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.SponsorsTierAdminInfo.Sponsorships(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorshipOrder}})">
            <summary>
            The sponsorships using this tier.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="includePrivate">Whether or not to return private sponsorships using this tier. Defaults to only returning public sponsorships on this tier.</param>
            <param name="orderBy">Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorsTierConnection">
            <summary>
            The connection type for SponsorsTier.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsTierConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsTierConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsTierConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsTierConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorsTierEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsTierEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsTierEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorsTierOrder">
            <summary>
            Ordering options for Sponsors tiers connections.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsTierOrder.Field">
            <summary>
            The field to order tiers by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SponsorsTierOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SponsorsTierOrderField">
            <summary>
            Properties by which Sponsors tiers connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsTierOrderField.CreatedAt">
            <summary>
            Order tiers by creation time.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SponsorsTierOrderField.MonthlyPriceInCents">
            <summary>
            Order tiers by their monthly price in cents
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SquashMergeCommitMessage">
            <summary>
            The possible default commit messages for squash merges.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SquashMergeCommitMessage.PrBody">
            <summary>
            Default to the pull request's body.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SquashMergeCommitMessage.CommitMessages">
            <summary>
            Default to the branch's commit messages.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SquashMergeCommitMessage.Blank">
            <summary>
            Default to a blank commit message.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SquashMergeCommitTitle">
            <summary>
            The possible default commit titles for squash merges.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SquashMergeCommitTitle.PrTitle">
            <summary>
            Default to the pull request's title.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SquashMergeCommitTitle.CommitOrPrTitle">
            <summary>
            Default to the commit's title (if only one commit) or the pull request's title (when more than one commit).
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SshSignature">
            <summary>
            Represents an SSH signature on a Commit or Tag.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SshSignature.Email">
            <summary>
            Email used to sign this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SshSignature.IsValid">
            <summary>
            True if the signature is valid and verified by GitHub.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SshSignature.KeyFingerprint">
            <summary>
            Hex-encoded fingerprint of the key that signed this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SshSignature.Payload">
            <summary>
            Payload for GPG signing object. Raw ODB object without the signature header.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SshSignature.Signature">
            <summary>
            ASCII-armored signature header from object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SshSignature.Signer">
            <summary>
            GitHub user corresponding to the email signing this commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SshSignature.State">
            <summary>
            The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SshSignature.WasSignedByGitHub">
            <summary>
            True if the signature was made with GitHub's signing key.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.StargazerConnection">
            <summary>
            The connection type for User.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StargazerConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StargazerConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StargazerConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StargazerConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.StargazerEdge">
            <summary>
            Represents a user that's starred a repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StargazerEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StargazerEdge.StarredAt">
            <summary>
            Identifies when the item was starred.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.StarOrder">
            <summary>
            Ways in which star connections can be ordered.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StarOrder.Field">
            <summary>
            The field in which to order nodes by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StarOrder.Direction">
            <summary>
            The direction in which to order nodes.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.StarOrderField">
            <summary>
            Properties by which star connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.StarOrderField.StarredAt">
            <summary>
            Allows ordering a list of stars by when they were created.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IStarrable">
            <summary>
            Things that can be starred.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IStarrable.StargazerCount">
            <summary>
            Returns a count of how many stargazers there are on this object
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.IStarrable.Stargazers(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.StarOrder}})">
            <summary>
            A list of users who have starred this starrable.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Order for connection</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.IStarrable.ViewerHasStarred">
            <summary>
            Returns a boolean indicating whether the viewing user has starred this starrable.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.StarredRepositoryConnection">
            <summary>
            The connection type for Repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StarredRepositoryConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StarredRepositoryConnection.IsOverLimit">
            <summary>
            Is the list of stars for this user truncated? This is true for users that have many stars.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StarredRepositoryConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StarredRepositoryConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StarredRepositoryConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.StarredRepositoryEdge">
            <summary>
            Represents a starred repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StarredRepositoryEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StarredRepositoryEdge.StarredAt">
            <summary>
            Identifies when the item was starred.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.StartOrganizationMigrationInput">
            <summary>
            Autogenerated input type of StartOrganizationMigration
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StartOrganizationMigrationInput.SourceOrgUrl">
            <summary>
            The URL of the organization to migrate.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StartOrganizationMigrationInput.TargetOrgName">
            <summary>
            The name of the target organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StartOrganizationMigrationInput.TargetEnterpriseId">
            <summary>
            The ID of the enterprise the target organization belongs to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StartOrganizationMigrationInput.SourceAccessToken">
            <summary>
            The migration source access token.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StartOrganizationMigrationInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.StartOrganizationMigrationPayload">
            <summary>
            Autogenerated return type of StartOrganizationMigration
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StartOrganizationMigrationPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StartOrganizationMigrationPayload.OrgMigration">
            <summary>
            The new organization migration.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.StartRepositoryMigrationInput">
            <summary>
            Autogenerated input type of StartRepositoryMigration
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StartRepositoryMigrationInput.SourceId">
            <summary>
            The ID of the migration source.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StartRepositoryMigrationInput.OwnerId">
            <summary>
            The ID of the organization that will own the imported repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StartRepositoryMigrationInput.SourceRepositoryUrl">
            <summary>
            The URL of the source repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StartRepositoryMigrationInput.RepositoryName">
            <summary>
            The name of the imported repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StartRepositoryMigrationInput.ContinueOnError">
            <summary>
            Whether to continue the migration on error. Defaults to `false`.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StartRepositoryMigrationInput.GitArchiveUrl">
            <summary>
            The signed URL to access the user-uploaded git archive.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StartRepositoryMigrationInput.MetadataArchiveUrl">
            <summary>
            The signed URL to access the user-uploaded metadata archive.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StartRepositoryMigrationInput.AccessToken">
            <summary>
            The migration source access token.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StartRepositoryMigrationInput.GithubPat">
            <summary>
            The GitHub personal access token of the user importing to the target repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StartRepositoryMigrationInput.SkipReleases">
            <summary>
            Whether to skip migrating releases for the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StartRepositoryMigrationInput.TargetRepoVisibility">
            <summary>
            The visibility of the imported repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StartRepositoryMigrationInput.LockSource">
            <summary>
            Whether to lock the source repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StartRepositoryMigrationInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.StartRepositoryMigrationPayload">
            <summary>
            Autogenerated return type of StartRepositoryMigration
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StartRepositoryMigrationPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StartRepositoryMigrationPayload.RepositoryMigration">
            <summary>
            The new repository migration.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Status">
            <summary>
            Represents a commit status.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Status.CombinedContexts(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of status contexts and check runs for this commit.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Status.Commit">
            <summary>
            The commit this status is attached to.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Status.Context(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Looks up an individual status context by context name.
            </summary>
            <param name="name">The context name.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Status.Contexts">
            <summary>
            The individual status contexts for this commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Status.State">
            <summary>
            The combined commit status.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.StatusCheckConfiguration">
            <summary>
            Required status check
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusCheckConfiguration.Context">
            <summary>
            The status check context name that must be present on the commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusCheckConfiguration.IntegrationId">
            <summary>
            The optional integration ID that this status check must originate from.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.StatusCheckConfigurationInput">
            <summary>
            Required status check
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusCheckConfigurationInput.Context">
            <summary>
            The status check context name that must be present on the commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusCheckConfigurationInput.IntegrationId">
            <summary>
            The optional integration ID that this status check must originate from.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.StatusCheckRollup">
            <summary>
            Represents the rollup for both the check runs and status for a commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusCheckRollup.Commit">
            <summary>
            The commit the status and check runs are attached to.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.StatusCheckRollup.Contexts(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of status contexts and check runs for this commit.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusCheckRollup.State">
            <summary>
            The combined status for the commit.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.StatusCheckRollupContext">
            <summary>
            Types that can be inside a StatusCheckRollup context.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.StatusCheckRollupContext.Selector`1.CheckRun(System.Func{Octokit.GraphQL.Model.CheckRun,`0})">
            <summary>
            A check run.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.StatusCheckRollupContext.Selector`1.StatusContext(System.Func{Octokit.GraphQL.Model.StatusContext,`0})">
            <summary>
            Represents an individual commit status context
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.StatusCheckRollupContextConnection">
            <summary>
            The connection type for StatusCheckRollupContext.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusCheckRollupContextConnection.CheckRunCount">
            <summary>
            The number of check runs in this rollup.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusCheckRollupContextConnection.CheckRunCountsByState">
            <summary>
            Counts of check runs by state.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusCheckRollupContextConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusCheckRollupContextConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusCheckRollupContextConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusCheckRollupContextConnection.StatusContextCount">
            <summary>
            The number of status contexts in this rollup.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusCheckRollupContextConnection.StatusContextCountsByState">
            <summary>
            Counts of status contexts by state.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusCheckRollupContextConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.StatusCheckRollupContextEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusCheckRollupContextEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusCheckRollupContextEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.StatusContext">
            <summary>
            Represents an individual commit status context
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.StatusContext.AvatarUrl(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            The avatar of the OAuth application or the user that created the status
            </summary>
            <param name="size">The size of the resulting square image.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusContext.Commit">
            <summary>
            This commit this status context is attached to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusContext.Context">
            <summary>
            The name of this status context.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusContext.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusContext.Creator">
            <summary>
            The actor who created this status context.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusContext.Description">
            <summary>
            The description for this status context.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.StatusContext.IsRequired(System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.ID}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            Whether this is required to pass before merging for a specific pull request.
            </summary>
            <param name="pullRequestId">The id of the pull request this is required for</param>
            <param name="pullRequestNumber">The number of the pull request this is required for</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusContext.State">
            <summary>
            The state of this status context.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusContext.TargetUrl">
            <summary>
            The URL for this status context.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.StatusContextStateCount">
            <summary>
            Represents a count of the state of a status context.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusContextStateCount.Count">
            <summary>
            The number of statuses with this state.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StatusContextStateCount.State">
            <summary>
            The state of a status context.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.StatusState">
            <summary>
            The possible commit status states.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.StatusState.Expected">
            <summary>
            Status is expected.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.StatusState.Error">
            <summary>
            Status is errored.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.StatusState.Failure">
            <summary>
            Status is failing.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.StatusState.Pending">
            <summary>
            Status is pending.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.StatusState.Success">
            <summary>
            Status is successful.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.StripeConnectAccount">
            <summary>
            A Stripe Connect account for receiving sponsorship funds from GitHub Sponsors.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StripeConnectAccount.AccountId">
            <summary>
            The account number used to identify this Stripe Connect account.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StripeConnectAccount.BillingCountryOrRegion">
            <summary>
            The name of the country or region of an external account, such as a bank account, tied to the Stripe Connect account. Will only return a value when queried by the maintainer of the associated GitHub Sponsors profile themselves, or by an admin of the sponsorable organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StripeConnectAccount.CountryOrRegion">
            <summary>
            The name of the country or region of the Stripe Connect account. Will only return a value when queried by the maintainer of the associated GitHub Sponsors profile themselves, or by an admin of the sponsorable organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StripeConnectAccount.IsActive">
            <summary>
            Whether this Stripe Connect account is currently in use for the associated GitHub Sponsors profile.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StripeConnectAccount.SponsorsListing">
            <summary>
            The GitHub Sponsors profile associated with this Stripe Connect account.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.StripeConnectAccount.StripeDashboardUrl">
            <summary>
            The URL to access this Stripe Connect account on Stripe's website.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SubmitPullRequestReviewInput">
            <summary>
            Autogenerated input type of SubmitPullRequestReview
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SubmitPullRequestReviewInput.PullRequestId">
            <summary>
            The Pull Request ID to submit any pending reviews.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SubmitPullRequestReviewInput.PullRequestReviewId">
            <summary>
            The Pull Request Review ID to submit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SubmitPullRequestReviewInput.Event">
            <summary>
            The event to send to the Pull Request Review.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SubmitPullRequestReviewInput.Body">
            <summary>
            The text field to set on the Pull Request Review.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SubmitPullRequestReviewInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SubmitPullRequestReviewPayload">
            <summary>
            Autogenerated return type of SubmitPullRequestReview
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SubmitPullRequestReviewPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SubmitPullRequestReviewPayload.PullRequestReview">
            <summary>
            The submitted pull request review.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Submodule">
            <summary>
            A pointer to a repository at a specific revision embedded inside another repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Submodule.Branch">
            <summary>
            The branch of the upstream submodule for tracking updates
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Submodule.GitUrl">
            <summary>
            The git URL of the submodule repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Submodule.Name">
            <summary>
            The name of the submodule in .gitmodules
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Submodule.NameRaw">
            <summary>
            The name of the submodule in .gitmodules (Base64-encoded)
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Submodule.Path">
            <summary>
            The path in the superproject that this submodule is located in
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Submodule.PathRaw">
            <summary>
            The path in the superproject that this submodule is located in (Base64-encoded)
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Submodule.SubprojectCommitOid">
            <summary>
            The commit revision of the subproject repository being tracked by the submodule
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SubmoduleConnection">
            <summary>
            The connection type for Submodule.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SubmoduleConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SubmoduleConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SubmoduleConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SubmoduleConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SubmoduleEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SubmoduleEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SubmoduleEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ISubscribable">
            <summary>
            Entities that can be subscribed to for web and email notifications.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ISubscribable.ViewerCanSubscribe">
            <summary>
            Check if the viewer is able to change their subscription status for the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ISubscribable.ViewerSubscription">
            <summary>
            Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SubscribedEvent">
            <summary>
            Represents a 'subscribed' event on a given `Subscribable`.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SubscribedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SubscribedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SubscribedEvent.Subscribable">
            <summary>
            Object referenced by event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SubscriptionState">
            <summary>
            The possible states of a subscription.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SubscriptionState.Unsubscribed">
            <summary>
            The User is only notified when participating or @mentioned.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SubscriptionState.Subscribed">
            <summary>
            The User is notified of all conversations.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.SubscriptionState.Ignored">
            <summary>
            The User is never notified.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.SuggestedReviewer">
            <summary>
            A suggestion to review a pull request based on a user's commit history and review comments.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SuggestedReviewer.IsAuthor">
            <summary>
            Is this suggestion based on past commits?
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SuggestedReviewer.IsCommenter">
            <summary>
            Is this suggestion based on past review comments?
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.SuggestedReviewer.Reviewer">
            <summary>
            Identifies the user suggested to review the pull request.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Tag">
            <summary>
            Represents a Git tag.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Tag.AbbreviatedOid">
            <summary>
            An abbreviated version of the Git object ID
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Tag.CommitResourcePath">
            <summary>
            The HTTP path for this Git object
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Tag.CommitUrl">
            <summary>
            The HTTP URL for this Git object
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Tag.Message">
            <summary>
            The Git tag message.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Tag.Name">
            <summary>
            The Git tag name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Tag.Oid">
            <summary>
            The Git object ID
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Tag.Repository">
            <summary>
            The Repository the Git object belongs to
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Tag.Tagger">
            <summary>
            Details about the tag author.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Tag.Target">
            <summary>
            The Git object the tag points to.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TagNamePatternParameters">
            <summary>
            Parameters to be used for the tag_name_pattern rule
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TagNamePatternParameters.Name">
            <summary>
            How this rule will appear to users.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TagNamePatternParameters.Negate">
            <summary>
            If true, the rule will fail if the pattern matches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TagNamePatternParameters.Operator">
            <summary>
            The operator to use for matching.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TagNamePatternParameters.Pattern">
            <summary>
            The pattern to match with.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TagNamePatternParametersInput">
            <summary>
            Parameters to be used for the tag_name_pattern rule
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TagNamePatternParametersInput.Name">
            <summary>
            How this rule will appear to users.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TagNamePatternParametersInput.Negate">
            <summary>
            If true, the rule will fail if the pattern matches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TagNamePatternParametersInput.Operator">
            <summary>
            The operator to use for matching.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TagNamePatternParametersInput.Pattern">
            <summary>
            The pattern to match with.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Team">
            <summary>
            A team of users in an organization.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Team.Ancestors(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of teams that are ancestors of this team.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Team.AvatarUrl(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            A URL pointing to the team's avatar.
            </summary>
            <param name="size">The size in pixels of the resulting square image.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Team.ChildTeams(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.TeamOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            List of child teams belonging to this team
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="immediateOnly">Whether to list immediate child teams or all descendant child teams.</param>
            <param name="orderBy">Order for connection</param>
            <param name="userLogins">User logins to filter by</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.CombinedSlug">
            <summary>
            The slug corresponding to the organization and team.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.Description">
            <summary>
            The description of the team.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Team.Discussion(Octokit.GraphQL.Core.Arg{System.Int32})">
            <summary>
            Find a team discussion by its number.
            </summary>
            <param name="number">The sequence number of the discussion to find.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Team.Discussions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.TeamDiscussionOrder}})">
            <summary>
            A list of team discussions.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="isPinned">If provided, filters discussions according to whether or not they are pinned.</param>
            <param name="orderBy">Order for connection</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.DiscussionsResourcePath">
            <summary>
            The HTTP path for team discussions
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.DiscussionsUrl">
            <summary>
            The HTTP URL for team discussions
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.EditTeamResourcePath">
            <summary>
            The HTTP path for editing this team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.EditTeamUrl">
            <summary>
            The HTTP URL for editing this team
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Team.Invitations(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of pending invitations for users to this team
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Team.MemberStatuses(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UserStatusOrder}})">
            <summary>
            Get the status messages members of this entity have set that are either public or visible only to the organization.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for user statuses returned from the connection.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Team.Members(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.TeamMembershipType}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.TeamMemberOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.TeamMemberRole}})">
            <summary>
            A list of users who are members of this team.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="membership">Filter by membership type</param>
            <param name="orderBy">Order for the connection.</param>
            <param name="query">The search string to look for.</param>
            <param name="role">Filter by team member role</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.MembersResourcePath">
            <summary>
            The HTTP path for the team' members
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.MembersUrl">
            <summary>
            The HTTP URL for the team' members
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.Name">
            <summary>
            The name of the team.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.NewTeamResourcePath">
            <summary>
            The HTTP path creating a new team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.NewTeamUrl">
            <summary>
            The HTTP URL creating a new team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.NotificationSetting">
            <summary>
            The notification setting that the team has set.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.Organization">
            <summary>
            The organization that owns this team.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.ParentTeam">
            <summary>
            The parent team of the team.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.Privacy">
            <summary>
            The level of privacy the team has.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Team.ProjectV2(Octokit.GraphQL.Core.Arg{System.Int32})">
            <summary>
            Finds and returns the project according to the provided project number.
            </summary>
            <param name="number">The Project number.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Team.ProjectsV2(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ProjectV2Filters}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ProjectV2Order}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            List of projects this team has collaborator access to.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="filterBy">Filtering options for projects returned from this connection</param>
            <param name="orderBy">How to order the returned projects.</param>
            <param name="query">The query to search projects by.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Team.Repositories(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.TeamRepositoryOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of repositories this team has access to.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Order for the connection.</param>
            <param name="query">The search string to look for. Repositories will be returned where the name contains your search string.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.RepositoriesResourcePath">
            <summary>
            The HTTP path for this team's repositories
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.RepositoriesUrl">
            <summary>
            The HTTP URL for this team's repositories
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.ResourcePath">
            <summary>
            The HTTP path for this team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.Slug">
            <summary>
            The slug corresponding to the team.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.TeamsResourcePath">
            <summary>
            The HTTP path for this team's teams
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.TeamsUrl">
            <summary>
            The HTTP URL for this team's teams
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.Url">
            <summary>
            The HTTP URL for this team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.ViewerCanAdminister">
            <summary>
            Team is adminable by the viewer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.ViewerCanSubscribe">
            <summary>
            Check if the viewer is able to change their subscription status for the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Team.ViewerSubscription">
            <summary>
            Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamAddMemberAuditEntry">
            <summary>
            Audit log entry for a team.add_member event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddMemberAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddMemberAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddMemberAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddMemberAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddMemberAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddMemberAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddMemberAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddMemberAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddMemberAuditEntry.IsLdapMapped">
            <summary>
            Whether the team was mapped to an LDAP Group.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddMemberAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddMemberAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddMemberAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddMemberAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddMemberAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddMemberAuditEntry.Team">
            <summary>
            The team associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddMemberAuditEntry.TeamName">
            <summary>
            The name of the team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddMemberAuditEntry.TeamResourcePath">
            <summary>
            The HTTP path for this team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddMemberAuditEntry.TeamUrl">
            <summary>
            The HTTP URL for this team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddMemberAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddMemberAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddMemberAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddMemberAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry">
            <summary>
            Audit log entry for a team.add_repository event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.IsLdapMapped">
            <summary>
            Whether the team was mapped to an LDAP Group.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.Team">
            <summary>
            The team associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.TeamName">
            <summary>
            The name of the team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.TeamResourcePath">
            <summary>
            The HTTP path for this team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.TeamUrl">
            <summary>
            The HTTP URL for this team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamAddRepositoryAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ITeamAuditEntryData">
            <summary>
            Metadata for an audit entry with action team.*
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ITeamAuditEntryData.Team">
            <summary>
            The team associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ITeamAuditEntryData.TeamName">
            <summary>
            The name of the team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ITeamAuditEntryData.TeamResourcePath">
            <summary>
            The HTTP path for this team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ITeamAuditEntryData.TeamUrl">
            <summary>
            The HTTP URL for this team
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry">
            <summary>
            Audit log entry for a team.change_parent_team event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.IsLdapMapped">
            <summary>
            Whether the team was mapped to an LDAP Group.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.ParentTeam">
            <summary>
            The new parent team.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.ParentTeamName">
            <summary>
            The name of the new parent team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.ParentTeamNameWas">
            <summary>
            The name of the former parent team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.ParentTeamResourcePath">
            <summary>
            The HTTP path for the parent team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.ParentTeamUrl">
            <summary>
            The HTTP URL for the parent team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.ParentTeamWas">
            <summary>
            The former parent team.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.ParentTeamWasResourcePath">
            <summary>
            The HTTP path for the previous parent team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.ParentTeamWasUrl">
            <summary>
            The HTTP URL for the previous parent team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.Team">
            <summary>
            The team associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.TeamName">
            <summary>
            The name of the team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.TeamResourcePath">
            <summary>
            The HTTP path for this team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.TeamUrl">
            <summary>
            The HTTP URL for this team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamChangeParentTeamAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamConnection">
            <summary>
            The connection type for Team.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamDiscussion">
            <summary>
            A team discussion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.Author">
            <summary>
            The actor who authored the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.AuthorAssociation">
            <summary>
            Author's association with the discussion's team.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.Body">
            <summary>
            The body as Markdown.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.BodyHTML">
            <summary>
            The body rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.BodyText">
            <summary>
            The body rendered to text.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.BodyVersion">
            <summary>
            Identifies the discussion body hash.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.TeamDiscussion.Comments(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.TeamDiscussionCommentOrder}})">
            <summary>
            A list of comments on this discussion.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="fromComment">When provided, filters the connection such that results begin with the comment with this number.</param>
            <param name="orderBy">Order for connection</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.CommentsResourcePath">
            <summary>
            The HTTP path for discussion comments
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.CommentsUrl">
            <summary>
            The HTTP URL for discussion comments
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.CreatedViaEmail">
            <summary>
            Check if this comment was created via an email reply.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.Editor">
            <summary>
            The actor who edited the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.IncludesCreatedEdit">
            <summary>
            Check if this comment was edited and includes an edit with the creation data
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.IsPinned">
            <summary>
            Whether or not the discussion is pinned.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.IsPrivate">
            <summary>
            Whether or not the discussion is only visible to team members and org admins.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.LastEditedAt">
            <summary>
            The moment the editor made the last edit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.Number">
            <summary>
            Identifies the discussion within its team.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.PublishedAt">
            <summary>
            Identifies when the comment was published at.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.ReactionGroups">
            <summary>
            A list of reactions grouped by content left on the subject.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.TeamDiscussion.Reactions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionContent}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionOrder}})">
            <summary>
            A list of Reactions left on the Issue.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="content">Allows filtering Reactions by emoji.</param>
            <param name="orderBy">Allows specifying the order in which reactions are returned.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.ResourcePath">
            <summary>
            The HTTP path for this discussion
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.Team">
            <summary>
            The team that defines the context of this discussion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.Title">
            <summary>
            The title of the discussion
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.Url">
            <summary>
            The HTTP URL for this discussion
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.TeamDiscussion.UserContentEdits(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of edits to this content.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.ViewerCanDelete">
            <summary>
            Check if the current viewer can delete this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.ViewerCanPin">
            <summary>
            Whether or not the current viewer can pin this discussion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.ViewerCanReact">
            <summary>
            Can user react to this subject
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.ViewerCanSubscribe">
            <summary>
            Check if the viewer is able to change their subscription status for the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.ViewerCanUpdate">
            <summary>
            Check if the current viewer can update this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.ViewerCannotUpdateReasons">
            <summary>
            Reasons why the current viewer can not update this comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.ViewerDidAuthor">
            <summary>
            Did the viewer author this comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussion.ViewerSubscription">
            <summary>
            Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamDiscussionComment">
            <summary>
            A comment on a team discussion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.Author">
            <summary>
            The actor who authored the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.AuthorAssociation">
            <summary>
            Author's association with the comment's team.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.Body">
            <summary>
            The body as Markdown.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.BodyHTML">
            <summary>
            The body rendered to HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.BodyText">
            <summary>
            The body rendered to text.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.BodyVersion">
            <summary>
            The current version of the body content.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.CreatedViaEmail">
            <summary>
            Check if this comment was created via an email reply.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.Discussion">
            <summary>
            The discussion this comment is about.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.Editor">
            <summary>
            The actor who edited the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.IncludesCreatedEdit">
            <summary>
            Check if this comment was edited and includes an edit with the creation data
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.LastEditedAt">
            <summary>
            The moment the editor made the last edit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.Number">
            <summary>
            Identifies the comment number.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.PublishedAt">
            <summary>
            Identifies when the comment was published at.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.ReactionGroups">
            <summary>
            A list of reactions grouped by content left on the subject.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.TeamDiscussionComment.Reactions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionContent}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReactionOrder}})">
            <summary>
            A list of Reactions left on the Issue.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="content">Allows filtering Reactions by emoji.</param>
            <param name="orderBy">Allows specifying the order in which reactions are returned.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.ResourcePath">
            <summary>
            The HTTP path for this comment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.Url">
            <summary>
            The HTTP URL for this comment
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.TeamDiscussionComment.UserContentEdits(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of edits to this content.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.ViewerCanDelete">
            <summary>
            Check if the current viewer can delete this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.ViewerCanReact">
            <summary>
            Can user react to this subject
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.ViewerCanUpdate">
            <summary>
            Check if the current viewer can update this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.ViewerCannotUpdateReasons">
            <summary>
            Reasons why the current viewer can not update this comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionComment.ViewerDidAuthor">
            <summary>
            Did the viewer author this comment.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamDiscussionCommentConnection">
            <summary>
            The connection type for TeamDiscussionComment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionCommentConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionCommentConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionCommentConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionCommentConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamDiscussionCommentEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionCommentEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionCommentEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamDiscussionCommentOrder">
            <summary>
            Ways in which team discussion comment connections can be ordered.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionCommentOrder.Field">
            <summary>
            The field by which to order nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionCommentOrder.Direction">
            <summary>
            The direction in which to order nodes.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamDiscussionCommentOrderField">
            <summary>
            Properties by which team discussion comment connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TeamDiscussionCommentOrderField.Number">
            <summary>
            Allows sequential ordering of team discussion comments (which is equivalent to chronological ordering).
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamDiscussionConnection">
            <summary>
            The connection type for TeamDiscussion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamDiscussionEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamDiscussionOrder">
            <summary>
            Ways in which team discussion connections can be ordered.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionOrder.Field">
            <summary>
            The field by which to order nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamDiscussionOrder.Direction">
            <summary>
            The direction in which to order nodes.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamDiscussionOrderField">
            <summary>
            Properties by which team discussion connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TeamDiscussionOrderField.CreatedAt">
            <summary>
            Allows chronological ordering of team discussions.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamMemberConnection">
            <summary>
            The connection type for User.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamMemberConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamMemberConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamMemberConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamMemberConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamMemberEdge">
            <summary>
            Represents a user who is a member of a team.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamMemberEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamMemberEdge.MemberAccessResourcePath">
            <summary>
            The HTTP path to the organization's member access page.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamMemberEdge.MemberAccessUrl">
            <summary>
            The HTTP URL to the organization's member access page.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamMemberEdge.Role">
            <summary>
            The role the member has on the team.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamMemberOrder">
            <summary>
            Ordering options for team member connections
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamMemberOrder.Field">
            <summary>
            The field to order team members by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamMemberOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamMemberOrderField">
            <summary>
            Properties by which team member connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TeamMemberOrderField.Login">
            <summary>
            Order team members by login
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TeamMemberOrderField.CreatedAt">
            <summary>
            Order team members by creation time
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamMemberRole">
            <summary>
            The possible team member roles; either 'maintainer' or 'member'.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TeamMemberRole.Maintainer">
            <summary>
            A team maintainer has permission to add and remove team members.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TeamMemberRole.Member">
            <summary>
            A team member has no administrative permissions on the team.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamMembershipType">
            <summary>
            Defines which types of team members are included in the returned list. Can be one of IMMEDIATE, CHILD_TEAM or ALL.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TeamMembershipType.Immediate">
            <summary>
            Includes only immediate members of the team.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TeamMembershipType.ChildTeam">
            <summary>
            Includes only child team members for the team.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TeamMembershipType.All">
            <summary>
            Includes immediate and child team members for the team.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamNotificationSetting">
            <summary>
            The possible team notification values.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TeamNotificationSetting.NotificationsEnabled">
            <summary>
            Everyone will receive notifications when the team is @mentioned.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TeamNotificationSetting.NotificationsDisabled">
            <summary>
            No one will receive notifications.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamOrder">
            <summary>
            Ways in which team connections can be ordered.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamOrder.Field">
            <summary>
            The field in which to order nodes by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamOrder.Direction">
            <summary>
            The direction in which to order nodes.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamOrderField">
            <summary>
            Properties by which team connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TeamOrderField.Name">
            <summary>
            Allows ordering a list of teams by name.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamPrivacy">
            <summary>
            The possible team privacy values.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TeamPrivacy.Secret">
            <summary>
            A secret team can only be seen by its members.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TeamPrivacy.Visible">
            <summary>
            A visible team can be seen and @mentioned by every member of the organization.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry">
            <summary>
            Audit log entry for a team.remove_member event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry.IsLdapMapped">
            <summary>
            Whether the team was mapped to an LDAP Group.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry.Team">
            <summary>
            The team associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry.TeamName">
            <summary>
            The name of the team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry.TeamResourcePath">
            <summary>
            The HTTP path for this team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry.TeamUrl">
            <summary>
            The HTTP URL for this team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveMemberAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry">
            <summary>
            Audit log entry for a team.remove_repository event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.Action">
            <summary>
            The action name
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.Actor">
            <summary>
            The user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.ActorIp">
            <summary>
            The IP address of the actor
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.ActorLocation">
            <summary>
            A readable representation of the actor's location
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.ActorLogin">
            <summary>
            The username of the user who initiated the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.ActorResourcePath">
            <summary>
            The HTTP path for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.ActorUrl">
            <summary>
            The HTTP URL for the actor.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.CreatedAt">
            <summary>
            The time the action was initiated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.IsLdapMapped">
            <summary>
            Whether the team was mapped to an LDAP Group.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.OperationType">
            <summary>
            The corresponding operation type for the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.Organization">
            <summary>
            The Organization associated with the Audit Entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.OrganizationName">
            <summary>
            The name of the Organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.OrganizationResourcePath">
            <summary>
            The HTTP path for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.OrganizationUrl">
            <summary>
            The HTTP URL for the organization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.Repository">
            <summary>
            The repository associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.RepositoryName">
            <summary>
            The name of the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.RepositoryResourcePath">
            <summary>
            The HTTP path for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.RepositoryUrl">
            <summary>
            The HTTP URL for the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.Team">
            <summary>
            The team associated with the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.TeamName">
            <summary>
            The name of the team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.TeamResourcePath">
            <summary>
            The HTTP path for this team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.TeamUrl">
            <summary>
            The HTTP URL for this team
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.User">
            <summary>
            The user affected by the action
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.UserLogin">
            <summary>
            For actions involving two users, the actor is the initiator and the user is the affected user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.UserResourcePath">
            <summary>
            The HTTP path for the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRemoveRepositoryAuditEntry.UserUrl">
            <summary>
            The HTTP URL for the user.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamRepositoryConnection">
            <summary>
            The connection type for Repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRepositoryConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRepositoryConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRepositoryConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRepositoryConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamRepositoryEdge">
            <summary>
            Represents a team repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRepositoryEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRepositoryEdge.Permission">
            <summary>
            The permission level the team has on the repository
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamRepositoryOrder">
            <summary>
            Ordering options for team repository connections
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRepositoryOrder.Field">
            <summary>
            The field to order repositories by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TeamRepositoryOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamRepositoryOrderField">
            <summary>
            Properties by which team repository connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TeamRepositoryOrderField.CreatedAt">
            <summary>
            Order repositories by creation time
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TeamRepositoryOrderField.UpdatedAt">
            <summary>
            Order repositories by update time
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TeamRepositoryOrderField.PushedAt">
            <summary>
            Order repositories by push time
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TeamRepositoryOrderField.Name">
            <summary>
            Order repositories by name
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TeamRepositoryOrderField.Permission">
            <summary>
            Order repositories by permission
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TeamRepositoryOrderField.Stargazers">
            <summary>
            Order repositories by number of stargazers
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TeamRole">
            <summary>
            The role of a user on a team.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TeamRole.Admin">
            <summary>
            User has admin rights on the team.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TeamRole.Member">
            <summary>
            User is a member of the team.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TextMatch">
            <summary>
            A text match within a search result.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TextMatch.Fragment">
            <summary>
            The specific text fragment within the property matched on.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TextMatch.Highlights">
            <summary>
            Highlights within the matched fragment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TextMatch.Property">
            <summary>
            The property matched on.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TextMatchHighlight">
            <summary>
            Represents a single highlight in a search result match.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TextMatchHighlight.BeginIndice">
            <summary>
            The indice in the fragment where the matched text begins.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TextMatchHighlight.EndIndice">
            <summary>
            The indice in the fragment where the matched text ends.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TextMatchHighlight.Text">
            <summary>
            The text matched.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Topic">
            <summary>
            A topic aggregates entities that are related to a subject.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Topic.Name">
            <summary>
            The topic's name.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Topic.RelatedTopics(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            A list of related topics, including aliases of this topic, sorted with the most relevant
            first. Returns up to 10 Topics.
            </summary>
            <param name="first">How many topics to return.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.Topic.Repositories(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.Nullable{Octokit.GraphQL.Model.RepositoryAffiliation}}}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RepositoryOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.Nullable{Octokit.GraphQL.Model.RepositoryAffiliation}}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RepositoryPrivacy}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            A list of repositories.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="affiliations">Array of viewer's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the current viewer owns.</param>
            <param name="isLocked">If non-null, filters repositories according to whether they have been locked</param>
            <param name="orderBy">Ordering options for repositories returned from the connection</param>
            <param name="ownerAffiliations">Array of owner's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the organization or user being viewed owns.</param>
            <param name="privacy">If non-null, filters repositories according to privacy</param>
            <param name="sponsorableOnly">If true, only repositories whose owner can be sponsored via GitHub Sponsors will be returned.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Topic.StargazerCount">
            <summary>
            Returns a count of how many stargazers there are on this object
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Topic.Stargazers(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.StarOrder}})">
            <summary>
            A list of users who have starred this starrable.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Order for connection</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Topic.ViewerHasStarred">
            <summary>
            Returns a boolean indicating whether the viewing user has starred this starrable.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ITopicAuditEntryData">
            <summary>
            Metadata for an audit entry with a topic.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ITopicAuditEntryData.Topic">
            <summary>
            The name of the topic added to the repository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ITopicAuditEntryData.TopicName">
            <summary>
            The name of the topic added to the repository
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TopicSuggestionDeclineReason">
            <summary>
            Reason that the suggested topic is declined.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TopicSuggestionDeclineReason.NotRelevant">
            <summary>
            The suggested topic is not relevant to the repository.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TopicSuggestionDeclineReason.TooSpecific">
            <summary>
            The suggested topic is too specific for the repository (e.g. #ruby-on-rails-version-4-2-1).
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TopicSuggestionDeclineReason.PersonalPreference">
            <summary>
            The viewer does not like the suggested topic.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TopicSuggestionDeclineReason.TooGeneral">
            <summary>
            The suggested topic is too general for the repository.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TrackedIssueStates">
            <summary>
            The possible states of a tracked issue.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TrackedIssueStates.Open">
            <summary>
            The tracked issue is open
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.TrackedIssueStates.Closed">
            <summary>
            The tracked issue is closed
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TransferEnterpriseOrganizationInput">
            <summary>
            Autogenerated input type of TransferEnterpriseOrganization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TransferEnterpriseOrganizationInput.OrganizationId">
            <summary>
            The ID of the organization to transfer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TransferEnterpriseOrganizationInput.DestinationEnterpriseId">
            <summary>
            The ID of the enterprise where the organization should be transferred.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TransferEnterpriseOrganizationInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TransferEnterpriseOrganizationPayload">
            <summary>
            Autogenerated return type of TransferEnterpriseOrganization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TransferEnterpriseOrganizationPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TransferEnterpriseOrganizationPayload.Organization">
            <summary>
            The organization for which a transfer was initiated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TransferIssueInput">
            <summary>
            Autogenerated input type of TransferIssue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TransferIssueInput.IssueId">
            <summary>
            The Node ID of the issue to be transferred
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TransferIssueInput.RepositoryId">
            <summary>
            The Node ID of the repository the issue should be transferred to
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TransferIssueInput.CreateLabelsIfMissing">
            <summary>
            Whether to create labels if they don't exist in the target repository (matched by name)
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TransferIssueInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TransferIssuePayload">
            <summary>
            Autogenerated return type of TransferIssue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TransferIssuePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TransferIssuePayload.Issue">
            <summary>
            The issue that was transferred
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TransferredEvent">
            <summary>
            Represents a 'transferred' event on a given issue or pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TransferredEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TransferredEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TransferredEvent.FromRepository">
            <summary>
            The repository this came from
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TransferredEvent.Issue">
            <summary>
            Identifies the issue associated with the event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Tree">
            <summary>
            Represents a Git tree.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Tree.AbbreviatedOid">
            <summary>
            An abbreviated version of the Git object ID
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Tree.CommitResourcePath">
            <summary>
            The HTTP path for this Git object
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Tree.CommitUrl">
            <summary>
            The HTTP URL for this Git object
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Tree.Entries">
            <summary>
            A list of tree entries.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Tree.Oid">
            <summary>
            The Git object ID
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Tree.Repository">
            <summary>
            The Repository the Git object belongs to
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.TreeEntry">
            <summary>
            Represents a Git tree entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TreeEntry.Extension">
            <summary>
            The extension of the file
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TreeEntry.IsGenerated">
            <summary>
            Whether or not this tree entry is generated
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TreeEntry.Language">
            <summary>
            The programming language this file is written in.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TreeEntry.LineCount">
            <summary>
            Number of lines in the file.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TreeEntry.Mode">
            <summary>
            Entry file mode.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TreeEntry.Name">
            <summary>
            Entry file name.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TreeEntry.NameRaw">
            <summary>
            Entry file name. (Base64-encoded)
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TreeEntry.Object">
            <summary>
            Entry file object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TreeEntry.Oid">
            <summary>
            Entry file Git object ID.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TreeEntry.Path">
            <summary>
            The full path of the file.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TreeEntry.PathRaw">
            <summary>
            The full path of the file. (Base64-encoded)
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TreeEntry.Repository">
            <summary>
            The Repository the tree entry belongs to
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TreeEntry.Size">
            <summary>
            Entry byte size
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TreeEntry.Submodule">
            <summary>
            If the TreeEntry is for a directory occupied by a submodule project, this returns the corresponding submodule
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.TreeEntry.Type">
            <summary>
            Entry file type.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnarchiveProjectV2ItemInput">
            <summary>
            Autogenerated input type of UnarchiveProjectV2Item
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnarchiveProjectV2ItemInput.ProjectId">
            <summary>
            The ID of the Project to archive the item from.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnarchiveProjectV2ItemInput.ItemId">
            <summary>
            The ID of the ProjectV2Item to unarchive.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnarchiveProjectV2ItemInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnarchiveProjectV2ItemPayload">
            <summary>
            Autogenerated return type of UnarchiveProjectV2Item
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnarchiveProjectV2ItemPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnarchiveProjectV2ItemPayload.Item">
            <summary>
            The item unarchived from the project.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnarchiveRepositoryInput">
            <summary>
            Autogenerated input type of UnarchiveRepository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnarchiveRepositoryInput.RepositoryId">
            <summary>
            The ID of the repository to unarchive.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnarchiveRepositoryInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnarchiveRepositoryPayload">
            <summary>
            Autogenerated return type of UnarchiveRepository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnarchiveRepositoryPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnarchiveRepositoryPayload.Repository">
            <summary>
            The repository that was unarchived.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnassignedEvent">
            <summary>
            Represents an 'unassigned' event on any assignable object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnassignedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnassignedEvent.Assignable">
            <summary>
            Identifies the assignable associated with the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnassignedEvent.Assignee">
            <summary>
            Identifies the user or mannequin that was unassigned.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnassignedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnassignedEvent.User">
            <summary>
            Identifies the subject (user) who was unassigned.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnfollowOrganizationInput">
            <summary>
            Autogenerated input type of UnfollowOrganization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnfollowOrganizationInput.OrganizationId">
            <summary>
            ID of the organization to unfollow.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnfollowOrganizationInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnfollowOrganizationPayload">
            <summary>
            Autogenerated return type of UnfollowOrganization
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnfollowOrganizationPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnfollowOrganizationPayload.Organization">
            <summary>
            The organization that was unfollowed.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnfollowUserInput">
            <summary>
            Autogenerated input type of UnfollowUser
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnfollowUserInput.UserId">
            <summary>
            ID of the user to unfollow.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnfollowUserInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnfollowUserPayload">
            <summary>
            Autogenerated return type of UnfollowUser
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnfollowUserPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnfollowUserPayload.User">
            <summary>
            The user that was unfollowed.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IUniformResourceLocatable">
            <summary>
            Represents a type that can be retrieved by a URL.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IUniformResourceLocatable.ResourcePath">
            <summary>
            The HTML path to this resource.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IUniformResourceLocatable.Url">
            <summary>
            The URL to this resource.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnknownSignature">
            <summary>
            Represents an unknown signature on a Commit or Tag.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnknownSignature.Email">
            <summary>
            Email used to sign this object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnknownSignature.IsValid">
            <summary>
            True if the signature is valid and verified by GitHub.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnknownSignature.Payload">
            <summary>
            Payload for GPG signing object. Raw ODB object without the signature header.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnknownSignature.Signature">
            <summary>
            ASCII-armored signature header from object.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnknownSignature.Signer">
            <summary>
            GitHub user corresponding to the email signing this commit.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnknownSignature.State">
            <summary>
            The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnknownSignature.WasSignedByGitHub">
            <summary>
            True if the signature was made with GitHub's signing key.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnlabeledEvent">
            <summary>
            Represents an 'unlabeled' event on a given issue or pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlabeledEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlabeledEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlabeledEvent.Label">
            <summary>
            Identifies the label associated with the 'unlabeled' event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlabeledEvent.Labelable">
            <summary>
            Identifies the `Labelable` associated with the event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnlinkProjectV2FromRepositoryInput">
            <summary>
            Autogenerated input type of UnlinkProjectV2FromRepository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlinkProjectV2FromRepositoryInput.ProjectId">
            <summary>
            The ID of the project to unlink from the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlinkProjectV2FromRepositoryInput.RepositoryId">
            <summary>
            The ID of the repository to unlink from the project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlinkProjectV2FromRepositoryInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnlinkProjectV2FromRepositoryPayload">
            <summary>
            Autogenerated return type of UnlinkProjectV2FromRepository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlinkProjectV2FromRepositoryPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlinkProjectV2FromRepositoryPayload.Repository">
            <summary>
            The repository the project is no longer linked to.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnlinkProjectV2FromTeamInput">
            <summary>
            Autogenerated input type of UnlinkProjectV2FromTeam
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlinkProjectV2FromTeamInput.ProjectId">
            <summary>
            The ID of the project to unlink from the team.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlinkProjectV2FromTeamInput.TeamId">
            <summary>
            The ID of the team to unlink from the project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlinkProjectV2FromTeamInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnlinkProjectV2FromTeamPayload">
            <summary>
            Autogenerated return type of UnlinkProjectV2FromTeam
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlinkProjectV2FromTeamPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlinkProjectV2FromTeamPayload.Team">
            <summary>
            The team the project is unlinked from
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnlinkRepositoryFromProjectInput">
            <summary>
            Autogenerated input type of UnlinkRepositoryFromProject
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlinkRepositoryFromProjectInput.ProjectId">
            <summary>
            The ID of the Project linked to the Repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlinkRepositoryFromProjectInput.RepositoryId">
            <summary>
            The ID of the Repository linked to the Project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlinkRepositoryFromProjectInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnlinkRepositoryFromProjectPayload">
            <summary>
            Autogenerated return type of UnlinkRepositoryFromProject
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlinkRepositoryFromProjectPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlinkRepositoryFromProjectPayload.Project">
            <summary>
            The linked Project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlinkRepositoryFromProjectPayload.Repository">
            <summary>
            The linked Repository.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnlockedEvent">
            <summary>
            Represents an 'unlocked' event on a given issue or pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlockedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlockedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlockedEvent.Lockable">
            <summary>
            Object that was unlocked.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnlockLockableInput">
            <summary>
            Autogenerated input type of UnlockLockable
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlockLockableInput.LockableId">
            <summary>
            ID of the item to be unlocked.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlockLockableInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnlockLockablePayload">
            <summary>
            Autogenerated return type of UnlockLockable
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlockLockablePayload.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlockLockablePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnlockLockablePayload.UnlockedRecord">
            <summary>
            The item that was unlocked.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnmarkDiscussionCommentAsAnswerInput">
            <summary>
            Autogenerated input type of UnmarkDiscussionCommentAsAnswer
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnmarkDiscussionCommentAsAnswerInput.Id">
            <summary>
            The Node ID of the discussion comment to unmark as an answer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnmarkDiscussionCommentAsAnswerInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnmarkDiscussionCommentAsAnswerPayload">
            <summary>
            Autogenerated return type of UnmarkDiscussionCommentAsAnswer
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnmarkDiscussionCommentAsAnswerPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnmarkDiscussionCommentAsAnswerPayload.Discussion">
            <summary>
            The discussion that includes the comment.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnmarkedAsDuplicateEvent">
            <summary>
            Represents an 'unmarked_as_duplicate' event on a given issue or pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnmarkedAsDuplicateEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnmarkedAsDuplicateEvent.Canonical">
            <summary>
            The authoritative issue or pull request which has been duplicated by another.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnmarkedAsDuplicateEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnmarkedAsDuplicateEvent.Duplicate">
            <summary>
            The issue or pull request which has been marked as a duplicate of another.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnmarkedAsDuplicateEvent.IsCrossRepository">
            <summary>
            Canonical and duplicate belong to different repositories.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnmarkFileAsViewedInput">
            <summary>
            Autogenerated input type of UnmarkFileAsViewed
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnmarkFileAsViewedInput.PullRequestId">
            <summary>
            The Node ID of the pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnmarkFileAsViewedInput.Path">
            <summary>
            The path of the file to mark as unviewed
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnmarkFileAsViewedInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnmarkFileAsViewedPayload">
            <summary>
            Autogenerated return type of UnmarkFileAsViewed
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnmarkFileAsViewedPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnmarkFileAsViewedPayload.PullRequest">
            <summary>
            The updated pull request.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnmarkIssueAsDuplicateInput">
            <summary>
            Autogenerated input type of UnmarkIssueAsDuplicate
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnmarkIssueAsDuplicateInput.DuplicateId">
            <summary>
            ID of the issue or pull request currently marked as a duplicate.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnmarkIssueAsDuplicateInput.CanonicalId">
            <summary>
            ID of the issue or pull request currently considered canonical/authoritative/original.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnmarkIssueAsDuplicateInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnmarkIssueAsDuplicatePayload">
            <summary>
            Autogenerated return type of UnmarkIssueAsDuplicate
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnmarkIssueAsDuplicatePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnmarkIssueAsDuplicatePayload.Duplicate">
            <summary>
            The issue or pull request that was marked as a duplicate.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnminimizeCommentInput">
            <summary>
            Autogenerated input type of UnminimizeComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnminimizeCommentInput.SubjectId">
            <summary>
            The Node ID of the subject to modify.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnminimizeCommentInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnminimizeCommentPayload">
            <summary>
            Autogenerated return type of UnminimizeComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnminimizeCommentPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnminimizeCommentPayload.UnminimizedComment">
            <summary>
            The comment that was unminimized.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnpinIssueInput">
            <summary>
            Autogenerated input type of UnpinIssue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnpinIssueInput.IssueId">
            <summary>
            The ID of the issue to be unpinned
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnpinIssueInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnpinIssuePayload">
            <summary>
            Autogenerated return type of UnpinIssue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnpinIssuePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnpinIssuePayload.Issue">
            <summary>
            The issue that was unpinned
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnpinnedEvent">
            <summary>
            Represents an 'unpinned' event on a given issue or pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnpinnedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnpinnedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnpinnedEvent.Issue">
            <summary>
            Identifies the issue associated with the event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnresolveReviewThreadInput">
            <summary>
            Autogenerated input type of UnresolveReviewThread
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnresolveReviewThreadInput.ThreadId">
            <summary>
            The ID of the thread to unresolve
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnresolveReviewThreadInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnresolveReviewThreadPayload">
            <summary>
            Autogenerated return type of UnresolveReviewThread
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnresolveReviewThreadPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnresolveReviewThreadPayload.Thread">
            <summary>
            The thread to resolve.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UnsubscribedEvent">
            <summary>
            Represents an 'unsubscribed' event on a given `Subscribable`.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnsubscribedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnsubscribedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UnsubscribedEvent.Subscribable">
            <summary>
            Object referenced by event.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IUpdatable">
            <summary>
            Entities that can be updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IUpdatable.ViewerCanUpdate">
            <summary>
            Check if the current viewer can update this object.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IUpdatableComment">
            <summary>
            Comments that can be updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IUpdatableComment.ViewerCannotUpdateReasons">
            <summary>
            Reasons why the current viewer can not update this comment.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput">
            <summary>
            Autogenerated input type of UpdateBranchProtectionRule
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.BranchProtectionRuleId">
            <summary>
            The global relay id of the branch protection rule to be updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.Pattern">
            <summary>
            The glob-like pattern used to determine matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.RequiresApprovingReviews">
            <summary>
            Are approving reviews required to update matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.RequiredApprovingReviewCount">
            <summary>
            Number of approving reviews required to update matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.RequiresCommitSignatures">
            <summary>
            Are commits required to be signed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.RequiresLinearHistory">
            <summary>
            Are merge commits prohibited from being pushed to this branch.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.BlocksCreations">
            <summary>
            Is branch creation a protected operation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.AllowsForcePushes">
            <summary>
            Are force pushes allowed on this branch.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.AllowsDeletions">
            <summary>
            Can this branch be deleted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.IsAdminEnforced">
            <summary>
            Can admins overwrite branch protection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.RequiresStatusChecks">
            <summary>
            Are status checks required to update matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.RequiresStrictStatusChecks">
            <summary>
            Are branches required to be up to date before merging.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.RequiresCodeOwnerReviews">
            <summary>
            Are reviews from code owners required to update matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.DismissesStaleReviews">
            <summary>
            Will new commits pushed to matching branches dismiss pull request review approvals.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.RestrictsReviewDismissals">
            <summary>
            Is dismissal of pull request reviews restricted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.ReviewDismissalActorIds">
            <summary>
            A list of User, Team, or App IDs allowed to dismiss reviews on pull requests targeting matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.BypassPullRequestActorIds">
            <summary>
            A list of User, Team, or App IDs allowed to bypass pull requests targeting matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.BypassForcePushActorIds">
            <summary>
            A list of User, Team, or App IDs allowed to bypass force push targeting matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.RestrictsPushes">
            <summary>
            Is pushing to matching branches restricted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.PushActorIds">
            <summary>
            A list of User, Team, or App IDs allowed to push to matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.RequiredStatusCheckContexts">
            <summary>
            List of required status check contexts that must pass for commits to be accepted to matching branches.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.RequiredStatusChecks">
            <summary>
            The list of required status checks
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.RequiresDeployments">
            <summary>
            Are successful deployments required before merging.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.RequiredDeploymentEnvironments">
            <summary>
            The list of required deployment environments
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.RequiresConversationResolution">
            <summary>
            Are conversations required to be resolved before merging.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.RequireLastPushApproval">
            <summary>
            Whether the most recent push must be approved by someone other than the person who pushed it
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.LockBranch">
            <summary>
            Whether to set the branch as read-only. If this is true, users will not be able to push to the branch.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.LockAllowsFetchAndMerge">
            <summary>
            Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `false` to prevent fork syncing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateBranchProtectionRulePayload">
            <summary>
            Autogenerated return type of UpdateBranchProtectionRule
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRulePayload.BranchProtectionRule">
            <summary>
            The newly created BranchProtectionRule.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateBranchProtectionRulePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateCheckRunInput">
            <summary>
            Autogenerated input type of UpdateCheckRun
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateCheckRunInput.RepositoryId">
            <summary>
            The node ID of the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateCheckRunInput.CheckRunId">
            <summary>
            The node of the check.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateCheckRunInput.Name">
            <summary>
            The name of the check.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateCheckRunInput.DetailsUrl">
            <summary>
            The URL of the integrator's site that has the full details of the check.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateCheckRunInput.ExternalId">
            <summary>
            A reference for the run on the integrator's system.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateCheckRunInput.Status">
            <summary>
            The current status.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateCheckRunInput.StartedAt">
            <summary>
            The time that the check run began.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateCheckRunInput.Conclusion">
            <summary>
            The final conclusion of the check.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateCheckRunInput.CompletedAt">
            <summary>
            The time that the check run finished.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateCheckRunInput.Output">
            <summary>
            Descriptive details about the run.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateCheckRunInput.Actions">
            <summary>
            Possible further actions the integrator can perform, which a user may trigger.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateCheckRunInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateCheckRunPayload">
            <summary>
            Autogenerated return type of UpdateCheckRun
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateCheckRunPayload.CheckRun">
            <summary>
            The updated check run.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateCheckRunPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateCheckSuitePreferencesInput">
            <summary>
            Autogenerated input type of UpdateCheckSuitePreferences
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateCheckSuitePreferencesInput.RepositoryId">
            <summary>
            The Node ID of the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateCheckSuitePreferencesInput.AutoTriggerPreferences">
            <summary>
            The check suite preferences to modify.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateCheckSuitePreferencesInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateCheckSuitePreferencesPayload">
            <summary>
            Autogenerated return type of UpdateCheckSuitePreferences
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateCheckSuitePreferencesPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateCheckSuitePreferencesPayload.Repository">
            <summary>
            The updated repository.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateDiscussionCommentInput">
            <summary>
            Autogenerated input type of UpdateDiscussionComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateDiscussionCommentInput.CommentId">
            <summary>
            The Node ID of the discussion comment to update.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateDiscussionCommentInput.Body">
            <summary>
            The new contents of the comment body.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateDiscussionCommentInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateDiscussionCommentPayload">
            <summary>
            Autogenerated return type of UpdateDiscussionComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateDiscussionCommentPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateDiscussionCommentPayload.Comment">
            <summary>
            The modified discussion comment.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateDiscussionInput">
            <summary>
            Autogenerated input type of UpdateDiscussion
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateDiscussionInput.DiscussionId">
            <summary>
            The Node ID of the discussion to update.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateDiscussionInput.Title">
            <summary>
            The new discussion title.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateDiscussionInput.Body">
            <summary>
            The new contents of the discussion body.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateDiscussionInput.CategoryId">
            <summary>
            The Node ID of a discussion category within the same repository to change this discussion to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateDiscussionInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateDiscussionPayload">
            <summary>
            Autogenerated return type of UpdateDiscussion
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateDiscussionPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateDiscussionPayload.Discussion">
            <summary>
            The modified discussion.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseAdministratorRoleInput">
            <summary>
            Autogenerated input type of UpdateEnterpriseAdministratorRole
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseAdministratorRoleInput.EnterpriseId">
            <summary>
            The ID of the Enterprise which the admin belongs to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseAdministratorRoleInput.Login">
            <summary>
            The login of a administrator whose role is being changed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseAdministratorRoleInput.Role">
            <summary>
            The new role for the Enterprise administrator.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseAdministratorRoleInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseAdministratorRolePayload">
            <summary>
            Autogenerated return type of UpdateEnterpriseAdministratorRole
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseAdministratorRolePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseAdministratorRolePayload.Message">
            <summary>
            A message confirming the result of changing the administrator's role.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput">
            <summary>
            Autogenerated input type of UpdateEnterpriseAllowPrivateRepositoryForkingSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput.EnterpriseId">
            <summary>
            The ID of the enterprise on which to set the allow private repository forking setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput.SettingValue">
            <summary>
            The value for the allow private repository forking setting on the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput.PolicyValue">
            <summary>
            The value for the allow private repository forking policy on the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload">
            <summary>
            Autogenerated return type of UpdateEnterpriseAllowPrivateRepositoryForkingSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload.Enterprise">
            <summary>
            The enterprise with the updated allow private repository forking setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload.Message">
            <summary>
            A message confirming the result of updating the allow private repository forking setting.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseDefaultRepositoryPermissionSettingInput">
            <summary>
            Autogenerated input type of UpdateEnterpriseDefaultRepositoryPermissionSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseDefaultRepositoryPermissionSettingInput.EnterpriseId">
            <summary>
            The ID of the enterprise on which to set the base repository permission setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseDefaultRepositoryPermissionSettingInput.SettingValue">
            <summary>
            The value for the base repository permission setting on the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseDefaultRepositoryPermissionSettingInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseDefaultRepositoryPermissionSettingPayload">
            <summary>
            Autogenerated return type of UpdateEnterpriseDefaultRepositoryPermissionSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseDefaultRepositoryPermissionSettingPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseDefaultRepositoryPermissionSettingPayload.Enterprise">
            <summary>
            The enterprise with the updated base repository permission setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseDefaultRepositoryPermissionSettingPayload.Message">
            <summary>
            A message confirming the result of updating the base repository permission setting.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput">
            <summary>
            Autogenerated input type of UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput.EnterpriseId">
            <summary>
            The ID of the enterprise on which to set the members can change repository visibility setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput.SettingValue">
            <summary>
            The value for the members can change repository visibility setting on the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload">
            <summary>
            Autogenerated return type of UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload.Enterprise">
            <summary>
            The enterprise with the updated members can change repository visibility setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload.Message">
            <summary>
            A message confirming the result of updating the members can change repository visibility setting.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanCreateRepositoriesSettingInput">
            <summary>
            Autogenerated input type of UpdateEnterpriseMembersCanCreateRepositoriesSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanCreateRepositoriesSettingInput.EnterpriseId">
            <summary>
            The ID of the enterprise on which to set the members can create repositories setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanCreateRepositoriesSettingInput.SettingValue">
            <summary>
            Value for the members can create repositories setting on the enterprise. This or the granular public/private/internal allowed fields (but not both) must be provided.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanCreateRepositoriesSettingInput.MembersCanCreateRepositoriesPolicyEnabled">
            <summary>
            When false, allow member organizations to set their own repository creation member privileges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanCreateRepositoriesSettingInput.MembersCanCreatePublicRepositories">
            <summary>
            Allow members to create public repositories. Defaults to current value.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanCreateRepositoriesSettingInput.MembersCanCreatePrivateRepositories">
            <summary>
            Allow members to create private repositories. Defaults to current value.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanCreateRepositoriesSettingInput.MembersCanCreateInternalRepositories">
            <summary>
            Allow members to create internal repositories. Defaults to current value.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanCreateRepositoriesSettingInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload">
            <summary>
            Autogenerated return type of UpdateEnterpriseMembersCanCreateRepositoriesSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload.Enterprise">
            <summary>
            The enterprise with the updated members can create repositories setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload.Message">
            <summary>
            A message confirming the result of updating the members can create repositories setting.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanDeleteIssuesSettingInput">
            <summary>
            Autogenerated input type of UpdateEnterpriseMembersCanDeleteIssuesSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanDeleteIssuesSettingInput.EnterpriseId">
            <summary>
            The ID of the enterprise on which to set the members can delete issues setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanDeleteIssuesSettingInput.SettingValue">
            <summary>
            The value for the members can delete issues setting on the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanDeleteIssuesSettingInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanDeleteIssuesSettingPayload">
            <summary>
            Autogenerated return type of UpdateEnterpriseMembersCanDeleteIssuesSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanDeleteIssuesSettingPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanDeleteIssuesSettingPayload.Enterprise">
            <summary>
            The enterprise with the updated members can delete issues setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanDeleteIssuesSettingPayload.Message">
            <summary>
            A message confirming the result of updating the members can delete issues setting.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput">
            <summary>
            Autogenerated input type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput.EnterpriseId">
            <summary>
            The ID of the enterprise on which to set the members can delete repositories setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput.SettingValue">
            <summary>
            The value for the members can delete repositories setting on the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload">
            <summary>
            Autogenerated return type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload.Enterprise">
            <summary>
            The enterprise with the updated members can delete repositories setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload.Message">
            <summary>
            A message confirming the result of updating the members can delete repositories setting.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput">
            <summary>
            Autogenerated input type of UpdateEnterpriseMembersCanInviteCollaboratorsSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput.EnterpriseId">
            <summary>
            The ID of the enterprise on which to set the members can invite collaborators setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput.SettingValue">
            <summary>
            The value for the members can invite collaborators setting on the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload">
            <summary>
            Autogenerated return type of UpdateEnterpriseMembersCanInviteCollaboratorsSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload.Enterprise">
            <summary>
            The enterprise with the updated members can invite collaborators setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload.Message">
            <summary>
            A message confirming the result of updating the members can invite collaborators setting.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanMakePurchasesSettingInput">
            <summary>
            Autogenerated input type of UpdateEnterpriseMembersCanMakePurchasesSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanMakePurchasesSettingInput.EnterpriseId">
            <summary>
            The ID of the enterprise on which to set the members can make purchases setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanMakePurchasesSettingInput.SettingValue">
            <summary>
            The value for the members can make purchases setting on the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanMakePurchasesSettingInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanMakePurchasesSettingPayload">
            <summary>
            Autogenerated return type of UpdateEnterpriseMembersCanMakePurchasesSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanMakePurchasesSettingPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanMakePurchasesSettingPayload.Enterprise">
            <summary>
            The enterprise with the updated members can make purchases setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanMakePurchasesSettingPayload.Message">
            <summary>
            A message confirming the result of updating the members can make purchases setting.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput">
            <summary>
            Autogenerated input type of UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput.EnterpriseId">
            <summary>
            The ID of the enterprise on which to set the members can update protected branches setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput.SettingValue">
            <summary>
            The value for the members can update protected branches setting on the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload">
            <summary>
            Autogenerated return type of UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload.Enterprise">
            <summary>
            The enterprise with the updated members can update protected branches setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload.Message">
            <summary>
            A message confirming the result of updating the members can update protected branches setting.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput">
            <summary>
            Autogenerated input type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput.EnterpriseId">
            <summary>
            The ID of the enterprise on which to set the members can view dependency insights setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput.SettingValue">
            <summary>
            The value for the members can view dependency insights setting on the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload">
            <summary>
            Autogenerated return type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload.Enterprise">
            <summary>
            The enterprise with the updated members can view dependency insights setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload.Message">
            <summary>
            A message confirming the result of updating the members can view dependency insights setting.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseOrganizationProjectsSettingInput">
            <summary>
            Autogenerated input type of UpdateEnterpriseOrganizationProjectsSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseOrganizationProjectsSettingInput.EnterpriseId">
            <summary>
            The ID of the enterprise on which to set the organization projects setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseOrganizationProjectsSettingInput.SettingValue">
            <summary>
            The value for the organization projects setting on the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseOrganizationProjectsSettingInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseOrganizationProjectsSettingPayload">
            <summary>
            Autogenerated return type of UpdateEnterpriseOrganizationProjectsSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseOrganizationProjectsSettingPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseOrganizationProjectsSettingPayload.Enterprise">
            <summary>
            The enterprise with the updated organization projects setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseOrganizationProjectsSettingPayload.Message">
            <summary>
            A message confirming the result of updating the organization projects setting.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseOwnerOrganizationRoleInput">
            <summary>
            Autogenerated input type of UpdateEnterpriseOwnerOrganizationRole
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseOwnerOrganizationRoleInput.EnterpriseId">
            <summary>
            The ID of the Enterprise which the owner belongs to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseOwnerOrganizationRoleInput.OrganizationId">
            <summary>
            The ID of the organization for membership change.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseOwnerOrganizationRoleInput.OrganizationRole">
            <summary>
            The role to assume in the organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseOwnerOrganizationRoleInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseOwnerOrganizationRolePayload">
            <summary>
            Autogenerated return type of UpdateEnterpriseOwnerOrganizationRole
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseOwnerOrganizationRolePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseOwnerOrganizationRolePayload.Message">
            <summary>
            A message confirming the result of changing the owner's organization role.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseProfileInput">
            <summary>
            Autogenerated input type of UpdateEnterpriseProfile
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseProfileInput.EnterpriseId">
            <summary>
            The Enterprise ID to update.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseProfileInput.Name">
            <summary>
            The name of the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseProfileInput.Description">
            <summary>
            The description of the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseProfileInput.WebsiteUrl">
            <summary>
            The URL of the enterprise's website.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseProfileInput.Location">
            <summary>
            The location of the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseProfileInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseProfilePayload">
            <summary>
            Autogenerated return type of UpdateEnterpriseProfile
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseProfilePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseProfilePayload.Enterprise">
            <summary>
            The updated enterprise.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseRepositoryProjectsSettingInput">
            <summary>
            Autogenerated input type of UpdateEnterpriseRepositoryProjectsSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseRepositoryProjectsSettingInput.EnterpriseId">
            <summary>
            The ID of the enterprise on which to set the repository projects setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseRepositoryProjectsSettingInput.SettingValue">
            <summary>
            The value for the repository projects setting on the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseRepositoryProjectsSettingInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseRepositoryProjectsSettingPayload">
            <summary>
            Autogenerated return type of UpdateEnterpriseRepositoryProjectsSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseRepositoryProjectsSettingPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseRepositoryProjectsSettingPayload.Enterprise">
            <summary>
            The enterprise with the updated repository projects setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseRepositoryProjectsSettingPayload.Message">
            <summary>
            A message confirming the result of updating the repository projects setting.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseTeamDiscussionsSettingInput">
            <summary>
            Autogenerated input type of UpdateEnterpriseTeamDiscussionsSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseTeamDiscussionsSettingInput.EnterpriseId">
            <summary>
            The ID of the enterprise on which to set the team discussions setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseTeamDiscussionsSettingInput.SettingValue">
            <summary>
            The value for the team discussions setting on the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseTeamDiscussionsSettingInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseTeamDiscussionsSettingPayload">
            <summary>
            Autogenerated return type of UpdateEnterpriseTeamDiscussionsSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseTeamDiscussionsSettingPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseTeamDiscussionsSettingPayload.Enterprise">
            <summary>
            The enterprise with the updated team discussions setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseTeamDiscussionsSettingPayload.Message">
            <summary>
            A message confirming the result of updating the team discussions setting.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput">
            <summary>
            Autogenerated input type of UpdateEnterpriseTwoFactorAuthenticationRequiredSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput.EnterpriseId">
            <summary>
            The ID of the enterprise on which to set the two factor authentication required setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput.SettingValue">
            <summary>
            The value for the two factor authentication required setting on the enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload">
            <summary>
            Autogenerated return type of UpdateEnterpriseTwoFactorAuthenticationRequiredSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload.Enterprise">
            <summary>
            The enterprise with the updated two factor authentication required setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload.Message">
            <summary>
            A message confirming the result of updating the two factor authentication required setting.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnvironmentInput">
            <summary>
            Autogenerated input type of UpdateEnvironment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnvironmentInput.EnvironmentId">
            <summary>
            The node ID of the environment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnvironmentInput.WaitTimer">
            <summary>
            The wait timer in minutes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnvironmentInput.Reviewers">
            <summary>
            The ids of users or teams that can approve deployments to this environment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnvironmentInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateEnvironmentPayload">
            <summary>
            Autogenerated return type of UpdateEnvironment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnvironmentPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateEnvironmentPayload.Environment">
            <summary>
            The updated environment.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateIpAllowListEnabledSettingInput">
            <summary>
            Autogenerated input type of UpdateIpAllowListEnabledSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIpAllowListEnabledSettingInput.OwnerId">
            <summary>
            The ID of the owner on which to set the IP allow list enabled setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIpAllowListEnabledSettingInput.SettingValue">
            <summary>
            The value for the IP allow list enabled setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIpAllowListEnabledSettingInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateIpAllowListEnabledSettingPayload">
            <summary>
            Autogenerated return type of UpdateIpAllowListEnabledSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIpAllowListEnabledSettingPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIpAllowListEnabledSettingPayload.Owner">
            <summary>
            The IP allow list owner on which the setting was updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateIpAllowListEntryInput">
            <summary>
            Autogenerated input type of UpdateIpAllowListEntry
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIpAllowListEntryInput.IpAllowListEntryId">
            <summary>
            The ID of the IP allow list entry to update.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIpAllowListEntryInput.AllowListValue">
            <summary>
            An IP address or range of addresses in CIDR notation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIpAllowListEntryInput.Name">
            <summary>
            An optional name for the IP allow list entry.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIpAllowListEntryInput.IsActive">
            <summary>
            Whether the IP allow list entry is active when an IP allow list is enabled.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIpAllowListEntryInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateIpAllowListEntryPayload">
            <summary>
            Autogenerated return type of UpdateIpAllowListEntry
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIpAllowListEntryPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIpAllowListEntryPayload.IpAllowListEntry">
            <summary>
            The IP allow list entry that was updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateIpAllowListForInstalledAppsEnabledSettingInput">
            <summary>
            Autogenerated input type of UpdateIpAllowListForInstalledAppsEnabledSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIpAllowListForInstalledAppsEnabledSettingInput.OwnerId">
            <summary>
            The ID of the owner.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIpAllowListForInstalledAppsEnabledSettingInput.SettingValue">
            <summary>
            The value for the IP allow list configuration for installed GitHub Apps setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIpAllowListForInstalledAppsEnabledSettingInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateIpAllowListForInstalledAppsEnabledSettingPayload">
            <summary>
            Autogenerated return type of UpdateIpAllowListForInstalledAppsEnabledSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIpAllowListForInstalledAppsEnabledSettingPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIpAllowListForInstalledAppsEnabledSettingPayload.Owner">
            <summary>
            The IP allow list owner on which the setting was updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateIssueCommentInput">
            <summary>
            Autogenerated input type of UpdateIssueComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIssueCommentInput.Id">
            <summary>
            The ID of the IssueComment to modify.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIssueCommentInput.Body">
            <summary>
            The updated text of the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIssueCommentInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateIssueCommentPayload">
            <summary>
            Autogenerated return type of UpdateIssueComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIssueCommentPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIssueCommentPayload.IssueComment">
            <summary>
            The updated comment.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateIssueInput">
            <summary>
            Autogenerated input type of UpdateIssue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIssueInput.Id">
            <summary>
            The ID of the Issue to modify.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIssueInput.Title">
            <summary>
            The title for the issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIssueInput.Body">
            <summary>
            The body for the issue description.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIssueInput.AssigneeIds">
            <summary>
            An array of Node IDs of users for this issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIssueInput.MilestoneId">
            <summary>
            The Node ID of the milestone for this issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIssueInput.LabelIds">
            <summary>
            An array of Node IDs of labels for this issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIssueInput.State">
            <summary>
            The desired issue state.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIssueInput.ProjectIds">
            <summary>
            An array of Node IDs for projects associated with this issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIssueInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateIssuePayload">
            <summary>
            Autogenerated return type of UpdateIssue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIssuePayload.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIssuePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateIssuePayload.Issue">
            <summary>
            The issue.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateNotificationRestrictionSettingInput">
            <summary>
            Autogenerated input type of UpdateNotificationRestrictionSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateNotificationRestrictionSettingInput.OwnerId">
            <summary>
            The ID of the owner on which to set the restrict notifications setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateNotificationRestrictionSettingInput.SettingValue">
            <summary>
            The value for the restrict notifications setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateNotificationRestrictionSettingInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateNotificationRestrictionSettingPayload">
            <summary>
            Autogenerated return type of UpdateNotificationRestrictionSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateNotificationRestrictionSettingPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateNotificationRestrictionSettingPayload.Owner">
            <summary>
            The owner on which the setting was updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateOrganizationAllowPrivateRepositoryForkingSettingInput">
            <summary>
            Autogenerated input type of UpdateOrganizationAllowPrivateRepositoryForkingSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateOrganizationAllowPrivateRepositoryForkingSettingInput.OrganizationId">
            <summary>
            The ID of the organization on which to set the allow private repository forking setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateOrganizationAllowPrivateRepositoryForkingSettingInput.ForkingEnabled">
            <summary>
            Enable forking of private repositories in the organization?
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateOrganizationAllowPrivateRepositoryForkingSettingInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateOrganizationAllowPrivateRepositoryForkingSettingPayload">
            <summary>
            Autogenerated return type of UpdateOrganizationAllowPrivateRepositoryForkingSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateOrganizationAllowPrivateRepositoryForkingSettingPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateOrganizationAllowPrivateRepositoryForkingSettingPayload.Message">
            <summary>
            A message confirming the result of updating the allow private repository forking setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateOrganizationAllowPrivateRepositoryForkingSettingPayload.Organization">
            <summary>
            The organization with the updated allow private repository forking setting.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateOrganizationWebCommitSignoffSettingInput">
            <summary>
            Autogenerated input type of UpdateOrganizationWebCommitSignoffSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateOrganizationWebCommitSignoffSettingInput.OrganizationId">
            <summary>
            The ID of the organization on which to set the web commit signoff setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateOrganizationWebCommitSignoffSettingInput.WebCommitSignoffRequired">
            <summary>
            Enable signoff on web-based commits for repositories in the organization?
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateOrganizationWebCommitSignoffSettingInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateOrganizationWebCommitSignoffSettingPayload">
            <summary>
            Autogenerated return type of UpdateOrganizationWebCommitSignoffSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateOrganizationWebCommitSignoffSettingPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateOrganizationWebCommitSignoffSettingPayload.Message">
            <summary>
            A message confirming the result of updating the web commit signoff setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateOrganizationWebCommitSignoffSettingPayload.Organization">
            <summary>
            The organization with the updated web commit signoff setting.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateParameters">
            <summary>
            Only allow users with bypass permission to update matching refs.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateParameters.UpdateAllowsFetchAndMerge">
            <summary>
            Branch can pull changes from its upstream repository
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateParametersInput">
            <summary>
            Only allow users with bypass permission to update matching refs.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateParametersInput.UpdateAllowsFetchAndMerge">
            <summary>
            Branch can pull changes from its upstream repository
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateProjectCardInput">
            <summary>
            Autogenerated input type of UpdateProjectCard
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectCardInput.ProjectCardId">
            <summary>
            The ProjectCard ID to update.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectCardInput.IsArchived">
            <summary>
            Whether or not the ProjectCard should be archived
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectCardInput.Note">
            <summary>
            The note of ProjectCard.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectCardInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateProjectCardPayload">
            <summary>
            Autogenerated return type of UpdateProjectCard
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectCardPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectCardPayload.ProjectCard">
            <summary>
            The updated ProjectCard.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateProjectColumnInput">
            <summary>
            Autogenerated input type of UpdateProjectColumn
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectColumnInput.ProjectColumnId">
            <summary>
            The ProjectColumn ID to update.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectColumnInput.Name">
            <summary>
            The name of project column.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectColumnInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateProjectColumnPayload">
            <summary>
            Autogenerated return type of UpdateProjectColumn
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectColumnPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectColumnPayload.ProjectColumn">
            <summary>
            The updated project column.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateProjectInput">
            <summary>
            Autogenerated input type of UpdateProject
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectInput.ProjectId">
            <summary>
            The Project ID to update.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectInput.Name">
            <summary>
            The name of project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectInput.Body">
            <summary>
            The description of project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectInput.State">
            <summary>
            Whether the project is open or closed.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectInput.Public">
            <summary>
            Whether the project is public or not.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateProjectPayload">
            <summary>
            Autogenerated return type of UpdateProject
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectPayload.Project">
            <summary>
            The updated project.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateProjectV2DraftIssueInput">
            <summary>
            Autogenerated input type of UpdateProjectV2DraftIssue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2DraftIssueInput.DraftIssueId">
            <summary>
            The ID of the draft issue to update.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2DraftIssueInput.Title">
            <summary>
            The title of the draft issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2DraftIssueInput.Body">
            <summary>
            The body of the draft issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2DraftIssueInput.AssigneeIds">
            <summary>
            The IDs of the assignees of the draft issue.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2DraftIssueInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateProjectV2DraftIssuePayload">
            <summary>
            Autogenerated return type of UpdateProjectV2DraftIssue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2DraftIssuePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2DraftIssuePayload.DraftIssue">
            <summary>
            The draft issue updated in the project.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateProjectV2Input">
            <summary>
            Autogenerated input type of UpdateProjectV2
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2Input.ProjectId">
            <summary>
            The ID of the Project to update.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2Input.Title">
            <summary>
            Set the title of the project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2Input.ShortDescription">
            <summary>
            Set the short description of the project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2Input.Readme">
            <summary>
            Set the readme description of the project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2Input.Closed">
            <summary>
            Set the project to closed or open.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2Input.Public">
            <summary>
            Set the project to public or private.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2Input.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateProjectV2ItemFieldValueInput">
            <summary>
            Autogenerated input type of UpdateProjectV2ItemFieldValue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2ItemFieldValueInput.ProjectId">
            <summary>
            The ID of the Project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2ItemFieldValueInput.ItemId">
            <summary>
            The ID of the item to be updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2ItemFieldValueInput.FieldId">
            <summary>
            The ID of the field to be updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2ItemFieldValueInput.Value">
            <summary>
            The value which will be set on the field.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2ItemFieldValueInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateProjectV2ItemFieldValuePayload">
            <summary>
            Autogenerated return type of UpdateProjectV2ItemFieldValue
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2ItemFieldValuePayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2ItemFieldValuePayload.ProjectV2Item">
            <summary>
            The updated item.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateProjectV2ItemPositionInput">
            <summary>
            Autogenerated input type of UpdateProjectV2ItemPosition
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2ItemPositionInput.ProjectId">
            <summary>
            The ID of the Project.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2ItemPositionInput.ItemId">
            <summary>
            The ID of the item to be moved.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2ItemPositionInput.AfterId">
            <summary>
            The ID of the item to position this item after. If omitted or set to null the item will be moved to top.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2ItemPositionInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateProjectV2ItemPositionPayload">
            <summary>
            Autogenerated return type of UpdateProjectV2ItemPosition
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2ItemPositionPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.UpdateProjectV2ItemPositionPayload.Items(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The items in the new order
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateProjectV2Payload">
            <summary>
            Autogenerated return type of UpdateProjectV2
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2Payload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateProjectV2Payload.ProjectV2">
            <summary>
            The updated Project.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdatePullRequestBranchInput">
            <summary>
            Autogenerated input type of UpdatePullRequestBranch
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestBranchInput.PullRequestId">
            <summary>
            The Node ID of the pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestBranchInput.ExpectedHeadOid">
            <summary>
            The head ref oid for the upstream branch.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestBranchInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdatePullRequestBranchPayload">
            <summary>
            Autogenerated return type of UpdatePullRequestBranch
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestBranchPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestBranchPayload.PullRequest">
            <summary>
            The updated pull request.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdatePullRequestInput">
            <summary>
            Autogenerated input type of UpdatePullRequest
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestInput.PullRequestId">
            <summary>
            The Node ID of the pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestInput.BaseRefName">
            <summary>
            The name of the branch you want your changes pulled into. This should be an existing branch
            on the current repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestInput.Title">
            <summary>
            The title of the pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestInput.Body">
            <summary>
            The contents of the pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestInput.State">
            <summary>
            The target state of the pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestInput.MaintainerCanModify">
            <summary>
            Indicates whether maintainers can modify the pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestInput.AssigneeIds">
            <summary>
            An array of Node IDs of users for this pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestInput.MilestoneId">
            <summary>
            The Node ID of the milestone for this pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestInput.LabelIds">
            <summary>
            An array of Node IDs of labels for this pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestInput.ProjectIds">
            <summary>
            An array of Node IDs for projects associated with this pull request.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdatePullRequestPayload">
            <summary>
            Autogenerated return type of UpdatePullRequest
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestPayload.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestPayload.PullRequest">
            <summary>
            The updated pull request.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdatePullRequestReviewCommentInput">
            <summary>
            Autogenerated input type of UpdatePullRequestReviewComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestReviewCommentInput.PullRequestReviewCommentId">
            <summary>
            The Node ID of the comment to modify.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestReviewCommentInput.Body">
            <summary>
            The text of the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestReviewCommentInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdatePullRequestReviewCommentPayload">
            <summary>
            Autogenerated return type of UpdatePullRequestReviewComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestReviewCommentPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestReviewCommentPayload.PullRequestReviewComment">
            <summary>
            The updated comment.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdatePullRequestReviewInput">
            <summary>
            Autogenerated input type of UpdatePullRequestReview
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestReviewInput.PullRequestReviewId">
            <summary>
            The Node ID of the pull request review to modify.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestReviewInput.Body">
            <summary>
            The contents of the pull request review body.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestReviewInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdatePullRequestReviewPayload">
            <summary>
            Autogenerated return type of UpdatePullRequestReview
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestReviewPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdatePullRequestReviewPayload.PullRequestReview">
            <summary>
            The updated pull request review.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateRefInput">
            <summary>
            Autogenerated input type of UpdateRef
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRefInput.RefId">
            <summary>
            The Node ID of the Ref to be updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRefInput.Oid">
            <summary>
            The GitObjectID that the Ref shall be updated to target.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRefInput.Force">
            <summary>
            Permit updates of branch Refs that are not fast-forwards?
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRefInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateRefPayload">
            <summary>
            Autogenerated return type of UpdateRef
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRefPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRefPayload.Ref">
            <summary>
            The updated Ref.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateRepositoryInput">
            <summary>
            Autogenerated input type of UpdateRepository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryInput.RepositoryId">
            <summary>
            The ID of the repository to update.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryInput.Name">
            <summary>
            The new name of the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryInput.Description">
            <summary>
            A new description for the repository. Pass an empty string to erase the existing description.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryInput.Template">
            <summary>
            Whether this repository should be marked as a template such that anyone who can access it can create new repositories with the same files and directory structure.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryInput.HomepageUrl">
            <summary>
            The URL for a web page about this repository. Pass an empty string to erase the existing URL.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryInput.HasWikiEnabled">
            <summary>
            Indicates if the repository should have the wiki feature enabled.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryInput.HasIssuesEnabled">
            <summary>
            Indicates if the repository should have the issues feature enabled.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryInput.HasProjectsEnabled">
            <summary>
            Indicates if the repository should have the project boards feature enabled.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryInput.HasDiscussionsEnabled">
            <summary>
            Indicates if the repository should have the discussions feature enabled.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateRepositoryPayload">
            <summary>
            Autogenerated return type of UpdateRepository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryPayload.Repository">
            <summary>
            The updated repository.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateRepositoryRulesetInput">
            <summary>
            Autogenerated input type of UpdateRepositoryRuleset
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryRulesetInput.RepositoryRulesetId">
            <summary>
            The global relay id of the repository ruleset to be updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryRulesetInput.Name">
            <summary>
            The name of the ruleset.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryRulesetInput.Target">
            <summary>
            The target of the ruleset.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryRulesetInput.Rules">
            <summary>
            The list of rules for this ruleset
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryRulesetInput.Conditions">
            <summary>
            The list of conditions for this ruleset
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryRulesetInput.Enforcement">
            <summary>
            The enforcement level for this ruleset
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryRulesetInput.BypassMode">
            <summary>
            The bypass mode for this ruleset
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryRulesetInput.BypassActorIds">
            <summary>
            A list of Team or App IDs allowed to bypass rules in this ruleset.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryRulesetInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateRepositoryRulesetPayload">
            <summary>
            Autogenerated return type of UpdateRepositoryRuleset
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryRulesetPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryRulesetPayload.Ruleset">
            <summary>
            The newly created Ruleset.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateRepositoryWebCommitSignoffSettingInput">
            <summary>
            Autogenerated input type of UpdateRepositoryWebCommitSignoffSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryWebCommitSignoffSettingInput.RepositoryId">
            <summary>
            The ID of the repository to update.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryWebCommitSignoffSettingInput.WebCommitSignoffRequired">
            <summary>
            Indicates if the repository should require signoff on web-based commits.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryWebCommitSignoffSettingInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateRepositoryWebCommitSignoffSettingPayload">
            <summary>
            Autogenerated return type of UpdateRepositoryWebCommitSignoffSetting
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryWebCommitSignoffSettingPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryWebCommitSignoffSettingPayload.Message">
            <summary>
            A message confirming the result of updating the web commit signoff setting.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateRepositoryWebCommitSignoffSettingPayload.Repository">
            <summary>
            The updated repository.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateSponsorshipPreferencesInput">
            <summary>
            Autogenerated input type of UpdateSponsorshipPreferences
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateSponsorshipPreferencesInput.SponsorId">
            <summary>
            The ID of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorLogin is not given.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateSponsorshipPreferencesInput.SponsorLogin">
            <summary>
            The username of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorId is not given.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateSponsorshipPreferencesInput.SponsorableId">
            <summary>
            The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateSponsorshipPreferencesInput.SponsorableLogin">
            <summary>
            The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateSponsorshipPreferencesInput.ReceiveEmails">
            <summary>
            Whether the sponsor should receive email updates from the sponsorable.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateSponsorshipPreferencesInput.PrivacyLevel">
            <summary>
            Specify whether others should be able to see that the sponsor is sponsoring the sponsorable. Public visibility still does not reveal which tier is used.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateSponsorshipPreferencesInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateSponsorshipPreferencesPayload">
            <summary>
            Autogenerated return type of UpdateSponsorshipPreferences
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateSponsorshipPreferencesPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateSponsorshipPreferencesPayload.Sponsorship">
            <summary>
            The sponsorship that was updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateSubscriptionInput">
            <summary>
            Autogenerated input type of UpdateSubscription
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateSubscriptionInput.SubscribableId">
            <summary>
            The Node ID of the subscribable object to modify.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateSubscriptionInput.State">
            <summary>
            The new state of the subscription.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateSubscriptionInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateSubscriptionPayload">
            <summary>
            Autogenerated return type of UpdateSubscription
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateSubscriptionPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateSubscriptionPayload.Subscribable">
            <summary>
            The input subscribable entity.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateTeamDiscussionCommentInput">
            <summary>
            Autogenerated input type of UpdateTeamDiscussionComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTeamDiscussionCommentInput.Id">
            <summary>
            The ID of the comment to modify.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTeamDiscussionCommentInput.Body">
            <summary>
            The updated text of the comment.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTeamDiscussionCommentInput.BodyVersion">
            <summary>
            The current version of the body content.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTeamDiscussionCommentInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateTeamDiscussionCommentPayload">
            <summary>
            Autogenerated return type of UpdateTeamDiscussionComment
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTeamDiscussionCommentPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTeamDiscussionCommentPayload.TeamDiscussionComment">
            <summary>
            The updated comment.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateTeamDiscussionInput">
            <summary>
            Autogenerated input type of UpdateTeamDiscussion
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTeamDiscussionInput.Id">
            <summary>
            The Node ID of the discussion to modify.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTeamDiscussionInput.Title">
            <summary>
            The updated title of the discussion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTeamDiscussionInput.Body">
            <summary>
            The updated text of the discussion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTeamDiscussionInput.BodyVersion">
            <summary>
            The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTeamDiscussionInput.Pinned">
            <summary>
            If provided, sets the pinned state of the updated discussion.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTeamDiscussionInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateTeamDiscussionPayload">
            <summary>
            Autogenerated return type of UpdateTeamDiscussion
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTeamDiscussionPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTeamDiscussionPayload.TeamDiscussion">
            <summary>
            The updated discussion.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateTeamsRepositoryInput">
            <summary>
            Autogenerated input type of UpdateTeamsRepository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTeamsRepositoryInput.RepositoryId">
            <summary>
            Repository ID being granted access to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTeamsRepositoryInput.TeamIds">
            <summary>
            A list of teams being granted access. Limit: 10
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTeamsRepositoryInput.Permission">
            <summary>
            Permission that should be granted to the teams.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTeamsRepositoryInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateTeamsRepositoryPayload">
            <summary>
            Autogenerated return type of UpdateTeamsRepository
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTeamsRepositoryPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTeamsRepositoryPayload.Repository">
            <summary>
            The repository that was updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTeamsRepositoryPayload.Teams">
            <summary>
            The teams granted permission on the repository.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateTopicsInput">
            <summary>
            Autogenerated input type of UpdateTopics
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTopicsInput.RepositoryId">
            <summary>
            The Node ID of the repository.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTopicsInput.TopicNames">
            <summary>
            An array of topic names.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTopicsInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UpdateTopicsPayload">
            <summary>
            Autogenerated return type of UpdateTopics
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTopicsPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTopicsPayload.InvalidTopicNames">
            <summary>
            Names of the provided topics that are not valid.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UpdateTopicsPayload.Repository">
            <summary>
            The updated repository.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.User">
            <summary>
            A user is an individual's account on GitHub that owns repositories and can make new content.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.AnyPinnableItems(System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.PinnableItemType}})">
            <summary>
            Determine if this repository owner has any items that can be pinned to their profile.
            </summary>
            <param name="type">Filter to only a particular kind of pinnable item.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.AvatarUrl(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}})">
            <summary>
            A URL pointing to the user's public avatar.
            </summary>
            <param name="size">The size of the resulting square image.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.Bio">
            <summary>
            The user's public profile bio.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.BioHTML">
            <summary>
            The user's public profile bio as HTML.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.CanReceiveOrganizationEmailsWhenNotificationsRestricted(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Could this user receive email notifications, if the organization had notification restrictions enabled?
            </summary>
            <param name="login">The login of the organization to check.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.CommitComments(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of commit comments made by this user.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.Company">
            <summary>
            The user's public profile company.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.CompanyHTML">
            <summary>
            The user's public profile company as HTML.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.ContributionsCollection(System.Nullable{Octokit.GraphQL.Core.Arg{System.DateTimeOffset}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.ID}},System.Nullable{Octokit.GraphQL.Core.Arg{System.DateTimeOffset}})">
            <summary>
            The collection of contributions this user has made to different repositories.
            </summary>
            <param name="from">Only contributions made at this time or later will be counted. If omitted, defaults to a year ago.</param>
            <param name="organizationID">The ID of the organization used to filter contributions.</param>
            <param name="to">Only contributions made before and up to (including) this time will be counted. If omitted, defaults to the current time or one year from the provided from argument.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.Email">
            <summary>
            The user's publicly visible profile email.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.EstimatedNextSponsorsPayoutInCents">
            <summary>
            The estimated next GitHub Sponsors payout for this user/organization in cents (USD).
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.Followers(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of users the given user is followed by.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.Following(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of users the given user is following.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.Gist(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Find gist by repo name.
            </summary>
            <param name="name">The gist name to find.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.GistComments(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of gist comments made by this user.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.Gists(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.GistOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.GistPrivacy}})">
            <summary>
            A list of the Gists the user has created.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for gists returned from the connection</param>
            <param name="privacy">Filters Gists according to privacy.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.HasSponsorsListing">
            <summary>
            True if this user/organization has a GitHub Sponsors listing.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.Hovercard(System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.ID}})">
            <summary>
            The hovercard information for this user in a given context
            </summary>
            <param name="primarySubjectId">The ID of the subject to get the hovercard in the context of</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.InteractionAbility">
            <summary>
            The interaction ability settings for this user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.IsBountyHunter">
            <summary>
            Whether or not this user is a participant in the GitHub Security Bug Bounty.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.IsCampusExpert">
            <summary>
            Whether or not this user is a participant in the GitHub Campus Experts Program.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.IsDeveloperProgramMember">
            <summary>
            Whether or not this user is a GitHub Developer Program member.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.IsEmployee">
            <summary>
            Whether or not this user is a GitHub employee.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.IsFollowingViewer">
            <summary>
            Whether or not this user is following the viewer. Inverse of viewerIsFollowing
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.IsGitHubStar">
            <summary>
            Whether or not this user is a member of the GitHub Stars Program.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.IsHireable">
            <summary>
            Whether or not the user has marked themselves as for hire.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.IsSiteAdmin">
            <summary>
            Whether or not this user is a site administrator.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.IsSponsoredBy(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Whether the given account is sponsoring this user/organization.
            </summary>
            <param name="accountLogin">The target account's login.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.IsSponsoringViewer">
            <summary>
            True if the viewer is sponsored by this user/organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.IsViewer">
            <summary>
            Whether or not this user is the viewing user.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.IssueComments(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.IssueCommentOrder}})">
            <summary>
            A list of issue comments made by this user.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for issue comments returned from the connection.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.Issues(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.IssueFilters}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.IssueOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.IssueState}}})">
            <summary>
            A list of issues associated with this user.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="filterBy">Filtering options for issues returned from the connection.</param>
            <param name="labels">A list of label names to filter the pull requests by.</param>
            <param name="orderBy">Ordering options for issues returned from the connection.</param>
            <param name="states">A list of states to filter the issues by.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.ItemShowcase">
            <summary>
            Showcases a selection of repositories and gists that the profile owner has either curated or that have been selected automatically based on popularity.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.Location">
            <summary>
            The user's public profile location.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.Login">
            <summary>
            The username used to login.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.MonthlyEstimatedSponsorsIncomeInCents">
            <summary>
            The estimated monthly GitHub Sponsors income for this user/organization in cents (USD).
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.Name">
            <summary>
            The user's public profile name.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.Organization(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Find an organization by its login that the user belongs to.
            </summary>
            <param name="login">The login of the organization to find.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.OrganizationVerifiedDomainEmails(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Verified email addresses that match verified domains for a specified organization the user is a member of.
            </summary>
            <param name="login">The login of the organization to match verified domains from.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.Organizations(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.OrganizationOrder}})">
            <summary>
            A list of organizations the user belongs to.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for the User's organizations.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.Packages(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.PackageOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.PackageType}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.ID}})">
            <summary>
            A list of packages under the owner.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="names">Find packages by their names.</param>
            <param name="orderBy">Ordering of the returned packages.</param>
            <param name="packageType">Filter registry package by type.</param>
            <param name="repositoryId">Find packages in a repository by ID.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.PinnableItems(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.PinnableItemType}}})">
            <summary>
            A list of repositories and gists this profile owner can pin to their profile.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="types">Filter the types of pinnable items that are returned.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.PinnedItems(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.PinnableItemType}}})">
            <summary>
            A list of repositories and gists this profile owner has pinned to their profile
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="types">Filter the types of pinned items that are returned.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.PinnedItemsRemaining">
            <summary>
            Returns how many more items this profile owner can pin to their profile.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.Project(Octokit.GraphQL.Core.Arg{System.Int32})">
            <summary>
            Find project by number.
            </summary>
            <param name="number">The project number to find.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.ProjectV2(Octokit.GraphQL.Core.Arg{System.Int32})">
            <summary>
            Find a project by number.
            </summary>
            <param name="number">The project number.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.Projects(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ProjectOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.ProjectState}}})">
            <summary>
            A list of projects under the owner.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for projects returned from the connection</param>
            <param name="search">Query to search projects by, currently only searching by name.</param>
            <param name="states">A list of states to filter the projects by.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.ProjectsResourcePath">
            <summary>
            The HTTP path listing user's projects
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.ProjectsUrl">
            <summary>
            The HTTP URL listing user's projects
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.ProjectsV2(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ProjectV2Order}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of projects under the owner.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">How to order the returned projects.</param>
            <param name="query">A project to search for under the the owner.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.Pronouns">
            <summary>
            The user's profile pronouns
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.PublicKeys(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            A list of public keys associated with this user.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.PullRequests(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.IssueOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.PullRequestState}}})">
            <summary>
            A list of pull requests associated with this user.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="baseRefName">The base ref name to filter the pull requests by.</param>
            <param name="headRefName">The head ref name to filter the pull requests by.</param>
            <param name="labels">A list of label names to filter the pull requests by.</param>
            <param name="orderBy">Ordering options for pull requests returned from the connection.</param>
            <param name="states">A list of states to filter the pull requests by.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.RecentProjects(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            Recent projects that this user has modified in the context of the owner.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.Repositories(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.Nullable{Octokit.GraphQL.Model.RepositoryAffiliation}}}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RepositoryOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.Nullable{Octokit.GraphQL.Model.RepositoryAffiliation}}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RepositoryPrivacy}})">
            <summary>
            A list of repositories that the user owns.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="affiliations">Array of viewer's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the current viewer owns.</param>
            <param name="isFork">If non-null, filters repositories according to whether they are forks of another repository</param>
            <param name="isLocked">If non-null, filters repositories according to whether they have been locked</param>
            <param name="orderBy">Ordering options for repositories returned from the connection</param>
            <param name="ownerAffiliations">Array of owner's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the organization or user being viewed owns.</param>
            <param name="privacy">If non-null, filters repositories according to privacy</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.RepositoriesContributedTo(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.Nullable{Octokit.GraphQL.Model.RepositoryContributionType}}}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RepositoryOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RepositoryPrivacy}})">
            <summary>
            A list of repositories that the user recently contributed to.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="contributionTypes">If non-null, include only the specified types of contributions. The GitHub.com UI uses [COMMIT, ISSUE, PULL_REQUEST, REPOSITORY]</param>
            <param name="includeUserRepositories">If true, include user repositories</param>
            <param name="isLocked">If non-null, filters repositories according to whether they have been locked</param>
            <param name="orderBy">Ordering options for repositories returned from the connection</param>
            <param name="privacy">If non-null, filters repositories according to privacy</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.Repository(Octokit.GraphQL.Core.Arg{System.String},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            Find Repository.
            </summary>
            <param name="name">Name of Repository to find.</param>
            <param name="followRenames">Follow repository renames. If disabled, a repository referenced by its old name will return an error.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.RepositoryDiscussionComments(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.ID}})">
            <summary>
            Discussion comments this user has authored.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="onlyAnswers">Filter discussion comments to only those that were marked as the answer</param>
            <param name="repositoryId">Filter discussion comments to only those in a specific repository.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.RepositoryDiscussions(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DiscussionOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.ID}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.DiscussionState}}})">
            <summary>
            Discussions this user has started.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="answered">Filter discussions to only those that have been answered or not. Defaults to including both answered and unanswered discussions.</param>
            <param name="orderBy">Ordering options for discussions returned from the connection.</param>
            <param name="repositoryId">Filter discussions to only those in a specific repository.</param>
            <param name="states">A list of states to filter the discussions by.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.ResourcePath">
            <summary>
            The HTTP path for this user
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.SavedReplies(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SavedReplyOrder}})">
            <summary>
            Replies this user has saved
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">The field to order saved replies by.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.SocialAccounts(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The user's social media accounts, ordered as they appear on the user's profile.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.Sponsoring(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorOrder}})">
            <summary>
            List of users and organizations this entity is sponsoring.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for the users and organizations returned from the connection.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.Sponsors(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.ID}})">
            <summary>
            List of sponsors for this user or organization.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for sponsors returned from the connection.</param>
            <param name="tierId">If given, will filter for sponsors at the given tier. Will only return sponsors whose tier the viewer is permitted to see.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.SponsorsActivities(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.SponsorsActivityAction}}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorsActivityOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorsActivityPeriod}},System.Nullable{Octokit.GraphQL.Core.Arg{System.DateTimeOffset}},System.Nullable{Octokit.GraphQL.Core.Arg{System.DateTimeOffset}})">
            <summary>
            Events involving this sponsorable, such as new sponsorships.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="actions">Filter activities to only the specified actions.</param>
            <param name="includeAsSponsor">Whether to include those events where this sponsorable acted as the sponsor. Defaults to only including events where this sponsorable was the recipient of a sponsorship.</param>
            <param name="orderBy">Ordering options for activity returned from the connection.</param>
            <param name="period">Filter activities returned to only those that occurred in the most recent specified time period. Set to ALL to avoid filtering by when the activity occurred. Will be ignored if `since` or `until` is given.</param>
            <param name="since">Filter activities to those that occurred on or after this time.</param>
            <param name="until">Filter activities to those that occurred before this time.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.SponsorsListing">
            <summary>
            The GitHub Sponsors listing for this user or organization.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.SponsorshipForViewerAsSponsor(System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            The sponsorship from the viewer to this user/organization; that is, the sponsorship where you're the sponsor.
            </summary>
            <param name="activeOnly">Whether to return the sponsorship only if it's still active. Pass false to get the viewer's sponsorship back even if it has been cancelled.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.SponsorshipForViewerAsSponsorable(System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            The sponsorship from this user/organization to the viewer; that is, the sponsorship you're receiving.
            </summary>
            <param name="activeOnly">Whether to return the sponsorship only if it's still active. Pass false to get the sponsorship back even if it has been cancelled.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.SponsorshipNewsletters(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorshipNewsletterOrder}})">
            <summary>
            List of sponsorship updates sent from this sponsorable to sponsors.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for sponsorship updates returned from the connection.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.SponsorshipsAsMaintainer(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorshipOrder}})">
            <summary>
            The sponsorships where this user or organization is the maintainer receiving the funds.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="activeOnly">Whether to include only sponsorships that are active right now, versus all sponsorships this maintainer has ever received.</param>
            <param name="includePrivate">Whether or not to include private sponsorships in the result set</param>
            <param name="orderBy">Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.SponsorshipsAsSponsor(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorshipOrder}})">
            <summary>
            The sponsorships where this user or organization is the funder.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="activeOnly">Whether to include only sponsorships that are active right now, versus all sponsorships this sponsor has ever made.</param>
            <param name="maintainerLogins">Filter sponsorships returned to those for the specified maintainers. That is, the recipient of the sponsorship is a user or organization with one of the given logins.</param>
            <param name="orderBy">Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer.</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.StarredRepositories(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.StarOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            Repositories the user has starred.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Order for connection</param>
            <param name="ownedByViewer">Filters starred repositories to only return repositories owned by the viewer.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.Status">
            <summary>
            The user's description of what they're currently doing.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.TopRepositories(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RepositoryOrder},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.DateTimeOffset}})">
            <summary>
            Repositories the user has contributed to, ordered by contribution rank, plus repositories the user has created
            </summary>
            <param name="orderBy">Ordering options for repositories returned from the connection</param>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="since">How far back in time to fetch contributed repositories</param>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.TotalSponsorshipAmountAsSponsorInCents(System.Nullable{Octokit.GraphQL.Core.Arg{System.DateTimeOffset}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{System.DateTimeOffset}})">
            <summary>
            The amount in United States cents (e.g., 500 = $5.00 USD) that this entity has spent on GitHub to fund sponsorships. Only returns a value when viewed by the user themselves or by a user who can manage sponsorships for the requested organization.
            </summary>
            <param name="since">Filter payments to those that occurred on or after this time.</param>
            <param name="sponsorableLogins">Filter payments to those made to the users or organizations with the specified usernames.</param>
            <param name="until">Filter payments to those that occurred before this time.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.TwitterUsername">
            <summary>
            The user's Twitter username.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.Url">
            <summary>
            The HTTP URL for this user
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.ViewerCanChangePinnedItems">
            <summary>
            Can the viewer pin repositories and gists to the profile?
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.ViewerCanCreateProjects">
            <summary>
            Can the current viewer create new projects on this owner.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.ViewerCanFollow">
            <summary>
            Whether or not the viewer is able to follow the user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.ViewerCanSponsor">
            <summary>
            Whether or not the viewer is able to sponsor this user/organization.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.ViewerIsFollowing">
            <summary>
            Whether or not this user is followed by the viewer. Inverse of isFollowingViewer.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.ViewerIsSponsoring">
            <summary>
            True if the viewer is sponsoring this user/organization.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.User.Watching(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.Nullable{Octokit.GraphQL.Model.RepositoryAffiliation}}}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RepositoryOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.Nullable{Octokit.GraphQL.Model.RepositoryAffiliation}}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RepositoryPrivacy}})">
            <summary>
            A list of repositories the given user is watching.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="affiliations">Affiliation options for repositories returned from the connection. If none specified, the results will include repositories for which the current viewer is an owner or collaborator, or member.</param>
            <param name="isLocked">If non-null, filters repositories according to whether they have been locked</param>
            <param name="orderBy">Ordering options for repositories returned from the connection</param>
            <param name="ownerAffiliations">Array of owner's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the organization or user being viewed owns.</param>
            <param name="privacy">If non-null, filters repositories according to privacy</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.User.WebsiteUrl">
            <summary>
            A URL pointing to the user's public website/blog.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UserBlockDuration">
            <summary>
            The possible durations that a user can be blocked for.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.UserBlockDuration.OneDay">
            <summary>
            The user was blocked for 1 day
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.UserBlockDuration.ThreeDays">
            <summary>
            The user was blocked for 3 days
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.UserBlockDuration.OneWeek">
            <summary>
            The user was blocked for 7 days
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.UserBlockDuration.OneMonth">
            <summary>
            The user was blocked for 30 days
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.UserBlockDuration.Permanent">
            <summary>
            The user was blocked permanently
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UserBlockedEvent">
            <summary>
            Represents a 'user_blocked' event on a given user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserBlockedEvent.Actor">
            <summary>
            Identifies the actor who performed the event.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserBlockedEvent.BlockDuration">
            <summary>
            Number of days that the user was blocked for.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserBlockedEvent.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserBlockedEvent.Subject">
            <summary>
            The user who was blocked.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UserConnection">
            <summary>
            The connection type for User.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UserContentEdit">
            <summary>
            An edit on user content
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserContentEdit.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserContentEdit.DeletedAt">
            <summary>
            Identifies the date and time when the object was deleted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserContentEdit.DeletedBy">
            <summary>
            The actor who deleted this content
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserContentEdit.Diff">
            <summary>
            A summary of the changes for this edit
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserContentEdit.EditedAt">
            <summary>
            When this content was edited
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserContentEdit.Editor">
            <summary>
            The actor who edited this content
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserContentEdit.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UserContentEditConnection">
            <summary>
            A list of edits to content.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserContentEditConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserContentEditConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserContentEditConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserContentEditConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UserContentEditEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserContentEditEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserContentEditEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UserEdge">
            <summary>
            Represents a user.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UserEmailMetadata">
            <summary>
            Email attributes from External Identity
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserEmailMetadata.Primary">
            <summary>
            Boolean to identify primary emails
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserEmailMetadata.Type">
            <summary>
            Type of email
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserEmailMetadata.Value">
            <summary>
            Email id
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UserStatus">
            <summary>
            The user's description of what they're currently doing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserStatus.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserStatus.Emoji">
            <summary>
            An emoji summarizing the user's status.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserStatus.EmojiHTML">
            <summary>
            The status emoji as HTML.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserStatus.ExpiresAt">
            <summary>
            If set, the status will not be shown after this date.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserStatus.IndicatesLimitedAvailability">
            <summary>
            Whether this status indicates the user is not fully available on GitHub.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserStatus.Message">
            <summary>
            A brief message describing what the user is doing.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserStatus.Organization">
            <summary>
            The organization whose members can see this status. If null, this status is publicly visible.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserStatus.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserStatus.User">
            <summary>
            The user who has this status.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UserStatusConnection">
            <summary>
            The connection type for UserStatus.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserStatusConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserStatusConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserStatusConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserStatusConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UserStatusEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserStatusEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserStatusEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UserStatusOrder">
            <summary>
            Ordering options for user status connections.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserStatusOrder.Field">
            <summary>
            The field to order user statuses by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.UserStatusOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.UserStatusOrderField">
            <summary>
            Properties by which user status connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.UserStatusOrderField.UpdatedAt">
            <summary>
            Order user statuses by when they were updated.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.VerifiableDomain">
            <summary>
            A domain that can be verified or approved for an organization or an enterprise.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifiableDomain.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifiableDomain.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifiableDomain.DnsHostName">
            <summary>
            The DNS host name that should be used for verification.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifiableDomain.Domain">
            <summary>
            The unicode encoded domain.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifiableDomain.HasFoundHostName">
            <summary>
            Whether a TXT record for verification with the expected host name was found.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifiableDomain.HasFoundVerificationToken">
            <summary>
            Whether a TXT record for verification with the expected verification token was found.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifiableDomain.IsApproved">
            <summary>
            Whether or not the domain is approved.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifiableDomain.IsRequiredForPolicyEnforcement">
            <summary>
            Whether this domain is required to exist for an organization or enterprise policy to be enforced.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifiableDomain.IsVerified">
            <summary>
            Whether or not the domain is verified.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifiableDomain.Owner">
            <summary>
            The owner of the domain.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifiableDomain.PunycodeEncodedDomain">
            <summary>
            The punycode encoded domain.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifiableDomain.TokenExpirationTime">
            <summary>
            The time that the current verification token will expire.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifiableDomain.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifiableDomain.VerificationToken">
            <summary>
            The current verification token for the domain.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.VerifiableDomainConnection">
            <summary>
            The connection type for VerifiableDomain.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifiableDomainConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifiableDomainConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifiableDomainConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifiableDomainConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.VerifiableDomainEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifiableDomainEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifiableDomainEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.VerifiableDomainOrder">
            <summary>
            Ordering options for verifiable domain connections.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifiableDomainOrder.Field">
            <summary>
            The field to order verifiable domains by.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifiableDomainOrder.Direction">
            <summary>
            The ordering direction.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.VerifiableDomainOrderField">
            <summary>
            Properties by which verifiable domain connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.VerifiableDomainOrderField.Domain">
            <summary>
            Order verifiable domains by the domain name.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.VerifiableDomainOrderField.CreatedAt">
            <summary>
            Order verifiable domains by their creation date.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.VerifiableDomainOwner">
            <summary>
            Types that can own a verifiable domain.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.VerifiableDomainOwner.Selector`1.Enterprise(System.Func{Octokit.GraphQL.Model.Enterprise,`0})">
            <summary>
            An account to manage multiple organizations with consolidated policy and billing.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.VerifiableDomainOwner.Selector`1.Organization(System.Func{Octokit.GraphQL.Model.Organization,`0})">
            <summary>
            An account on GitHub, with one or more owners, that has repositories, members and teams.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.VerifyVerifiableDomainInput">
            <summary>
            Autogenerated input type of VerifyVerifiableDomain
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifyVerifiableDomainInput.Id">
            <summary>
            The ID of the verifiable domain to verify.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifyVerifiableDomainInput.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.VerifyVerifiableDomainPayload">
            <summary>
            Autogenerated return type of VerifyVerifiableDomain
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifyVerifiableDomainPayload.ClientMutationId">
            <summary>
            A unique identifier for the client performing the mutation.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.VerifyVerifiableDomainPayload.Domain">
            <summary>
            The verifiable domain that was verified.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.ViewerHovercardContext">
            <summary>
            A hovercard context with a message describing how the viewer is related.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ViewerHovercardContext.Message">
            <summary>
            A string describing this context
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ViewerHovercardContext.Octicon">
            <summary>
            An octicon to accompany this context
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.ViewerHovercardContext.Viewer">
            <summary>
            Identifies the user who is related to this context.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.IVotable">
            <summary>
            A subject that may be upvoted.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IVotable.UpvoteCount">
            <summary>
            Number of upvotes that this subject has received.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IVotable.ViewerCanUpvote">
            <summary>
            Whether or not the current user can add or remove an upvote on this subject.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.IVotable.ViewerHasUpvoted">
            <summary>
            Whether or not the current user has already upvoted this subject.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.Workflow">
            <summary>
            A workflow contains meta information about an Actions workflow file.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Workflow.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Workflow.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Workflow.Name">
            <summary>
            The name of the workflow.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Workflow.ResourcePath">
            <summary>
            The HTTP path for this workflow
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.Workflow.Runs(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.WorkflowRunOrder}})">
            <summary>
            The runs of the workflow.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="orderBy">Ordering options for the connection</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.Workflow.State">
            <summary>
            The state of the workflow.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Workflow.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.Workflow.Url">
            <summary>
            The HTTP URL for this workflow
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.WorkflowRun">
            <summary>
            A workflow run.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.WorkflowRun.CheckSuite">
            <summary>
            The check suite this workflow run belongs to.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.WorkflowRun.CreatedAt">
            <summary>
            Identifies the date and time when the object was created.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.WorkflowRun.DatabaseId">
            <summary>
            Identifies the primary key from the database.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.WorkflowRun.DeploymentReviews(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The log of deployment reviews
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.WorkflowRun.Event">
            <summary>
            The event that triggered the workflow run
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Model.WorkflowRun.PendingDeploymentRequests(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            The pending deployment requests of all check runs in this workflow run
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="P:Octokit.GraphQL.Model.WorkflowRun.ResourcePath">
            <summary>
            The HTTP path for this workflow run
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.WorkflowRun.RunNumber">
            <summary>
            A number that uniquely identifies this workflow run in its parent workflow.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.WorkflowRun.UpdatedAt">
            <summary>
            Identifies the date and time when the object was last updated.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.WorkflowRun.Url">
            <summary>
            The HTTP URL for this workflow run
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.WorkflowRun.Workflow">
            <summary>
            The workflow executed in this workflow run.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.WorkflowRunConnection">
            <summary>
            The connection type for WorkflowRun.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.WorkflowRunConnection.Edges">
            <summary>
            A list of edges.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.WorkflowRunConnection.Nodes">
            <summary>
            A list of nodes.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.WorkflowRunConnection.PageInfo">
            <summary>
            Information to aid in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.WorkflowRunConnection.TotalCount">
            <summary>
            Identifies the total count of items in the connection.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.WorkflowRunEdge">
            <summary>
            An edge in a connection.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.WorkflowRunEdge.Cursor">
            <summary>
            A cursor for use in pagination.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.WorkflowRunEdge.Node">
            <summary>
            The item at the end of the edge.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.WorkflowRunOrder">
            <summary>
            Ways in which lists of workflow runs can be ordered upon return.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.WorkflowRunOrder.Field">
            <summary>
            The field by which to order workflows.
            </summary>
        </member>
        <member name="P:Octokit.GraphQL.Model.WorkflowRunOrder.Direction">
            <summary>
            The direction in which to order workflow runs by the specified field.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.WorkflowRunOrderField">
            <summary>
            Properties by which workflow run connections can be ordered.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.WorkflowRunOrderField.CreatedAt">
            <summary>
            Order workflow runs by most recently created
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Model.WorkflowState">
            <summary>
            The possible states for a workflow.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.WorkflowState.Active">
            <summary>
            The workflow is active.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.WorkflowState.Deleted">
            <summary>
            The workflow was deleted from the git repository.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.WorkflowState.DisabledFork">
            <summary>
            The workflow was disabled by default on a fork.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.WorkflowState.DisabledInactivity">
            <summary>
            The workflow was disabled for inactivity in the repository.
            </summary>
        </member>
        <member name="F:Octokit.GraphQL.Model.WorkflowState.DisabledManually">
            <summary>
            The workflow was disabled manually.
            </summary>
        </member>
        <member name="T:Octokit.GraphQL.Mutation">
            <summary>
            The root query for implementing GraphQL mutations.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.AbortQueuedMigrations(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.AbortQueuedMigrationsInput})">
            <summary>
            Clear all of a customer's queued migrations
            </summary>
            <param name="input">Parameters for AbortQueuedMigrations</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.AcceptEnterpriseAdministratorInvitation(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.AcceptEnterpriseAdministratorInvitationInput})">
            <summary>
            Accepts a pending invitation for a user to become an administrator of an enterprise.
            </summary>
            <param name="input">Parameters for AcceptEnterpriseAdministratorInvitation</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.AcceptTopicSuggestion(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.AcceptTopicSuggestionInput})">
            <summary>
            Applies a suggested topic to the repository.
            </summary>
            <param name="input">Parameters for AcceptTopicSuggestion</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.AddAssigneesToAssignable(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.AddAssigneesToAssignableInput})">
            <summary>
            Adds assignees to an assignable object.
            </summary>
            <param name="input">Parameters for AddAssigneesToAssignable</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.AddComment(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.AddCommentInput})">
            <summary>
            Adds a comment to an Issue or Pull Request.
            </summary>
            <param name="input">Parameters for AddComment</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.AddDiscussionComment(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.AddDiscussionCommentInput})">
            <summary>
            Adds a comment to a Discussion, possibly as a reply to another comment.
            </summary>
            <param name="input">Parameters for AddDiscussionComment</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.AddDiscussionPollVote(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.AddDiscussionPollVoteInput})">
            <summary>
            Vote for an option in a discussion poll.
            </summary>
            <param name="input">Parameters for AddDiscussionPollVote</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.AddEnterpriseOrganizationMember(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.AddEnterpriseOrganizationMemberInput})">
            <summary>
            Adds enterprise members to an organization within the enterprise.
            </summary>
            <param name="input">Parameters for AddEnterpriseOrganizationMember</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.AddEnterpriseSupportEntitlement(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.AddEnterpriseSupportEntitlementInput})">
            <summary>
            Adds a support entitlement to an enterprise member.
            </summary>
            <param name="input">Parameters for AddEnterpriseSupportEntitlement</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.AddLabelsToLabelable(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.AddLabelsToLabelableInput})">
            <summary>
            Adds labels to a labelable object.
            </summary>
            <param name="input">Parameters for AddLabelsToLabelable</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.AddProjectCard(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.AddProjectCardInput})">
            <summary>
            Adds a card to a ProjectColumn. Either `contentId` or `note` must be provided but **not** both.
            </summary>
            <param name="input">Parameters for AddProjectCard</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.AddProjectColumn(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.AddProjectColumnInput})">
            <summary>
            Adds a column to a Project.
            </summary>
            <param name="input">Parameters for AddProjectColumn</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.AddProjectV2DraftIssue(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.AddProjectV2DraftIssueInput})">
            <summary>
            Creates a new draft issue and add it to a Project.
            </summary>
            <param name="input">Parameters for AddProjectV2DraftIssue</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.AddProjectV2ItemById(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.AddProjectV2ItemByIdInput})">
            <summary>
            Links an existing content instance to a Project.
            </summary>
            <param name="input">Parameters for AddProjectV2ItemById</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.AddPullRequestReview(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.AddPullRequestReviewInput})">
            <summary>
            Adds a review to a Pull Request.
            </summary>
            <param name="input">Parameters for AddPullRequestReview</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.AddPullRequestReviewComment(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.AddPullRequestReviewCommentInput})">
            <summary>
            Adds a comment to a review.
            </summary>
            <param name="input">Parameters for AddPullRequestReviewComment</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.AddPullRequestReviewThread(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.AddPullRequestReviewThreadInput})">
            <summary>
            Adds a new thread to a pending Pull Request Review.
            </summary>
            <param name="input">Parameters for AddPullRequestReviewThread</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.AddReaction(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.AddReactionInput})">
            <summary>
            Adds a reaction to a subject.
            </summary>
            <param name="input">Parameters for AddReaction</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.AddStar(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.AddStarInput})">
            <summary>
            Adds a star to a Starrable.
            </summary>
            <param name="input">Parameters for AddStar</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.AddUpvote(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.AddUpvoteInput})">
            <summary>
            Add an upvote to a discussion or discussion comment.
            </summary>
            <param name="input">Parameters for AddUpvote</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.AddVerifiableDomain(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.AddVerifiableDomainInput})">
            <summary>
            Adds a verifiable domain to an owning account.
            </summary>
            <param name="input">Parameters for AddVerifiableDomain</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.ApproveDeployments(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ApproveDeploymentsInput})">
            <summary>
            Approve all pending deployments under one or more environments
            </summary>
            <param name="input">Parameters for ApproveDeployments</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.ApproveVerifiableDomain(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ApproveVerifiableDomainInput})">
            <summary>
            Approve a verifiable domain for notification delivery.
            </summary>
            <param name="input">Parameters for ApproveVerifiableDomain</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.ArchiveProjectV2Item(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ArchiveProjectV2ItemInput})">
            <summary>
            Archives a ProjectV2Item
            </summary>
            <param name="input">Parameters for ArchiveProjectV2Item</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.ArchiveRepository(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ArchiveRepositoryInput})">
            <summary>
            Marks a repository as archived.
            </summary>
            <param name="input">Parameters for ArchiveRepository</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CancelEnterpriseAdminInvitation(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CancelEnterpriseAdminInvitationInput})">
            <summary>
            Cancels a pending invitation for an administrator to join an enterprise.
            </summary>
            <param name="input">Parameters for CancelEnterpriseAdminInvitation</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CancelSponsorship(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CancelSponsorshipInput})">
            <summary>
            Cancel an active sponsorship.
            </summary>
            <param name="input">Parameters for CancelSponsorship</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.ChangeUserStatus(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ChangeUserStatusInput})">
            <summary>
            Update your status on GitHub.
            </summary>
            <param name="input">Parameters for ChangeUserStatus</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.ClearLabelsFromLabelable(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ClearLabelsFromLabelableInput})">
            <summary>
            Clears all labels from a labelable object.
            </summary>
            <param name="input">Parameters for ClearLabelsFromLabelable</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.ClearProjectV2ItemFieldValue(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ClearProjectV2ItemFieldValueInput})">
            <summary>
            This mutation clears the value of a field for an item in a Project. Currently only text, number, date, assignees, labels, single-select, iteration and milestone fields are supported.
            </summary>
            <param name="input">Parameters for ClearProjectV2ItemFieldValue</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CloneProject(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CloneProjectInput})">
            <summary>
            Creates a new project by cloning configuration from an existing project.
            </summary>
            <param name="input">Parameters for CloneProject</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CloneTemplateRepository(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CloneTemplateRepositoryInput})">
            <summary>
            Create a new repository with the same files and directory structure as a template repository.
            </summary>
            <param name="input">Parameters for CloneTemplateRepository</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CloseDiscussion(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CloseDiscussionInput})">
            <summary>
            Close a discussion.
            </summary>
            <param name="input">Parameters for CloseDiscussion</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CloseIssue(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CloseIssueInput})">
            <summary>
            Close an issue.
            </summary>
            <param name="input">Parameters for CloseIssue</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.ClosePullRequest(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ClosePullRequestInput})">
            <summary>
            Close a pull request.
            </summary>
            <param name="input">Parameters for ClosePullRequest</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.ConvertProjectCardNoteToIssue(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ConvertProjectCardNoteToIssueInput})">
            <summary>
            Convert a project note card to one associated with a newly created issue.
            </summary>
            <param name="input">Parameters for ConvertProjectCardNoteToIssue</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.ConvertPullRequestToDraft(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ConvertPullRequestToDraftInput})">
            <summary>
            Converts a pull request to draft
            </summary>
            <param name="input">Parameters for ConvertPullRequestToDraft</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CopyProjectV2(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CopyProjectV2Input})">
            <summary>
            Copy a project.
            </summary>
            <param name="input">Parameters for CopyProjectV2</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateAttributionInvitation(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateAttributionInvitationInput})">
            <summary>
            Invites a user to claim reattributable data
            </summary>
            <param name="input">Parameters for CreateAttributionInvitation</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateBranchProtectionRule(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateBranchProtectionRuleInput})">
            <summary>
            Create a new branch protection rule
            </summary>
            <param name="input">Parameters for CreateBranchProtectionRule</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateCheckRun(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateCheckRunInput})">
            <summary>
            Create a check run.
            </summary>
            <param name="input">Parameters for CreateCheckRun</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateCheckSuite(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateCheckSuiteInput})">
            <summary>
            Create a check suite
            </summary>
            <param name="input">Parameters for CreateCheckSuite</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateCommitOnBranch(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateCommitOnBranchInput})">
            <summary>
            Appends a commit to the given branch as the authenticated user.
            This mutation creates a commit whose parent is the HEAD of the provided
            branch and also updates that branch to point to the new commit.
            It can be thought of as similar to `git commit`.
            ### Locating a Branch
            Commits are appended to a `branch` of type `Ref`.
            This must refer to a git branch (i.e.  the fully qualified path must
            begin with `refs/heads/`, although including this prefix is optional.
            Callers may specify the `branch` to commit to either by its global node
            ID or by passing both of `repositoryNameWithOwner` and `refName`.  For
            more details see the documentation for `CommittableBranch`.
            ### Describing Changes
            `fileChanges` are specified as a `FilesChanges` object describing
            `FileAdditions` and `FileDeletions`.
            Please see the documentation for `FileChanges` for more information on
            how to use this argument to describe any set of file changes.
            ### Authorship
            Similar to the web commit interface, this mutation does not support
            specifying the author or committer of the commit and will not add
            support for this in the future.
            A commit created by a successful execution of this mutation will be
            authored by the owner of the credential which authenticates the API
            request.  The committer will be identical to that of commits authored
            using the web interface.
            If you need full control over author and committer information, please
            use the Git Database REST API instead.
            ### Commit Signing
            Commits made using this mutation are automatically signed by GitHub if
            supported and will be marked as verified in the user interface.
            </summary>
            <param name="input">Parameters for CreateCommitOnBranch</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateDiscussion(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateDiscussionInput})">
            <summary>
            Create a discussion.
            </summary>
            <param name="input">Parameters for CreateDiscussion</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateEnterpriseOrganization(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateEnterpriseOrganizationInput})">
            <summary>
            Creates an organization as part of an enterprise account.
            </summary>
            <param name="input">Parameters for CreateEnterpriseOrganization</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateEnvironment(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateEnvironmentInput})">
            <summary>
            Creates an environment or simply returns it if already exists.
            </summary>
            <param name="input">Parameters for CreateEnvironment</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateIpAllowListEntry(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateIpAllowListEntryInput})">
            <summary>
            Creates a new IP allow list entry.
            </summary>
            <param name="input">Parameters for CreateIpAllowListEntry</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateIssue(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateIssueInput})">
            <summary>
            Creates a new issue.
            </summary>
            <param name="input">Parameters for CreateIssue</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateLinkedBranch(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateLinkedBranchInput})">
            <summary>
            Create a branch linked to an issue.
            </summary>
            <param name="input">Parameters for CreateLinkedBranch</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateMigrationSource(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateMigrationSourceInput})">
            <summary>
            Creates a GitHub Enterprise Importer (GEI) migration source.
            </summary>
            <param name="input">Parameters for CreateMigrationSource</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateProject(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateProjectInput})">
            <summary>
            Creates a new project.
            </summary>
            <param name="input">Parameters for CreateProject</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateProjectV2(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateProjectV2Input})">
            <summary>
            Creates a new project.
            </summary>
            <param name="input">Parameters for CreateProjectV2</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateProjectV2Field(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateProjectV2FieldInput})">
            <summary>
            Create a new project field.
            </summary>
            <param name="input">Parameters for CreateProjectV2Field</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreatePullRequest(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreatePullRequestInput})">
            <summary>
            Create a new pull request
            </summary>
            <param name="input">Parameters for CreatePullRequest</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateRef(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateRefInput})">
            <summary>
            Create a new Git Ref.
            </summary>
            <param name="input">Parameters for CreateRef</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateRepository(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateRepositoryInput})">
            <summary>
            Create a new repository.
            </summary>
            <param name="input">Parameters for CreateRepository</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateRepositoryRuleset(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateRepositoryRulesetInput})">
            <summary>
            Create a repository ruleset
            </summary>
            <param name="input">Parameters for CreateRepositoryRuleset</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateSponsorsListing(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateSponsorsListingInput})">
            <summary>
            Create a GitHub Sponsors profile to allow others to sponsor you or your organization.
            </summary>
            <param name="input">Parameters for CreateSponsorsListing</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateSponsorsTier(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateSponsorsTierInput})">
            <summary>
            Create a new payment tier for your GitHub Sponsors profile.
            </summary>
            <param name="input">Parameters for CreateSponsorsTier</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateSponsorship(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateSponsorshipInput})">
            <summary>
            Start a new sponsorship of a maintainer in GitHub Sponsors, or reactivate a past sponsorship.
            </summary>
            <param name="input">Parameters for CreateSponsorship</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateSponsorships(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateSponsorshipsInput})">
            <summary>
            Make many one-time sponsorships for different sponsorable users or organizations at once. Can only sponsor those who have a public GitHub Sponsors profile.
            </summary>
            <param name="input">Parameters for CreateSponsorships</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateTeamDiscussion(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateTeamDiscussionInput})">
            <summary>
            Creates a new team discussion.
            </summary>
            <param name="input">Parameters for CreateTeamDiscussion</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.CreateTeamDiscussionComment(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.CreateTeamDiscussionCommentInput})">
            <summary>
            Creates a new team discussion comment.
            </summary>
            <param name="input">Parameters for CreateTeamDiscussionComment</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeclineTopicSuggestion(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeclineTopicSuggestionInput})">
            <summary>
            Rejects a suggested topic for the repository.
            </summary>
            <param name="input">Parameters for DeclineTopicSuggestion</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeleteBranchProtectionRule(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeleteBranchProtectionRuleInput})">
            <summary>
            Delete a branch protection rule
            </summary>
            <param name="input">Parameters for DeleteBranchProtectionRule</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeleteDeployment(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeleteDeploymentInput})">
            <summary>
            Deletes a deployment.
            </summary>
            <param name="input">Parameters for DeleteDeployment</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeleteDiscussion(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeleteDiscussionInput})">
            <summary>
            Delete a discussion and all of its replies.
            </summary>
            <param name="input">Parameters for DeleteDiscussion</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeleteDiscussionComment(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeleteDiscussionCommentInput})">
            <summary>
            Delete a discussion comment. If it has replies, wipe it instead.
            </summary>
            <param name="input">Parameters for DeleteDiscussionComment</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeleteEnvironment(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeleteEnvironmentInput})">
            <summary>
            Deletes an environment
            </summary>
            <param name="input">Parameters for DeleteEnvironment</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeleteIpAllowListEntry(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeleteIpAllowListEntryInput})">
            <summary>
            Deletes an IP allow list entry.
            </summary>
            <param name="input">Parameters for DeleteIpAllowListEntry</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeleteIssue(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeleteIssueInput})">
            <summary>
            Deletes an Issue object.
            </summary>
            <param name="input">Parameters for DeleteIssue</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeleteIssueComment(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeleteIssueCommentInput})">
            <summary>
            Deletes an IssueComment object.
            </summary>
            <param name="input">Parameters for DeleteIssueComment</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeleteLinkedBranch(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeleteLinkedBranchInput})">
            <summary>
            Unlink a branch from an issue.
            </summary>
            <param name="input">Parameters for DeleteLinkedBranch</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeleteProject(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeleteProjectInput})">
            <summary>
            Deletes a project.
            </summary>
            <param name="input">Parameters for DeleteProject</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeleteProjectCard(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeleteProjectCardInput})">
            <summary>
            Deletes a project card.
            </summary>
            <param name="input">Parameters for DeleteProjectCard</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeleteProjectColumn(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeleteProjectColumnInput})">
            <summary>
            Deletes a project column.
            </summary>
            <param name="input">Parameters for DeleteProjectColumn</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeleteProjectV2(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeleteProjectV2Input})">
            <summary>
            Delete a project.
            </summary>
            <param name="input">Parameters for DeleteProjectV2</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeleteProjectV2Field(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeleteProjectV2FieldInput})">
            <summary>
            Delete a project field.
            </summary>
            <param name="input">Parameters for DeleteProjectV2Field</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeleteProjectV2Item(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeleteProjectV2ItemInput})">
            <summary>
            Deletes an item from a Project.
            </summary>
            <param name="input">Parameters for DeleteProjectV2Item</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeleteProjectV2Workflow(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeleteProjectV2WorkflowInput})">
            <summary>
            Deletes a project workflow.
            </summary>
            <param name="input">Parameters for DeleteProjectV2Workflow</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeletePullRequestReview(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeletePullRequestReviewInput})">
            <summary>
            Deletes a pull request review.
            </summary>
            <param name="input">Parameters for DeletePullRequestReview</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeletePullRequestReviewComment(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeletePullRequestReviewCommentInput})">
            <summary>
            Deletes a pull request review comment.
            </summary>
            <param name="input">Parameters for DeletePullRequestReviewComment</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeleteRef(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeleteRefInput})">
            <summary>
            Delete a Git Ref.
            </summary>
            <param name="input">Parameters for DeleteRef</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeleteRepositoryRuleset(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeleteRepositoryRulesetInput})">
            <summary>
            Delete a repository ruleset
            </summary>
            <param name="input">Parameters for DeleteRepositoryRuleset</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeleteTeamDiscussion(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeleteTeamDiscussionInput})">
            <summary>
            Deletes a team discussion.
            </summary>
            <param name="input">Parameters for DeleteTeamDiscussion</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeleteTeamDiscussionComment(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeleteTeamDiscussionCommentInput})">
            <summary>
            Deletes a team discussion comment.
            </summary>
            <param name="input">Parameters for DeleteTeamDiscussionComment</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DeleteVerifiableDomain(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DeleteVerifiableDomainInput})">
            <summary>
            Deletes a verifiable domain.
            </summary>
            <param name="input">Parameters for DeleteVerifiableDomain</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DequeuePullRequest(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DequeuePullRequestInput})">
            <summary>
            Remove a pull request from the merge queue.
            </summary>
            <param name="input">Parameters for DequeuePullRequest</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DisablePullRequestAutoMerge(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DisablePullRequestAutoMergeInput})">
            <summary>
            Disable auto merge on the given pull request
            </summary>
            <param name="input">Parameters for DisablePullRequestAutoMerge</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DismissPullRequestReview(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DismissPullRequestReviewInput})">
            <summary>
            Dismisses an approved or rejected pull request review.
            </summary>
            <param name="input">Parameters for DismissPullRequestReview</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.DismissRepositoryVulnerabilityAlert(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DismissRepositoryVulnerabilityAlertInput})">
            <summary>
            Dismisses the Dependabot alert.
            </summary>
            <param name="input">Parameters for DismissRepositoryVulnerabilityAlert</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.EnablePullRequestAutoMerge(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.EnablePullRequestAutoMergeInput})">
            <summary>
            Enable the default auto-merge on a pull request.
            </summary>
            <param name="input">Parameters for EnablePullRequestAutoMerge</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.EnqueuePullRequest(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.EnqueuePullRequestInput})">
            <summary>
            Add a pull request to the merge queue.
            </summary>
            <param name="input">Parameters for EnqueuePullRequest</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.FollowOrganization(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.FollowOrganizationInput})">
            <summary>
            Follow an organization.
            </summary>
            <param name="input">Parameters for FollowOrganization</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.FollowUser(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.FollowUserInput})">
            <summary>
            Follow a user.
            </summary>
            <param name="input">Parameters for FollowUser</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.GrantEnterpriseOrganizationsMigratorRole(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.GrantEnterpriseOrganizationsMigratorRoleInput})">
            <summary>
            Grant the migrator role to a user for all organizations under an enterprise account.
            </summary>
            <param name="input">Parameters for GrantEnterpriseOrganizationsMigratorRole</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.GrantMigratorRole(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.GrantMigratorRoleInput})">
            <summary>
            Grant the migrator role to a user or a team.
            </summary>
            <param name="input">Parameters for GrantMigratorRole</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.InviteEnterpriseAdmin(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.InviteEnterpriseAdminInput})">
            <summary>
            Invite someone to become an administrator of the enterprise.
            </summary>
            <param name="input">Parameters for InviteEnterpriseAdmin</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.LinkProjectV2ToRepository(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.LinkProjectV2ToRepositoryInput})">
            <summary>
            Links a project to a repository.
            </summary>
            <param name="input">Parameters for LinkProjectV2ToRepository</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.LinkProjectV2ToTeam(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.LinkProjectV2ToTeamInput})">
            <summary>
            Links a project to a team.
            </summary>
            <param name="input">Parameters for LinkProjectV2ToTeam</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.LinkRepositoryToProject(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.LinkRepositoryToProjectInput})">
            <summary>
            Creates a repository link for a project.
            </summary>
            <param name="input">Parameters for LinkRepositoryToProject</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.LockLockable(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.LockLockableInput})">
            <summary>
            Lock a lockable object
            </summary>
            <param name="input">Parameters for LockLockable</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.MarkDiscussionCommentAsAnswer(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.MarkDiscussionCommentAsAnswerInput})">
            <summary>
            Mark a discussion comment as the chosen answer for discussions in an answerable category.
            </summary>
            <param name="input">Parameters for MarkDiscussionCommentAsAnswer</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.MarkFileAsViewed(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.MarkFileAsViewedInput})">
            <summary>
            Mark a pull request file as viewed
            </summary>
            <param name="input">Parameters for MarkFileAsViewed</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.MarkPullRequestReadyForReview(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.MarkPullRequestReadyForReviewInput})">
            <summary>
            Marks a pull request ready for review.
            </summary>
            <param name="input">Parameters for MarkPullRequestReadyForReview</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.MergeBranch(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.MergeBranchInput})">
            <summary>
            Merge a head into a branch.
            </summary>
            <param name="input">Parameters for MergeBranch</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.MergePullRequest(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.MergePullRequestInput})">
            <summary>
            Merge a pull request.
            </summary>
            <param name="input">Parameters for MergePullRequest</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.MinimizeComment(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.MinimizeCommentInput})">
            <summary>
            Minimizes a comment on an Issue, Commit, Pull Request, or Gist
            </summary>
            <param name="input">Parameters for MinimizeComment</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.MoveProjectCard(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.MoveProjectCardInput})">
            <summary>
            Moves a project card to another place.
            </summary>
            <param name="input">Parameters for MoveProjectCard</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.MoveProjectColumn(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.MoveProjectColumnInput})">
            <summary>
            Moves a project column to another place.
            </summary>
            <param name="input">Parameters for MoveProjectColumn</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.PinIssue(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.PinIssueInput})">
            <summary>
            Pin an issue to a repository
            </summary>
            <param name="input">Parameters for PinIssue</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.PublishSponsorsTier(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.PublishSponsorsTierInput})">
            <summary>
            Publish an existing sponsorship tier that is currently still a draft to a GitHub Sponsors profile.
            </summary>
            <param name="input">Parameters for PublishSponsorsTier</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.RegenerateEnterpriseIdentityProviderRecoveryCodes(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RegenerateEnterpriseIdentityProviderRecoveryCodesInput})">
            <summary>
            Regenerates the identity provider recovery codes for an enterprise
            </summary>
            <param name="input">Parameters for RegenerateEnterpriseIdentityProviderRecoveryCodes</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.RegenerateVerifiableDomainToken(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RegenerateVerifiableDomainTokenInput})">
            <summary>
            Regenerates a verifiable domain's verification token.
            </summary>
            <param name="input">Parameters for RegenerateVerifiableDomainToken</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.RejectDeployments(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RejectDeploymentsInput})">
            <summary>
            Reject all pending deployments under one or more environments
            </summary>
            <param name="input">Parameters for RejectDeployments</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.RemoveAssigneesFromAssignable(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RemoveAssigneesFromAssignableInput})">
            <summary>
            Removes assignees from an assignable object.
            </summary>
            <param name="input">Parameters for RemoveAssigneesFromAssignable</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.RemoveEnterpriseAdmin(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RemoveEnterpriseAdminInput})">
            <summary>
            Removes an administrator from the enterprise.
            </summary>
            <param name="input">Parameters for RemoveEnterpriseAdmin</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.RemoveEnterpriseIdentityProvider(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RemoveEnterpriseIdentityProviderInput})">
            <summary>
            Removes the identity provider from an enterprise
            </summary>
            <param name="input">Parameters for RemoveEnterpriseIdentityProvider</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.RemoveEnterpriseMember(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RemoveEnterpriseMemberInput})">
            <summary>
            Removes a user from all organizations within the enterprise
            </summary>
            <param name="input">Parameters for RemoveEnterpriseMember</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.RemoveEnterpriseOrganization(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RemoveEnterpriseOrganizationInput})">
            <summary>
            Removes an organization from the enterprise
            </summary>
            <param name="input">Parameters for RemoveEnterpriseOrganization</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.RemoveEnterpriseSupportEntitlement(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RemoveEnterpriseSupportEntitlementInput})">
            <summary>
            Removes a support entitlement from an enterprise member.
            </summary>
            <param name="input">Parameters for RemoveEnterpriseSupportEntitlement</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.RemoveLabelsFromLabelable(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RemoveLabelsFromLabelableInput})">
            <summary>
            Removes labels from a Labelable object.
            </summary>
            <param name="input">Parameters for RemoveLabelsFromLabelable</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.RemoveOutsideCollaborator(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RemoveOutsideCollaboratorInput})">
            <summary>
            Removes outside collaborator from all repositories in an organization.
            </summary>
            <param name="input">Parameters for RemoveOutsideCollaborator</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.RemoveReaction(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RemoveReactionInput})">
            <summary>
            Removes a reaction from a subject.
            </summary>
            <param name="input">Parameters for RemoveReaction</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.RemoveStar(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RemoveStarInput})">
            <summary>
            Removes a star from a Starrable.
            </summary>
            <param name="input">Parameters for RemoveStar</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.RemoveUpvote(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RemoveUpvoteInput})">
            <summary>
            Remove an upvote to a discussion or discussion comment.
            </summary>
            <param name="input">Parameters for RemoveUpvote</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.ReopenDiscussion(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReopenDiscussionInput})">
            <summary>
            Reopen a discussion.
            </summary>
            <param name="input">Parameters for ReopenDiscussion</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.ReopenIssue(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReopenIssueInput})">
            <summary>
            Reopen a issue.
            </summary>
            <param name="input">Parameters for ReopenIssue</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.ReopenPullRequest(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ReopenPullRequestInput})">
            <summary>
            Reopen a pull request.
            </summary>
            <param name="input">Parameters for ReopenPullRequest</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.RequestReviews(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RequestReviewsInput})">
            <summary>
            Set review requests on a pull request.
            </summary>
            <param name="input">Parameters for RequestReviews</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.RerequestCheckSuite(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RerequestCheckSuiteInput})">
            <summary>
            Rerequests an existing check suite.
            </summary>
            <param name="input">Parameters for RerequestCheckSuite</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.ResolveReviewThread(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.ResolveReviewThreadInput})">
            <summary>
            Marks a review thread as resolved.
            </summary>
            <param name="input">Parameters for ResolveReviewThread</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.RetireSponsorsTier(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RetireSponsorsTierInput})">
            <summary>
            Retire a published payment tier from your GitHub Sponsors profile so it cannot be used to start new sponsorships.
            </summary>
            <param name="input">Parameters for RetireSponsorsTier</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.RevertPullRequest(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RevertPullRequestInput})">
            <summary>
            Create a pull request that reverts the changes from a merged pull request.
            </summary>
            <param name="input">Parameters for RevertPullRequest</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.RevokeEnterpriseOrganizationsMigratorRole(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RevokeEnterpriseOrganizationsMigratorRoleInput})">
            <summary>
            Revoke the migrator role to a user for all organizations under an enterprise account.
            </summary>
            <param name="input">Parameters for RevokeEnterpriseOrganizationsMigratorRole</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.RevokeMigratorRole(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.RevokeMigratorRoleInput})">
            <summary>
            Revoke the migrator role from a user or a team.
            </summary>
            <param name="input">Parameters for RevokeMigratorRole</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.SetEnterpriseIdentityProvider(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SetEnterpriseIdentityProviderInput})">
            <summary>
            Creates or updates the identity provider for an enterprise.
            </summary>
            <param name="input">Parameters for SetEnterpriseIdentityProvider</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.SetOrganizationInteractionLimit(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SetOrganizationInteractionLimitInput})">
            <summary>
            Set an organization level interaction limit for an organization's public repositories.
            </summary>
            <param name="input">Parameters for SetOrganizationInteractionLimit</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.SetRepositoryInteractionLimit(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SetRepositoryInteractionLimitInput})">
            <summary>
            Sets an interaction limit setting for a repository.
            </summary>
            <param name="input">Parameters for SetRepositoryInteractionLimit</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.SetUserInteractionLimit(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SetUserInteractionLimitInput})">
            <summary>
            Set a user level interaction limit for an user's public repositories.
            </summary>
            <param name="input">Parameters for SetUserInteractionLimit</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.StartOrganizationMigration(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.StartOrganizationMigrationInput})">
            <summary>
            Starts a GitHub Enterprise Importer organization migration.
            </summary>
            <param name="input">Parameters for StartOrganizationMigration</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.StartRepositoryMigration(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.StartRepositoryMigrationInput})">
            <summary>
            Starts a GitHub Enterprise Importer (GEI) repository migration.
            </summary>
            <param name="input">Parameters for StartRepositoryMigration</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.SubmitPullRequestReview(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SubmitPullRequestReviewInput})">
            <summary>
            Submits a pending pull request review.
            </summary>
            <param name="input">Parameters for SubmitPullRequestReview</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.TransferEnterpriseOrganization(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.TransferEnterpriseOrganizationInput})">
            <summary>
            Transfer an organization from one enterprise to another enterprise.
            </summary>
            <param name="input">Parameters for TransferEnterpriseOrganization</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.TransferIssue(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.TransferIssueInput})">
            <summary>
            Transfer an issue to a different repository
            </summary>
            <param name="input">Parameters for TransferIssue</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UnarchiveProjectV2Item(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UnarchiveProjectV2ItemInput})">
            <summary>
            Unarchives a ProjectV2Item
            </summary>
            <param name="input">Parameters for UnarchiveProjectV2Item</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UnarchiveRepository(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UnarchiveRepositoryInput})">
            <summary>
            Unarchives a repository.
            </summary>
            <param name="input">Parameters for UnarchiveRepository</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UnfollowOrganization(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UnfollowOrganizationInput})">
            <summary>
            Unfollow an organization.
            </summary>
            <param name="input">Parameters for UnfollowOrganization</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UnfollowUser(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UnfollowUserInput})">
            <summary>
            Unfollow a user.
            </summary>
            <param name="input">Parameters for UnfollowUser</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UnlinkProjectV2FromRepository(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UnlinkProjectV2FromRepositoryInput})">
            <summary>
            Unlinks a project from a repository.
            </summary>
            <param name="input">Parameters for UnlinkProjectV2FromRepository</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UnlinkProjectV2FromTeam(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UnlinkProjectV2FromTeamInput})">
            <summary>
            Unlinks a project to a team.
            </summary>
            <param name="input">Parameters for UnlinkProjectV2FromTeam</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UnlinkRepositoryFromProject(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UnlinkRepositoryFromProjectInput})">
            <summary>
            Deletes a repository link from a project.
            </summary>
            <param name="input">Parameters for UnlinkRepositoryFromProject</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UnlockLockable(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UnlockLockableInput})">
            <summary>
            Unlock a lockable object
            </summary>
            <param name="input">Parameters for UnlockLockable</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UnmarkDiscussionCommentAsAnswer(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UnmarkDiscussionCommentAsAnswerInput})">
            <summary>
            Unmark a discussion comment as the chosen answer for discussions in an answerable category.
            </summary>
            <param name="input">Parameters for UnmarkDiscussionCommentAsAnswer</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UnmarkFileAsViewed(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UnmarkFileAsViewedInput})">
            <summary>
            Unmark a pull request file as viewed
            </summary>
            <param name="input">Parameters for UnmarkFileAsViewed</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UnmarkIssueAsDuplicate(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UnmarkIssueAsDuplicateInput})">
            <summary>
            Unmark an issue as a duplicate of another issue.
            </summary>
            <param name="input">Parameters for UnmarkIssueAsDuplicate</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UnminimizeComment(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UnminimizeCommentInput})">
            <summary>
            Unminimizes a comment on an Issue, Commit, Pull Request, or Gist
            </summary>
            <param name="input">Parameters for UnminimizeComment</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UnpinIssue(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UnpinIssueInput})">
            <summary>
            Unpin a pinned issue from a repository
            </summary>
            <param name="input">Parameters for UnpinIssue</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UnresolveReviewThread(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UnresolveReviewThreadInput})">
            <summary>
            Marks a review thread as unresolved.
            </summary>
            <param name="input">Parameters for UnresolveReviewThread</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateBranchProtectionRule(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateBranchProtectionRuleInput})">
            <summary>
            Update a branch protection rule
            </summary>
            <param name="input">Parameters for UpdateBranchProtectionRule</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateCheckRun(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateCheckRunInput})">
            <summary>
            Update a check run
            </summary>
            <param name="input">Parameters for UpdateCheckRun</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateCheckSuitePreferences(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateCheckSuitePreferencesInput})">
            <summary>
            Modifies the settings of an existing check suite
            </summary>
            <param name="input">Parameters for UpdateCheckSuitePreferences</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateDiscussion(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateDiscussionInput})">
            <summary>
            Update a discussion
            </summary>
            <param name="input">Parameters for UpdateDiscussion</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateDiscussionComment(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateDiscussionCommentInput})">
            <summary>
            Update the contents of a comment on a Discussion
            </summary>
            <param name="input">Parameters for UpdateDiscussionComment</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateEnterpriseAdministratorRole(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateEnterpriseAdministratorRoleInput})">
            <summary>
            Updates the role of an enterprise administrator.
            </summary>
            <param name="input">Parameters for UpdateEnterpriseAdministratorRole</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateEnterpriseAllowPrivateRepositoryForkingSetting(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput})">
            <summary>
            Sets whether private repository forks are enabled for an enterprise.
            </summary>
            <param name="input">Parameters for UpdateEnterpriseAllowPrivateRepositoryForkingSetting</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateEnterpriseDefaultRepositoryPermissionSetting(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateEnterpriseDefaultRepositoryPermissionSettingInput})">
            <summary>
            Sets the base repository permission for organizations in an enterprise.
            </summary>
            <param name="input">Parameters for UpdateEnterpriseDefaultRepositoryPermissionSetting</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput})">
            <summary>
            Sets whether organization members with admin permissions on a repository can change repository visibility.
            </summary>
            <param name="input">Parameters for UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateEnterpriseMembersCanCreateRepositoriesSetting(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateEnterpriseMembersCanCreateRepositoriesSettingInput})">
            <summary>
            Sets the members can create repositories setting for an enterprise.
            </summary>
            <param name="input">Parameters for UpdateEnterpriseMembersCanCreateRepositoriesSetting</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateEnterpriseMembersCanDeleteIssuesSetting(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateEnterpriseMembersCanDeleteIssuesSettingInput})">
            <summary>
            Sets the members can delete issues setting for an enterprise.
            </summary>
            <param name="input">Parameters for UpdateEnterpriseMembersCanDeleteIssuesSetting</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateEnterpriseMembersCanDeleteRepositoriesSetting(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput})">
            <summary>
            Sets the members can delete repositories setting for an enterprise.
            </summary>
            <param name="input">Parameters for UpdateEnterpriseMembersCanDeleteRepositoriesSetting</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateEnterpriseMembersCanInviteCollaboratorsSetting(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput})">
            <summary>
            Sets whether members can invite collaborators are enabled for an enterprise.
            </summary>
            <param name="input">Parameters for UpdateEnterpriseMembersCanInviteCollaboratorsSetting</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateEnterpriseMembersCanMakePurchasesSetting(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateEnterpriseMembersCanMakePurchasesSettingInput})">
            <summary>
            Sets whether or not an organization admin can make purchases.
            </summary>
            <param name="input">Parameters for UpdateEnterpriseMembersCanMakePurchasesSetting</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput})">
            <summary>
            Sets the members can update protected branches setting for an enterprise.
            </summary>
            <param name="input">Parameters for UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateEnterpriseMembersCanViewDependencyInsightsSetting(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput})">
            <summary>
            Sets the members can view dependency insights for an enterprise.
            </summary>
            <param name="input">Parameters for UpdateEnterpriseMembersCanViewDependencyInsightsSetting</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateEnterpriseOrganizationProjectsSetting(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateEnterpriseOrganizationProjectsSettingInput})">
            <summary>
            Sets whether organization projects are enabled for an enterprise.
            </summary>
            <param name="input">Parameters for UpdateEnterpriseOrganizationProjectsSetting</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateEnterpriseOwnerOrganizationRole(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateEnterpriseOwnerOrganizationRoleInput})">
            <summary>
            Updates the role of an enterprise owner with an organization.
            </summary>
            <param name="input">Parameters for UpdateEnterpriseOwnerOrganizationRole</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateEnterpriseProfile(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateEnterpriseProfileInput})">
            <summary>
            Updates an enterprise's profile.
            </summary>
            <param name="input">Parameters for UpdateEnterpriseProfile</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateEnterpriseRepositoryProjectsSetting(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateEnterpriseRepositoryProjectsSettingInput})">
            <summary>
            Sets whether repository projects are enabled for a enterprise.
            </summary>
            <param name="input">Parameters for UpdateEnterpriseRepositoryProjectsSetting</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateEnterpriseTeamDiscussionsSetting(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateEnterpriseTeamDiscussionsSettingInput})">
            <summary>
            Sets whether team discussions are enabled for an enterprise.
            </summary>
            <param name="input">Parameters for UpdateEnterpriseTeamDiscussionsSetting</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateEnterpriseTwoFactorAuthenticationRequiredSetting(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput})">
            <summary>
            Sets whether two factor authentication is required for all users in an enterprise.
            </summary>
            <param name="input">Parameters for UpdateEnterpriseTwoFactorAuthenticationRequiredSetting</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateEnvironment(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateEnvironmentInput})">
            <summary>
            Updates an environment.
            </summary>
            <param name="input">Parameters for UpdateEnvironment</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateIpAllowListEnabledSetting(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateIpAllowListEnabledSettingInput})">
            <summary>
            Sets whether an IP allow list is enabled on an owner.
            </summary>
            <param name="input">Parameters for UpdateIpAllowListEnabledSetting</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateIpAllowListEntry(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateIpAllowListEntryInput})">
            <summary>
            Updates an IP allow list entry.
            </summary>
            <param name="input">Parameters for UpdateIpAllowListEntry</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateIpAllowListForInstalledAppsEnabledSetting(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateIpAllowListForInstalledAppsEnabledSettingInput})">
            <summary>
            Sets whether IP allow list configuration for installed GitHub Apps is enabled on an owner.
            </summary>
            <param name="input">Parameters for UpdateIpAllowListForInstalledAppsEnabledSetting</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateIssue(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateIssueInput})">
            <summary>
            Updates an Issue.
            </summary>
            <param name="input">Parameters for UpdateIssue</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateIssueComment(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateIssueCommentInput})">
            <summary>
            Updates an IssueComment object.
            </summary>
            <param name="input">Parameters for UpdateIssueComment</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateNotificationRestrictionSetting(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateNotificationRestrictionSettingInput})">
            <summary>
            Update the setting to restrict notifications to only verified or approved domains available to an owner.
            </summary>
            <param name="input">Parameters for UpdateNotificationRestrictionSetting</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateOrganizationAllowPrivateRepositoryForkingSetting(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateOrganizationAllowPrivateRepositoryForkingSettingInput})">
            <summary>
            Sets whether private repository forks are enabled for an organization.
            </summary>
            <param name="input">Parameters for UpdateOrganizationAllowPrivateRepositoryForkingSetting</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateOrganizationWebCommitSignoffSetting(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateOrganizationWebCommitSignoffSettingInput})">
            <summary>
            Sets whether contributors are required to sign off on web-based commits for repositories in an organization.
            </summary>
            <param name="input">Parameters for UpdateOrganizationWebCommitSignoffSetting</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateProject(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateProjectInput})">
            <summary>
            Updates an existing project.
            </summary>
            <param name="input">Parameters for UpdateProject</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateProjectCard(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateProjectCardInput})">
            <summary>
            Updates an existing project card.
            </summary>
            <param name="input">Parameters for UpdateProjectCard</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateProjectColumn(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateProjectColumnInput})">
            <summary>
            Updates an existing project column.
            </summary>
            <param name="input">Parameters for UpdateProjectColumn</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateProjectV2(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateProjectV2Input})">
            <summary>
            Updates an existing project (beta).
            </summary>
            <param name="input">Parameters for UpdateProjectV2</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateProjectV2DraftIssue(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateProjectV2DraftIssueInput})">
            <summary>
            Updates a draft issue within a Project.
            </summary>
            <param name="input">Parameters for UpdateProjectV2DraftIssue</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateProjectV2ItemFieldValue(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateProjectV2ItemFieldValueInput})">
            <summary>
            This mutation updates the value of a field for an item in a Project. Currently only single-select, text, number, date, and iteration fields are supported.
            </summary>
            <param name="input">Parameters for UpdateProjectV2ItemFieldValue</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateProjectV2ItemPosition(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateProjectV2ItemPositionInput})">
            <summary>
            This mutation updates the position of the item in the project, where the position represents the priority of an item.
            </summary>
            <param name="input">Parameters for UpdateProjectV2ItemPosition</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdatePullRequest(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdatePullRequestInput})">
            <summary>
            Update a pull request
            </summary>
            <param name="input">Parameters for UpdatePullRequest</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdatePullRequestBranch(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdatePullRequestBranchInput})">
            <summary>
            Merge or Rebase HEAD from upstream branch into pull request branch
            </summary>
            <param name="input">Parameters for UpdatePullRequestBranch</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdatePullRequestReview(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdatePullRequestReviewInput})">
            <summary>
            Updates the body of a pull request review.
            </summary>
            <param name="input">Parameters for UpdatePullRequestReview</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdatePullRequestReviewComment(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdatePullRequestReviewCommentInput})">
            <summary>
            Updates a pull request review comment.
            </summary>
            <param name="input">Parameters for UpdatePullRequestReviewComment</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateRef(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateRefInput})">
            <summary>
            Update a Git Ref.
            </summary>
            <param name="input">Parameters for UpdateRef</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateRepository(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateRepositoryInput})">
            <summary>
            Update information about a repository.
            </summary>
            <param name="input">Parameters for UpdateRepository</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateRepositoryRuleset(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateRepositoryRulesetInput})">
            <summary>
            Update a repository ruleset
            </summary>
            <param name="input">Parameters for UpdateRepositoryRuleset</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateRepositoryWebCommitSignoffSetting(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateRepositoryWebCommitSignoffSettingInput})">
            <summary>
            Sets whether contributors are required to sign off on web-based commits for a repository.
            </summary>
            <param name="input">Parameters for UpdateRepositoryWebCommitSignoffSetting</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateSponsorshipPreferences(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateSponsorshipPreferencesInput})">
            <summary>
            Change visibility of your sponsorship and opt in or out of email updates from the maintainer.
            </summary>
            <param name="input">Parameters for UpdateSponsorshipPreferences</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateSubscription(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateSubscriptionInput})">
            <summary>
            Updates the state for subscribable subjects.
            </summary>
            <param name="input">Parameters for UpdateSubscription</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateTeamDiscussion(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateTeamDiscussionInput})">
            <summary>
            Updates a team discussion.
            </summary>
            <param name="input">Parameters for UpdateTeamDiscussion</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateTeamDiscussionComment(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateTeamDiscussionCommentInput})">
            <summary>
            Updates a discussion comment.
            </summary>
            <param name="input">Parameters for UpdateTeamDiscussionComment</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateTeamsRepository(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateTeamsRepositoryInput})">
            <summary>
            Update team repository.
            </summary>
            <param name="input">Parameters for UpdateTeamsRepository</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.UpdateTopics(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.UpdateTopicsInput})">
            <summary>
            Replaces the repository's topics with the given topics.
            </summary>
            <param name="input">Parameters for UpdateTopics</param>
        </member>
        <member name="M:Octokit.GraphQL.Mutation.VerifyVerifiableDomain(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.VerifyVerifiableDomainInput})">
            <summary>
            Verify that a verifiable domain has the expected DNS record.
            </summary>
            <param name="input">Parameters for VerifyVerifiableDomain</param>
        </member>
        <member name="T:Octokit.GraphQL.Query">
            <summary>
            The query root of GitHub's GraphQL interface.
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Query.CodeOfConduct(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Look up a code of conduct by its key
            </summary>
            <param name="key">The code of conduct's key</param>
        </member>
        <member name="P:Octokit.GraphQL.Query.CodesOfConduct">
            <summary>
            Look up a code of conduct by its key
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Query.Enterprise(Octokit.GraphQL.Core.Arg{System.String},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            Look up an enterprise by URL slug.
            </summary>
            <param name="slug">The enterprise URL slug.</param>
            <param name="invitationToken">The enterprise invitation token.</param>
        </member>
        <member name="M:Octokit.GraphQL.Query.EnterpriseAdministratorInvitation(Octokit.GraphQL.Core.Arg{System.String},Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.EnterpriseAdministratorRole},Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Look up a pending enterprise administrator invitation by invitee, enterprise and role.
            </summary>
            <param name="enterpriseSlug">The slug of the enterprise the user was invited to join.</param>
            <param name="role">The role for the business member invitation.</param>
            <param name="userLogin">The login of the user invited to join the business.</param>
        </member>
        <member name="M:Octokit.GraphQL.Query.EnterpriseAdministratorInvitationByToken(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Look up a pending enterprise administrator invitation by invitation token.
            </summary>
            <param name="invitationToken">The invitation token sent with the invitation email.</param>
        </member>
        <member name="M:Octokit.GraphQL.Query.License(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Look up an open source license by its key
            </summary>
            <param name="key">The license's downcased SPDX ID</param>
        </member>
        <member name="P:Octokit.GraphQL.Query.Licenses">
            <summary>
            Return a list of known open source licenses
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Query.MarketplaceCategories(System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Get alphabetically sorted list of Marketplace categories
            </summary>
            <param name="excludeEmpty">Exclude categories with no listings.</param>
            <param name="excludeSubcategories">Returns top level categories only, excluding any subcategories.</param>
            <param name="includeCategories">Return only the specified categories.</param>
        </member>
        <member name="M:Octokit.GraphQL.Query.MarketplaceCategory(Octokit.GraphQL.Core.Arg{System.String},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            Look up a Marketplace category by its slug.
            </summary>
            <param name="slug">The URL slug of the category.</param>
            <param name="useTopicAliases">Also check topic aliases for the category slug</param>
        </member>
        <member name="M:Octokit.GraphQL.Query.MarketplaceListing(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Look up a single Marketplace listing
            </summary>
            <param name="slug">Select the listing that matches this slug. It's the short name of the listing used in its URL.</param>
        </member>
        <member name="M:Octokit.GraphQL.Query.MarketplaceListings(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.ID}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.ID}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{System.String}}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            Look up Marketplace listings
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="adminId">Select listings that can be administered by the specified user.</param>
            <param name="allStates">Select listings visible to the viewer even if they are not approved. If omitted or false, only approved listings will be returned.</param>
            <param name="categorySlug">Select only listings with the given category.</param>
            <param name="organizationId">Select listings for products owned by the specified organization.</param>
            <param name="primaryCategoryOnly">Select only listings where the primary category matches the given category slug.</param>
            <param name="slugs">Select the listings with these slugs, if they are visible to the viewer.</param>
            <param name="useTopicAliases">Also check topic aliases for the category slug</param>
            <param name="viewerCanAdmin">Select listings to which user has admin access. If omitted, listings visible to the viewer are returned.</param>
            <param name="withFreeTrialsOnly">Select only listings that offer a free trial.</param>
        </member>
        <member name="P:Octokit.GraphQL.Query.Meta">
            <summary>
            Return information about the GitHub instance
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Query.Node(Octokit.GraphQL.Core.Arg{Octokit.GraphQL.ID})">
            <summary>
            Fetches an object given its ID.
            </summary>
            <param name="id">ID of the object.</param>
        </member>
        <member name="M:Octokit.GraphQL.Query.Nodes(Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.ID}})">
            <summary>
            Lookup nodes by a list of IDs.
            </summary>
            <param name="ids">The list of node IDs.</param>
        </member>
        <member name="M:Octokit.GraphQL.Query.Organization(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Lookup a organization by login.
            </summary>
            <param name="login">The organization's login.</param>
        </member>
        <member name="M:Octokit.GraphQL.Query.RateLimit(System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            The client's rate limit information.
            </summary>
            <param name="dryRun">If true, calculate the cost for the query without evaluating it</param>
        </member>
        <member name="P:Octokit.GraphQL.Query.Relay">
            <summary>
            Workaround for re-exposing the root query object. (Refer to https://github.com/facebook/relay/issues/112 for more information.)
            </summary>
        </member>
        <member name="M:Octokit.GraphQL.Query.Repository(Octokit.GraphQL.Core.Arg{System.String},Octokit.GraphQL.Core.Arg{System.String},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}})">
            <summary>
            Lookup a given repository by the owner and repository name.
            </summary>
            <param name="name">The name of the repository</param>
            <param name="owner">The login field of a user or organization</param>
            <param name="followRenames">Follow repository renames. If disabled, a repository referenced by its old name will return an error.</param>
        </member>
        <member name="M:Octokit.GraphQL.Query.RepositoryOwner(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Lookup a repository owner (ie. either a User or an Organization) by login.
            </summary>
            <param name="login">The username to lookup the owner by.</param>
        </member>
        <member name="M:Octokit.GraphQL.Query.Resource(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Lookup resource by a URL.
            </summary>
            <param name="url">The URL.</param>
        </member>
        <member name="M:Octokit.GraphQL.Query.Search(Octokit.GraphQL.Core.Arg{System.String},Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SearchType},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            Perform a search across resources, returning a maximum of 1,000 results.
            </summary>
            <param name="query">The search string to look for.</param>
            <param name="type">The types of search items to search within.</param>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
        </member>
        <member name="M:Octokit.GraphQL.Query.SecurityAdvisories(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.SecurityAdvisoryClassification}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SecurityAdvisoryIdentifierFilter}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SecurityAdvisoryOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.DateTimeOffset}},System.Nullable{Octokit.GraphQL.Core.Arg{System.DateTimeOffset}})">
            <summary>
            GitHub Security Advisories
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="classifications">A list of classifications to filter advisories by.</param>
            <param name="identifier">Filter advisories by identifier, e.g. GHSA or CVE.</param>
            <param name="orderBy">Ordering options for the returned topics.</param>
            <param name="publishedSince">Filter advisories to those published since a time in the past.</param>
            <param name="updatedSince">Filter advisories to those updated since a time in the past.</param>
        </member>
        <member name="M:Octokit.GraphQL.Query.SecurityAdvisory(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Fetch a Security Advisory by its GHSA ID
            </summary>
            <param name="ghsaId">GitHub Security Advisory ID.</param>
        </member>
        <member name="M:Octokit.GraphQL.Query.SecurityVulnerabilities(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.SecurityAdvisoryClassification}}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SecurityAdvisoryEcosystem}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SecurityVulnerabilityOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Collections.Generic.IEnumerable{Octokit.GraphQL.Model.SecurityAdvisorySeverity}}})">
            <summary>
            Software Vulnerabilities documented by GitHub Security Advisories
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="classifications">A list of advisory classifications to filter vulnerabilities by.</param>
            <param name="ecosystem">An ecosystem to filter vulnerabilities by.</param>
            <param name="orderBy">Ordering options for the returned topics.</param>
            <param name="package">A package name to filter vulnerabilities by.</param>
            <param name="severities">A list of severities to filter vulnerabilities by.</param>
        </member>
        <member name="M:Octokit.GraphQL.Query.Sponsorables(System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Int32}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SecurityAdvisoryEcosystem}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.DependencyGraphEcosystem}},System.Nullable{Octokit.GraphQL.Core.Arg{System.Boolean}},System.Nullable{Octokit.GraphQL.Core.Arg{Octokit.GraphQL.Model.SponsorableOrder}},System.Nullable{Octokit.GraphQL.Core.Arg{System.String}})">
            <summary>
            Users and organizations who can be sponsored via GitHub Sponsors.
            </summary>
            <param name="first">Returns the first _n_ elements from the list.</param>
            <param name="after">Returns the elements in the list that come after the specified cursor.</param>
            <param name="last">Returns the last _n_ elements from the list.</param>
            <param name="before">Returns the elements in the list that come before the specified cursor.</param>
            <param name="dependencyEcosystem">Optional filter for which dependencies should be checked for sponsorable owners. Only sponsorable owners of dependencies in this ecosystem will be included. Used when onlyDependencies = true. **Upcoming Change on 2022-07-01 UTC** **Description:** `dependencyEcosystem` will be removed. Use the ecosystem argument instead. **Reason:** The type is switching from SecurityAdvisoryEcosystem to DependencyGraphEcosystem.</param>
            <param name="ecosystem">Optional filter for which dependencies should be checked for sponsorable owners. Only sponsorable owners of dependencies in this ecosystem will be included. Used when onlyDependencies = true.</param>
            <param name="onlyDependencies">Whether only sponsorables who own the viewer's dependencies will be returned. Must be authenticated to use. Can check an organization instead for their dependencies owned by sponsorables by passing orgLoginForDependencies.</param>
            <param name="orderBy">Ordering options for users and organizations returned from the connection.</param>
            <param name="orgLoginForDependencies">Optional organization username for whose dependencies should be checked. Used when onlyDependencies = true. Omit to check your own dependencies. If you are not an administrator of the organization, only dependencies from its public repositories will be considered.</param>
        </member>
        <member name="M:Octokit.GraphQL.Query.Topic(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Look up a topic by name.
            </summary>
            <param name="name">The topic's name.</param>
        </member>
        <member name="M:Octokit.GraphQL.Query.User(Octokit.GraphQL.Core.Arg{System.String})">
            <summary>
            Lookup a user by login.
            </summary>
            <param name="login">The user's login.</param>
        </member>
        <member name="P:Octokit.GraphQL.Query.Viewer">
            <summary>
            The currently authenticated user.
            </summary>
        </member>
    </members>
</doc>
